body {
  box-sizing: border-box;
  box-sizing: border-box;
  box-sizing: border-box;
}

@media screen and (min-width: 0px) {
  body {
    width: -webkit-calc(100% - 1em);
    width: -moz-calc(100% - 1em);
    width: calc(100% - 1em);
    margin-right: 0.5em;
    margin-left: 0.5em;
    float: left;
    clear: none;
    padding: 8px;
  }
}

@media screen and (min-width: 49.1875em) {
  body {
    width: -webkit-calc(83.33333% - 1em);
    width: -moz-calc(83.33333% - 1em);
    width: calc(83.33333% - 1em);
    margin-right: 0.5em;
    margin-left: 0.5em;
    float: left;
    clear: none;
    padding: 0;
    margin-left: 8.33333%;
  }
}

@media screen and (min-width: 56.25em) {
  body {
    width: -webkit-calc(66.66667% - 1em);
    width: -moz-calc(66.66667% - 1em);
    width: calc(66.66667% - 1em);
    margin-right: 0.5em;
    margin-left: 0.5em;
    float: left;
    clear: none;
    margin-left: 16.66667%;
  }
}

h1 {
  font-size: 2.38879em;
}

@media screen and (min-width: 49.1875em) {
  h1 {
    font-size: 2.98598em;
  }
}

h2 {
  font-size: 1.99066em;
}

@media screen and (min-width: 49.1875em) {
  h2 {
    font-size: 2.48832em;
  }
}

h3 {
  font-size: 1.65888em;
}

@media screen and (min-width: 49.1875em) {
  h3 {
    font-size: 2.0736em;
  }
}

h4 {
  font-size: 1.3824em;
}

@media screen and (min-width: 49.1875em) {
  h4 {
    font-size: 1.728em;
  }
}

h5 {
  font-size: 1.152em;
}

@media screen and (min-width: 49.1875em) {
  h5 {
    font-size: 1.44em;
  }
}

h6 {
  font-size: 0.96em;
}

@media screen and (min-width: 49.1875em) {
  h6 {
    font-size: 1.2em;
  }
}

p {
  font-size: 0.8em;
}

@media screen and (min-width: 49.1875em) {
  p {
    font-size: 1em;
  }
}

body {
  color: #333;
  font-family: "Lucida Grande", "Tahoma", "Verdana", "Arial", sans-serif;
  font-feature-settings: "kern", "liga", "pnum";
  font-size: 1em;
  line-height: 1.6;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Lucida Grande", "Tahoma", "Verdana", "Arial", sans-serif;
  line-height: 1.1;
  margin: 0.26667em 0 0.8em;
}

p {
  margin: 0 0 0.8em;
}

a {
  color: #477dca;
  text-decoration: none;
  transition: color 150ms ease;
}

a:active,
a:focus,
a:hover {
  color: #355e98;
}

hr {
  border-bottom: 1px solid #ddd;
  border-left: 0;
  border-right: 0;
  border-top: 0;
  margin: 1.6em 0;
}

img,
picture {
  margin: 0;
  max-width: 100%;
}

table {
  border-collapse: collapse;
  font-feature-settings: "kern", "liga", "tnum";
  margin: 0.8em 0;
  table-layout: fixed;
  width: 100%;
}

th {
  border-bottom: 1px solid #a6a6a6;
  font-weight: 600;
  padding: 0.8em 0;
  text-align: left;
}

td {
  border-bottom: 1px solid #ddd;
  padding: 0.8em 0;
}

tr,
td,
th {
  vertical-align: middle;
}

fieldset {
  background-color: #f7f7f7;
  border: 1px solid #ddd;
  margin: 0 0 0.8em;
  padding: 1.6em;
  border-radius: 2.5px;
}

input,
label,
select {
  display: block;
  font-family: "Lucida Grande", "Tahoma", "Verdana", "Arial", sans-serif;
  font-size: 1em;
}

label {
  font-weight: 600;
  margin-bottom: 0.4em;
}

label.required::after {
  content: "*";
}

label abbr {
  display: none;
}

input[type="color"], input[type="date"], input[type="datetime"], input[type="datetime-local"], input[type="email"], input[type="month"], input[type="number"], input[type="password"], input[type="search"], input[type="tel"], input[type="text"], input[type="time"], input[type="url"], input[type="week"], input:not([type]), textarea,
select[multiple=multiple] {
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 5px;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06);
  box-sizing: border-box;
  font-family: "Lucida Grande", "Tahoma", "Verdana", "Arial", sans-serif;
  font-size: 1em;
  margin-bottom: 0.8em;
  padding: 0.53333em;
  transition: border-color 150ms ease;
  width: 100%;
}

input[type="color"]:hover, input[type="date"]:hover, input[type="datetime"]:hover, input[type="datetime-local"]:hover, input[type="email"]:hover, input[type="month"]:hover, input[type="number"]:hover, input[type="password"]:hover, input[type="search"]:hover, input[type="tel"]:hover, input[type="text"]:hover, input[type="time"]:hover, input[type="url"]:hover, input[type="week"]:hover, input:not([type]):hover, textarea:hover,
select[multiple=multiple]:hover {
  border-color: #b1b1b1;
}

input[type="color"]:focus, input[type="date"]:focus, input[type="datetime"]:focus, input[type="datetime-local"]:focus, input[type="email"]:focus, input[type="month"]:focus, input[type="number"]:focus, input[type="password"]:focus, input[type="search"]:focus, input[type="tel"]:focus, input[type="text"]:focus, input[type="time"]:focus, input[type="url"]:focus, input[type="week"]:focus, input:not([type]):focus, textarea:focus,
select[multiple=multiple]:focus {
  border-color: #477dca;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06), 0 0 5px rgba(55, 112, 192, 0.7);
  outline: none;
}

input[type="color"]:disabled, input[type="date"]:disabled, input[type="datetime"]:disabled, input[type="datetime-local"]:disabled, input[type="email"]:disabled, input[type="month"]:disabled, input[type="number"]:disabled, input[type="password"]:disabled, input[type="search"]:disabled, input[type="tel"]:disabled, input[type="text"]:disabled, input[type="time"]:disabled, input[type="url"]:disabled, input[type="week"]:disabled, input:not([type]):disabled, textarea:disabled,
select[multiple=multiple]:disabled {
  background-color: #f2f2f2;
  cursor: not-allowed;
}

input[type="color"]:disabled:hover, input[type="date"]:disabled:hover, input[type="datetime"]:disabled:hover, input[type="datetime-local"]:disabled:hover, input[type="email"]:disabled:hover, input[type="month"]:disabled:hover, input[type="number"]:disabled:hover, input[type="password"]:disabled:hover, input[type="search"]:disabled:hover, input[type="tel"]:disabled:hover, input[type="text"]:disabled:hover, input[type="time"]:disabled:hover, input[type="url"]:disabled:hover, input[type="week"]:disabled:hover, input:not([type]):disabled:hover, textarea:disabled:hover,
select[multiple=multiple]:disabled:hover {
  border: 1px solid #ddd;
}

textarea {
  resize: vertical;
}

input[type="search"] {
  appearance: none;
}

input[type="checkbox"],
input[type="radio"] {
  display: inline;
  margin-right: 0.4em;
}

input[type="file"] {
  margin-bottom: 0.8em;
  width: 100%;
}

select {
  margin-bottom: 1.6em;
  max-width: 100%;
  width: auto;
}

ul,
ol {
  list-style-type: none;
  margin: 0;
  padding: 0;
  margin-bottom: 0.8em;
  padding-left: 2.8em;
}

ul {
  list-style-type: disc;
}

ol {
  list-style-type: decimal;
}

dl {
  margin-bottom: 0.8em;
}

dl dt {
  font-weight: bold;
  margin-top: 0.8em;
}

dl dd {
  margin: 0;
}

pre {
  background-color: #f7f7f7;
  padding: 1.6em;
  font-family: "Bitstream Vera Sans Mono", "Consolas", "Courier", monospace;
  overflow: scroll;
}

button, input[type="button"], input[type="reset"], input[type="submit"] {
  appearance: none;
  background-color: #477dca;
  border: 0;
  border-radius: 5px;
  color: #fff;
  cursor: pointer;
  display: inline-block;
  font-family: "Lucida Grande", "Tahoma", "Verdana", "Arial", sans-serif;
  font-size: 1em;
  -webkit-font-smoothing: antialiased;
  font-weight: 600;
  line-height: 1;
  padding: 0.8em 1.6em;
  text-decoration: none;
  transition: background-color 150ms ease;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
}

button:hover,
button:focus, input[type="button"]:hover,
input[type="button"]:focus, input[type="reset"]:hover,
input[type="reset"]:focus, input[type="submit"]:hover,
input[type="submit"]:focus {
  background-color: #3964a2;
  color: #fff;
}

button:disabled, input[type="button"]:disabled, input[type="reset"]:disabled, input[type="submit"]:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

button:disabled:hover, input[type="button"]:disabled:hover, input[type="reset"]:disabled:hover, input[type="submit"]:disabled:hover {
  background-color: #477dca;
}

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
.facebook {
  background-image: url(../img/sprites.png);
  background-position: 0px -120px;
  width: 121px;
  height: 120px;
  display: inline-block;
  margin: 0.8em;
}

.github {
  background-image: url(../img/sprites.png);
  background-position: -149px 0px;
  width: 142px;
  height: 120px;
  display: inline-block;
  margin: 0.8em;
}

.twitter {
  background-image: url(../img/sprites.png);
  background-position: 0px 0px;
  width: 149px;
  height: 120px;
  display: inline-block;
  margin: 0.8em;
}

.youtube {
  background-image: url(../img/sprites.png);
  background-position: -121px -120px;
  width: 120px;
  height: 120px;
  display: inline-block;
  margin: 0.8em;
}

.hover-tile-outer {
  background: url("https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/mountains.png");
  background-position: top;
  background-size: cover;
  background-color: beige;
  border: 1px solid #ddd;
  cursor: pointer;
  display: inline-block;
  height: 15em;
  margin-bottom: 1.6;
}

@media screen and (min-width: 40em) {
  .hover-tile-outer {
    width: 40%;
  }
}

.hover-tile-outer .hover-tile-container {
  height: 15em;
  overflow: hidden;
}

.hover-tile-outer .hover-tile-container:hover > .hover-tile {
  -webkit-transform: translate(0, -100%);
  -moz-transform: translate(0, -100%);
  -ms-transform: translate(0, -100%);
  -o-transform: translate(0, -100%);
  transform: translate(0, -100%);
}

.hover-tile-outer .hover-tile {
  -webkit-transition: all, 0.2s ease-in-out;
  -moz-transition: all, 0.2s ease-in-out;
  transition: all, 0.2s ease-in-out;
  background: inherit;
  color: white;
  height: inherit;
  overflow: hidden;
  padding: 1.5em;
}

.hover-tile-outer .hover-tile-hidden {
  background: rgba(0, 0, 0, 0.5);
}

.hover-tile-outer .hover-tile-hidden p {
  color: rgba(255, 255, 255, 0.7);
  line-height: 1.6;
}

.hover-tile-outer .hover-tile-hidden h4 {
  margin: 0 0 0.5em 0;
}

/*# sourceMappingURL=data:application/json;base64, */