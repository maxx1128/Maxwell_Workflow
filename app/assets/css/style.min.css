@charset "UTF-8";
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent displaying `audio` without controls in Mobile Safari 4/5/6/7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address inconsistent styling of `abbr[title]`.
 * 1. Correct styling in Firefox 39 and Opera 12.
 * 2. Correct missing styling in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Address inconsistent styling of b and strong.
 * 1. Correct duplicate application of `bolder` in Safari 6.0.2.
 * 2. Correct style set to `bold` in Edge 12+, Safari 6.2+, and Chrome 18+.
 */
b,
strong {
  font-weight: inherit;
  /* 1 */
}

b,
strong {
  font-weight: bolder;
  /* 2 */
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address inconsistent styling of `hr`.
 * 1. Correct `box-sizing` set to `border-box` in Firefox.
 * 2. Correct `overflow` set to `hidden` in IE 8/9/10/11 and Edge 12.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * 1. Correct inheritance and scaling of font-size for preformatted text.
 * 2. Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct font properties not being inherited.
 * 2. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"], input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Restore focus style in Firefox 4+ (unset by a rule above)
 */
button:-moz-focusring,
input:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * Address `appearance` set to `searchfield` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Restore font weight (unset by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

body {
  color: #333;
  font-family: "Lucida Grande", "Tahoma", "Verdana", "Arial", sans-serif;
  font-feature-settings: "kern", "liga", "pnum";
  font-size: 16px;
  font-size: 1rem;
  line-height: 32px;
  line-height: 2rem;
}

h1 {
  font-size: 48.82812px;
  font-size: 3.05176rem;
}

@media screen and (min-width: 49.1875em) {
  h1 {
    font-size: 61.03516px;
    font-size: 3.8147rem;
  }
}

h2 {
  font-size: 39.0625px;
  font-size: 2.44141rem;
}

@media screen and (min-width: 49.1875em) {
  h2 {
    font-size: 48.82812px;
    font-size: 3.05176rem;
  }
}

h3 {
  font-size: 31.25px;
  font-size: 1.95312rem;
}

@media screen and (min-width: 49.1875em) {
  h3 {
    font-size: 39.0625px;
    font-size: 2.44141rem;
  }
}

h4 {
  font-size: 25px;
  font-size: 1.5625rem;
}

@media screen and (min-width: 49.1875em) {
  h4 {
    font-size: 31.25px;
    font-size: 1.95312rem;
  }
}

h5 {
  font-size: 20px;
  font-size: 1.25rem;
}

@media screen and (min-width: 49.1875em) {
  h5 {
    font-size: 25px;
    font-size: 1.5625rem;
  }
}

h6 {
  font-size: 16px;
  font-size: 1rem;
}

@media screen and (min-width: 49.1875em) {
  h6 {
    font-size: 20px;
    font-size: 1.25rem;
  }
}

p {
  font-size: 12.8px;
  font-size: 0.8rem;
}

@media screen and (min-width: 49.1875em) {
  p {
    font-size: 16px;
    font-size: 1rem;
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Verdana", "Geneva", sans-serif;
  line-height: 64px;
  line-height: 4rem;
  margin-top: 64px;
  margin-top: 4rem;
  margin-bottom: 32px;
  margin-bottom: 2rem;
}

h1 + h2 {
  margin-top: 32px;
  margin-top: 2rem;
}

h2 + h3,
h3 + h4,
h4 + h5 {
  margin-top: 16px;
  margin-top: 1rem;
}

h5 + h6 {
  margin-top: -16px;
  margin-top: -1rem;
}

p {
  margin-bottom: 32px;
  margin-bottom: 2rem;
}

a {
  color: #477dca;
  text-decoration: none;
  transition: color 150ms ease;
}

a:active,
a:focus,
a:hover {
  color: #355e98;
}

hr {
  border-bottom: 1px solid #ddd;
  border-left: 0;
  border-right: 0;
  border-top: 0;
  margin-top: 32px;
  margin-top: 2rem;
  margin-bottom: 32px;
  margin-bottom: 2rem;
}

strong {
  font-weight: 700;
}

em {
  font-style: italic;
}

img,
picture {
  margin: 0;
  max-width: 100%;
}

@media screen and (min-width: 30em) {
  body {
    width: -webkit-calc(100% - 2em);
    width: -moz-calc(100% - 2em);
    width: calc(100% - 2em);
    margin-right: 1em;
    margin-left: 1em;
    box-sizing: border-box;
    float: left;
    clear: none;
    padding: 8px;
  }
}

@media screen and (min-width: 49.1875em) {
  body {
    width: -webkit-calc(83.33333% - 2em);
    width: -moz-calc(83.33333% - 2em);
    width: calc(83.33333% - 2em);
    margin-right: 1em;
    margin-left: 1em;
    box-sizing: border-box;
    float: left;
    clear: none;
    padding: 0;
    margin-left: 8.33333%;
  }
}

@media screen and (min-width: 56.25em) {
  body {
    width: -webkit-calc(66.66667% - 2em);
    width: -moz-calc(66.66667% - 2em);
    width: calc(66.66667% - 2em);
    margin-right: 1em;
    margin-left: 1em;
    box-sizing: border-box;
    float: left;
    clear: none;
    margin-left: 16.66667%;
  }
}

.element {
  color: red;
}

.element__child {
  color: blue;
}

table {
  border-collapse: collapse;
  font-feature-settings: "kern", "liga", "tnum";
  margin: 1em 0;
  table-layout: fixed;
  width: 100%;
}

th {
  border-bottom: 1px solid #a6a6a6;
  font-weight: 600;
  padding: 1em 0;
  text-align: left;
}

td {
  border-bottom: 1px solid #ddd;
  padding: 1em 0;
}

tr,
td,
th {
  vertical-align: middle;
}

fieldset {
  background-color: #f7f7f7;
  border: 1px solid #ddd;
  margin: 0 0 1em;
  padding: 2em;
  border-radius: 0.25em;
}

input,
label,
select {
  display: block;
  font-family: "Lucida Grande", "Tahoma", "Verdana", "Arial", sans-serif;
  font-size: 100;
}

label {
  font-weight: 600;
  margin-bottom: 0.5em;
}

label.required::after {
  content: "*";
}

label abbr {
  display: none;
}

input[type="color"], input[type="date"], input[type="datetime"], input[type="datetime-local"], input[type="email"], input[type="month"], input[type="number"], input[type="password"], input[type="search"], input[type="tel"], input[type="text"], input[type="time"], input[type="url"], input[type="week"], input:not([type]), textarea,
select[multiple=multiple] {
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 0.5em;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06);
  box-sizing: border-box;
  font-family: "Lucida Grande", "Tahoma", "Verdana", "Arial", sans-serif;
  font-size: 100;
  margin-bottom: 1em;
  padding: 0.66667em;
  transition: border-color 150ms ease;
  width: 100%;
}

input[type="color"]:hover, input[type="date"]:hover, input[type="datetime"]:hover, input[type="datetime-local"]:hover, input[type="email"]:hover, input[type="month"]:hover, input[type="number"]:hover, input[type="password"]:hover, input[type="search"]:hover, input[type="tel"]:hover, input[type="text"]:hover, input[type="time"]:hover, input[type="url"]:hover, input[type="week"]:hover, input:not([type]):hover, textarea:hover,
select[multiple=multiple]:hover {
  border-color: #b1b1b1;
}

input[type="color"]:focus, input[type="date"]:focus, input[type="datetime"]:focus, input[type="datetime-local"]:focus, input[type="email"]:focus, input[type="month"]:focus, input[type="number"]:focus, input[type="password"]:focus, input[type="search"]:focus, input[type="tel"]:focus, input[type="text"]:focus, input[type="time"]:focus, input[type="url"]:focus, input[type="week"]:focus, input:not([type]):focus, textarea:focus,
select[multiple=multiple]:focus {
  border-color: #477dca;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06), 0 0 5px rgba(55, 112, 192, 0.7);
  outline: none;
}

input[type="color"]:disabled, input[type="date"]:disabled, input[type="datetime"]:disabled, input[type="datetime-local"]:disabled, input[type="email"]:disabled, input[type="month"]:disabled, input[type="number"]:disabled, input[type="password"]:disabled, input[type="search"]:disabled, input[type="tel"]:disabled, input[type="text"]:disabled, input[type="time"]:disabled, input[type="url"]:disabled, input[type="week"]:disabled, input:not([type]):disabled, textarea:disabled,
select[multiple=multiple]:disabled {
  background-color: #f2f2f2;
  cursor: not-allowed;
}

input[type="color"]:disabled:hover, input[type="date"]:disabled:hover, input[type="datetime"]:disabled:hover, input[type="datetime-local"]:disabled:hover, input[type="email"]:disabled:hover, input[type="month"]:disabled:hover, input[type="number"]:disabled:hover, input[type="password"]:disabled:hover, input[type="search"]:disabled:hover, input[type="tel"]:disabled:hover, input[type="text"]:disabled:hover, input[type="time"]:disabled:hover, input[type="url"]:disabled:hover, input[type="week"]:disabled:hover, input:not([type]):disabled:hover, textarea:disabled:hover,
select[multiple=multiple]:disabled:hover {
  border: 1px solid #ddd;
}

textarea {
  resize: vertical;
}

input[type="search"] {
  appearance: none;
}

input[type="checkbox"],
input[type="radio"] {
  display: inline;
  margin-right: 0.5em;
}

input[type="file"] {
  margin-bottom: 1em;
  width: 100%;
}

select {
  margin-bottom: 2em;
  max-width: 100%;
  width: auto;
}

ul,
ol {
  list-style-type: none;
  margin: 0;
  padding: 0;
  margin-bottom: 1em;
  padding-left: 3.5em;
}

ul {
  list-style-type: disc;
}

ol {
  list-style-type: decimal;
}

dl {
  margin-bottom: 1em;
}

dl dt {
  font-weight: bold;
  margin-top: 1em;
}

dl dd {
  margin: 0;
}

pre {
  padding: 2em;
  overflow: scroll;
  color: #ddd;
  font-family: "Bitstream Vera Sans Mono", "Consolas", "Courier", monospace;
  background-color: #333;
}

button, input[type="button"], input[type="reset"], input[type="submit"] {
  appearance: none;
  background-color: #477dca;
  border: 0;
  border-radius: 0.5em;
  color: #fff;
  cursor: pointer;
  display: inline-block;
  font-family: "Lucida Grande", "Tahoma", "Verdana", "Arial", sans-serif;
  font-size: 100;
  -webkit-font-smoothing: antialiased;
  font-weight: 600;
  line-height: 1;
  padding: 1em 2em;
  text-decoration: none;
  transition: background-color 150ms ease;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
}

button:hover,
button:focus, input[type="button"]:hover,
input[type="button"]:focus, input[type="reset"]:hover,
input[type="reset"]:focus, input[type="submit"]:hover,
input[type="submit"]:focus {
  background-color: #3964a2;
  color: #fff;
}

button:disabled, input[type="button"]:disabled, input[type="reset"]:disabled, input[type="submit"]:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

button:disabled:hover, input[type="button"]:disabled:hover, input[type="reset"]:disabled:hover, input[type="submit"]:disabled:hover {
  background-color: #477dca;
}

.navigation .navigation-menu-button {
  display: block;
  float: right;
  margin: 0;
  padding-top: 0.5em;
}

@media screen and (min-width: 30em) {
  .navigation .navigation-menu-button {
    display: none;
  }
}

.navigation .navigation-wrapper {
  position: relative;
}

.navigation .navigation-wrapper::after {
  clear: both;
  content: "";
  display: table;
}

.navigation .logo {
  float: left;
}

@media screen and (min-width: 30em) {
  .navigation .logo {
    float: none;
    text-align: center;
    display: block;
  }
}

@media screen and (min-width: 50em) {
  .navigation .logo {
    float: left;
  }
}

.navigation .logo img {
  max-height: 2em;
  padding-right: 1em;
}

.navigation nav {
  float: none;
}

@media screen and (min-width: 30em) {
  .navigation nav {
    float: left;
    text-align: center;
    line-height: 1.5em;
    padding-top: 0.3em;
  }
}

.navigation ul.navigation-menu {
  clear: both;
  display: none;
  margin: 0 auto;
  overflow: visible;
  padding: 0;
  width: 100%;
}

@media screen and (min-width: 30em) {
  .navigation ul.navigation-menu {
    display: block;
    margin: 0;
    padding: 0;
  }
}

.navigation ul.navigation-menu.show {
  display: block;
}

.navigation ul li.nav-link {
  display: block;
  text-align: right;
  width: 100%;
}

@media screen and (min-width: 30em) {
  .navigation ul li.nav-link {
    background: transparent;
    display: inline;
    text-decoration: none;
    width: auto;
  }
}

.navigation li.nav-link a {
  display: inline-block;
}

@media screen and (min-width: 50em) {
  .navigation li.nav-link a {
    padding-right: 1em;
  }
}

.hover-menu {
  overflow: visible;
  padding-right: 0;
}

@media screen and (min-width: 50em) {
  .hover-menu {
    position: relative;
  }
}

.hover-menu .hover-menu-item {
  left: 0;
  position: relative;
}

.hover-menu .hover-menu-item::after {
  content: "›";
  padding-left: 0.5em;
}

.hover-menu .submenu {
  display: none;
  margin: 0;
  padding-left: 0;
}

@media screen and (min-width: 50em) {
  .hover-menu .submenu {
    left: 0;
    position: absolute;
  }
}

.hover-menu .submenu li {
  display: block;
  padding-right: 0;
}

.hover-menu .submenu li a {
  display: inline-block;
  text-align: right;
  width: 100%;
}

@media screen and (min-width: 50em) {
  .hover-menu .submenu li a {
    text-align: left;
    width: 12em;
  }
}

@media screen and (min-width: 50em) {
  .hover-menu .submenu .submenu {
    left: 12em;
    top: 0;
  }
}

.hover-menu:focus > .submenu,
.hover-menu:hover > .submenu {
  display: block;
}

.sliding-panel-content {
  position: fixed;
  top: 0;
  right: auto;
  bottom: 0;
  left: 0;
  height: 100%;
  width: 220px;
  -webkit-transform: translateX(-220px);
  -moz-transform: translateX(-220px);
  -ms-transform: translateX(-220px);
  -o-transform: translateX(-220px);
  transform: translateX(-220px);
  -webkit-transition: all 0.25s linear;
  -moz-transition: all 0.25s linear;
  transition: all 0.25s linear;
  background: #fff;
  padding: 1em;
  -webkit-overflow-scrolling: touch;
  overflow-y: auto;
  z-index: 4001;
  opacity: 0;
}

.sliding-panel-content.is-visible {
  -webkit-transform: translateX(0);
  -moz-transform: translateX(0);
  -ms-transform: translateX(0);
  -o-transform: translateX(0);
  transform: translateX(0);
  opacity: 1;
}

.sliding-panel-fade-screen {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  -webkit-transition: all 0.15s ease-out 0s;
  -moz-transition: all 0.15s ease-out 0s;
  transition: all 0.15s ease-out 0s;
  background: #000;
  opacity: 0;
  visibility: hidden;
  z-index: 4000;
}

.sliding-panel-fade-screen.is-visible {
  opacity: 0.4;
  visibility: visible;
}

.sliding-panel-close {
  cursor: pointer;
  z-index: 4001;
}

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
.facebook {
  background-image: url(../img/sprites.png);
  background-position: 0px -120px;
  width: 121px;
  height: 120px;
  display: inline-block;
  margin: 1em;
}

.github {
  background-image: url(../img/sprites.png);
  background-position: -149px 0px;
  width: 142px;
  height: 120px;
  display: inline-block;
  margin: 1em;
}

.twitter {
  background-image: url(../img/sprites.png);
  background-position: 0px 0px;
  width: 149px;
  height: 120px;
  display: inline-block;
  margin: 1em;
}

.youtube {
  background-image: url(../img/sprites.png);
  background-position: -121px -120px;
  width: 120px;
  height: 120px;
  display: inline-block;
  margin: 1em;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2UvX25vcm1hbGl6ZS5zY3NzIiwiYmFzZS9fdHlwb2dyYXBoeS5zY3NzIiwidXRpbHMvX3ZhcmlhYmxlcy5zY3NzIiwiLi4vY29tcG9uZW50cy9ib3VyYm9uL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvYWRkb25zL19mb250LXN0YWNrcy5zY3NzIiwidXRpbHMvX21peGlucy5zY3NzIiwiLi4vY29tcG9uZW50cy9ib3VyYm9uL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvZnVuY3Rpb25zL19weC10by1yZW0uc2NzcyIsIi4uL2NvbXBvbmVudHMvYm91cmJvbi9hcHAvYXNzZXRzL3N0eWxlc2hlZXRzL2Z1bmN0aW9ucy9fbW9kdWxhci1zY2FsZS5zY3NzIiwiLi4vY29tcG9uZW50cy9ib3VyYm9uL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvZnVuY3Rpb25zL19zaGFkZS5zY3NzIiwiLi4vY29tcG9uZW50cy9TeW5hcHNlLUdyaWQvX3N5bmFwc2UtZ3JpZC5zY3NzIiwibGF5b3V0L19ncmlkLnNjc3MiLCIuLi9jb21wb25lbnRzL2JlbWlmeS9zYXNzL19iZW1pZnkuc2NzcyIsImNvbXBvbmVudHMvX3RhYmxlcy5zY3NzIiwiY29tcG9uZW50cy9fZm9ybXMuc2NzcyIsIi4uL2NvbXBvbmVudHMvYm91cmJvbi9hcHAvYXNzZXRzL3N0eWxlc2hlZXRzL2Z1bmN0aW9ucy9fdGludC5zY3NzIiwiY29tcG9uZW50cy9fbGlzdHMuc2NzcyIsImNvbXBvbmVudHMvX3ByZS5zY3NzIiwiY29tcG9uZW50cy9fYnV0dG9ucy5zY3NzIiwiY29tcG9uZW50cy9fbWFpbi1uYXYuc2NzcyIsIi4uL2NvbXBvbmVudHMvYm91cmJvbi9hcHAvYXNzZXRzL3N0eWxlc2hlZXRzL2FkZG9ucy9fY2xlYXJmaXguc2NzcyIsImNvbXBvbmVudHMvX2hvdmVyLW5hdi5zY3NzIiwiY29tcG9uZW50cy9fc2lkZS1uYXYuc2NzcyIsIi4uL2NvbXBvbmVudHMvYm91cmJvbi9hcHAvYXNzZXRzL3N0eWxlc2hlZXRzL2FkZG9ucy9fcG9zaXRpb24uc2NzcyIsIi4uL2NvbXBvbmVudHMvYm91cmJvbi9hcHAvYXNzZXRzL3N0eWxlc2hlZXRzL2FkZG9ucy9fc2l6ZS5zY3NzIiwiLi4vY29tcG9uZW50cy9ib3VyYm9uL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvYWRkb25zL19wcmVmaXhlci5zY3NzIiwiLi4vY29tcG9uZW50cy9ib3VyYm9uL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvaGVscGVycy9fZGlyZWN0aW9uYWwtdmFsdWVzLnNjc3MiLCIuLi9jb21wb25lbnRzL2JvdXJib24vYXBwL2Fzc2V0cy9zdHlsZXNoZWV0cy9jc3MzL190cmFuc2l0aW9uLnNjc3MiLCJjb21wb25lbnRzL19zcHJpdGVzLnNjc3MiLCJjb21wb25lbnRzL19zcHJpdGVzLXNldHRpbmdzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLDRFQUE0RTtBQUU1RTs7OztHQUlHO0FBRUgsSUFBSSxDQUFDO0VBQ0gsV0FBVyxFQUFFLFVBQVc7RUFBRSxPQUFPO0VBQ2pDLG9CQUFvQixFQUFFLElBQUs7RUFBRSxPQUFPO0VBQ3BDLHdCQUF3QixFQUFFLElBQUs7RUFBRSxPQUFPO0NBSHBDOztBQU1OOztHQUVHO0FBRUgsSUFBSSxDQUFDO0VBQ0gsTUFBTSxFQUFFLENBQUU7Q0FETjs7QUFJTjtnRkFDZ0Y7QUFFaEY7Ozs7O0dBS0c7QUFhSCxPQUFPO0FBQ1AsS0FBSztBQUNMLE9BQU87QUFDUCxVQUFVO0FBQ1YsTUFBTTtBQUNOLE1BQU07QUFDTixNQUFNO0FBQ04sSUFBSTtBQUNKLElBQUk7QUFDSixHQUFHO0FBQ0gsT0FBTztBQUNQLE9BQU8sQ0FYQztFQUNOLE9BQU8sRUFBRSxLQUFNO0NBRFI7O0FBSVQ7OztHQUdHO0FBS0gsS0FBSztBQUNMLE1BQU07QUFDTixRQUFRO0FBQ1IsS0FBSyxDQUhDO0VBQ0osT0FBTyxFQUFFLFlBQWE7RUFBRSxPQUFPO0VBQy9CLGNBQWMsRUFBRSxRQUFTO0VBQUUsT0FBTztDQUY3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QyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxLQUFMLEFBQVUsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxNQUFMLEFBQVcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxLQUFLLENBQUEsSUFBQyxFQUFNLE1BQU0sRUFBRSxRQUFRLE1BQU07QUFDN2EsTUFBTSxDQUFBLFFBQUMsQ0FBRCxRQUFDLENBQWtCLE1BQU0sQ0FEckI7RUFDTixZQUFZLEVMckJOLE9BQUc7Q0tvQkY7O0FBSVIsS0FBSyxDQUFBLElBQUMsQ0FBSyxPQUFMLEFBQVksQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxNQUFMLEFBQVcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxVQUFMLEFBQWUsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxnQkFBTCxBQUFxQixDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLE9BQUwsQUFBWSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLE9BQUwsQUFBWSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLFFBQUwsQUFBYSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLFVBQUwsQUFBZSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLFFBQUwsQUFBYSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLEtBQUwsQUFBVSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLE1BQUwsQUFBVyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLE1BQUwsQUFBVyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLEtBQUwsQUFBVSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLE1BQUwsQUFBVyxDQUFDLE1BQU0sRUFBRSxLQUFLLEtBQUssQ0FBQSxJQUFDLEVBQU0sTUFBTSxFQUFFLFFBQVEsTUFBTTtBQUM3YSxNQUFNLENBQUEsUUFBQyxDQUFELFFBQUMsQ0FBa0IsTUFBTSxDQURyQjtFQUNOLFlBQVksRVZPTixPQUFPO0VVTmIsVUFBVSxFVmtDSSxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQU0sbUJBQUksRUFHRCxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyx1QkFBWTtFVXBDMUQsT0FBTyxFQUFFLElBQUs7Q0FIUDs7QUFNUixLQUFLLENBQUEsSUFBQyxDQUFLLE9BQUwsQUFBWSxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLE1BQUwsQUFBVyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLFVBQUwsQUFBZSxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLGdCQUFMLEFBQXFCLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQSxJQUFDLENBQUssT0FBTCxBQUFZLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQSxJQUFDLENBQUssT0FBTCxBQUFZLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQSxJQUFDLENBQUssUUFBTCxBQUFhLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQSxJQUFDLENBQUssVUFBTCxBQUFlLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQSxJQUFDLENBQUssUUFBTCxBQUFhLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQSxJQUFDLENBQUssS0FBTCxBQUFVLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQSxJQUFDLENBQUssTUFBTCxBQUFXLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQSxJQUFDLENBQUssTUFBTCxBQUFXLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQSxJQUFDLENBQUssS0FBTCxBQUFVLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQSxJQUFDLENBQUssTUFBTCxBQUFXLENBQUMsU0FBUyxFQUFFLEtBQUssS0FBSyxDQUFBLElBQUMsRUFBTSxTQUFTLEVBQUUsUUFBUSxTQUFTO0FBQzdkLE1BQU0sQ0FBQSxRQUFDLENBQUQsUUFBQyxDQUFrQixTQUFTLENBRHJCO0VBQ1QsZ0JBQWdCLEVML0JWLE9BQUc7RUtnQ1QsTUFBTSxFQUFFLFdBQVk7Q0FGVjs7QUFJVCxLQUFLLENBQUEsSUFBQyxDQUFLLE9BQUwsQUFBWSxDQUFDLFNBQVMsTUFBTSxFQUFFLEtBQUssQ0FBQSxJQUFDLENBQUssTUFBTCxBQUFXLENBQUMsU0FBUyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxVQUFMLEFBQWUsQ0FBQyxTQUFTLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLGdCQUFMLEFBQXFCLENBQUMsU0FBUyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxPQUFMLEFBQVksQ0FBQyxTQUFTLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLE9BQUwsQUFBWSxDQUFDLFNBQVMsTUFBTSxFQUFFLEtBQUssQ0FBQSxJQUFDLENBQUssUUFBTCxBQUFhLENBQUMsU0FBUyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxVQUFMLEFBQWUsQ0FBQyxTQUFTLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLFFBQUwsQUFBYSxDQUFDLFNBQVMsTUFBTSxFQUFFLEtBQUssQ0FBQSxJQUFDLENBQUssS0FBTCxBQUFVLENBQUMsU0FBUyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxNQUFMLEFBQVcsQ0FBQyxTQUFTLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLE1BQUwsQUFBVyxDQUFDLFNBQVMsTUFBTSxFQUFFLEtBQUssQ0FBQSxJQUFDLENBQUssS0FBTCxBQUFVLENBQUMsU0FBUyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxNQUFMLEFBQVcsQ0FBQyxTQUFTLE1BQU0sRUFBRSxLQUFLLEtBQUssQ0FBQSxJQUFDLEVBQU0sU0FBUyxNQUFNLEVBQUUsUUFBUSxTQUFTLE1BQU07QUFDL2pCLE1BQU0sQ0FBQSxRQUFDLENBQUQsUUFBQyxDQUFrQixTQUFTLE1BQU0sQ0FENUI7RUFDTixNQUFNLEVWZ0JFLEdBQUcsQ0FBQyxLQUFLLENBaEJkLElBQUk7Q1VEQTs7QUFNYixRQUFRLENBQUM7RUFDUCxNQUFNLEVBQUUsUUFBUztDQURUOztBQUlTLEtBQUssQ0FBQSxJQUFDLENBQUssUUFBTCxBQUFhLEVBQWpCO0VBQ25CLFVBQVUsRUFBRSxJQUFLO0NBREc7O0FBS0osS0FBSyxDQUFBLElBQUMsQ0FBSyxVQUFMLEFBQWU7QUFDdkMsS0FBSyxDQUFBLElBQUMsQ0FBSyxPQUFMLEFBQVksRUFERTtFQUNsQixPQUFPLEVBQUUsTUFBTztFQUNoQixZQUFZLEVBQUUsS0FBYztDQUZUOztBQUtKLEtBQUssQ0FBQSxJQUFDLENBQUssTUFBTCxBQUFXLEVBQWY7RUFDakIsYUFBYSxFVmdCQyxHQUFhO0VVZjNCLEtBQUssRUFBRSxJQUFLO0NBRk07O0FBS3BCLE1BQU0sQ0FBQztFQUNMLGFBQWEsRVZVQSxHQUFZO0VVVHpCLFNBQVMsRUFBRSxJQUFLO0VBQ2hCLEtBQUssRUFBRSxJQUFLO0NBSE47O0FFaEZSLEVBQUU7QUFDRixFQUFFLENBREM7RUFDRCxlQUFlLEVBQUUsSUFBSztFQUN0QixNQUFNLEVBQUUsQ0FBRTtFQUNWLE9BQU8sRUFBRSxDQUFFO0VBQ1gsYUFBYSxFWndGQyxHQUFhO0VZdkYzQixZQUFZLEVBQUUsS0FBYTtDQUx6Qjs7QUFRSixFQUFFLENBQUM7RUFDRCxlQUFlLEVBQUUsSUFBSztDQURwQjs7QUFJSixFQUFFLENBQUM7RUFDRCxlQUFlLEVBQUUsT0FBUTtDQUR2Qjs7QUFJSixFQUFFLENBQUM7RUFDRCxhQUFhLEVaMkVDLEdBQWE7Q1k1RXpCOztBQUdGLEVBQUUsQ0FBQyxFQUFFLENBQUY7RUFDRCxXQUFXLEVBQUUsSUFBSztFQUNsQixVQUFVLEVadUVFLEdBQWE7Q1l6RXZCOztBQUtKLEVBQUUsQ0FBQyxFQUFFLENBQUY7RUFDRCxNQUFNLEVBQUUsQ0FBRTtDQURSOztBQ3pCTixHQUFHLENBQUM7RUFDSCxPQUFPLEViMkZPLEdBQVk7RWExRjFCLFFBQVEsRUFBRSxNQUFPO0VBRWpCLEtBQUssRWJxREcsSUFBSTtFYXBEWixXQUFXLEVabUJBLDBCQUEwQixFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsU0FBUztFWWpCdkUsZ0JBQWdCLEViZ0RULElBQUk7Q2F2RFA7O0FDQUwsTUFBTSxFQUFFLEtBQUssQ0FBQSxJQUFDLENBQUssUUFBTCxBQUFhLEdBQUcsS0FBSyxDQUFBLElBQUMsQ0FBSyxPQUFMLEFBQVksR0FBRyxLQUFLLENBQUEsSUFBQyxDQUFLLFFBQUwsQUFBYSxFQUFyRTtFQUNDLFVBQVUsRUFBRSxJQUFLO0VBQ2pCLGdCQUFnQixFZG9EUixPQUFPO0VjbkRmLE1BQU0sRUFBRSxDQUFFO0VBQ1YsYUFBYSxFZHVGTSxLQUFZO0VjdEYvQixLQUFLLEVBQUUsSUFBSztFQUNaLE1BQU0sRUFBRSxPQUFRO0VBQ2hCLE9BQU8sRUFBRSxZQUFhO0VBQ3RCLFdBQVcsRWJVRyxlQUFlLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsVUFBVTtFYVR2RSxTQUFTLEVkVU0sR0FBRztFY1RsQixzQkFBc0IsRUFBRSxXQUFZO0VBQ3BDLFdBQVcsRUFBRSxHQUFJO0VBQ2pCLFdBQVcsRUFBRSxDQUFFO0VBQ2YsT0FBTyxFZGdGTyxHQUFhLENBRGQsR0FBWTtFYzlFekIsZUFBZSxFQUFFLElBQUs7RUFDdEIsVUFBVSxFQUFFLGdCQUFnQixDZDZGZCxLQUFLLENBQ1AsSUFBSTtFYzdGaEIsV0FBVyxFQUFFLElBQUs7RUFDbEIsY0FBYyxFQUFFLE1BQU87RUFDdkIsV0FBVyxFQUFFLE1BQU87Q0FsQnBCOztBQXFCQyxNQUFNLE1BQU07QUFDZixNQUFNLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLFFBQUwsQUFBYSxDQUFDLE1BQU07QUFDeEMsS0FBSyxDQUFBLElBQUMsQ0FBSyxRQUFMLEFBQWEsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxPQUFMLEFBQVksQ0FBQyxNQUFNO0FBQ3JELEtBQUssQ0FBQSxJQUFDLENBQUssT0FBTCxBQUFZLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQSxJQUFDLENBQUssUUFBTCxBQUFhLENBQUMsTUFBTTtBQUNyRCxLQUFLLENBQUEsSUFBQyxDQUFLLFFBQUwsQUFBYSxDQUFDLE1BQU0sQ0FKaEI7RUFDTixnQkFBZ0IsRVRBVixPQUFHO0VTQ1QsS0FBSyxFQUFFLElBQUs7Q0FGTDs7QUFLUixNQUFNLFNBQVMsRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLFFBQUwsQUFBYSxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLE9BQUwsQUFBWSxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLFFBQUwsQUFBYSxDQUFDLFNBQVMsQ0FBakc7RUFDVCxNQUFNLEVBQUUsV0FBWTtFQUNwQixPQUFPLEVBQUUsR0FBSTtDQUZIOztBQUlULE1BQU0sU0FBUyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxRQUFMLEFBQWEsQ0FBQyxTQUFTLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLE9BQUwsQUFBWSxDQUFDLFNBQVMsTUFBTSxFQUFFLEtBQUssQ0FBQSxJQUFDLENBQUssUUFBTCxBQUFhLENBQUMsU0FBUyxNQUFNLENBQTVIO0VBQ04sZ0JBQWdCLEVkdUJaLE9BQU87Q2N4Qko7O0FDeEJYLFdBQVcsQ0FBQyx1QkFBdUIsQ0FBWDtFQUN0QixPQUFPLEVBQUUsS0FBTTtFQUNmLEtBQUssRUFBRSxLQUFNO0VBQ2IsTUFBTSxFQUFFLENBQUU7RUFDVixXQUFXLEVBQUUsS0FBTTtDQUpJOztBYm9CekIsTUFBTSxDQUFOLE1BQU0sTUFBTSxTQUFTLEVBQUUsSUFBSTtFYXBCM0IsV0FBVyxDQUFDLHVCQUF1QixDQUFYO0lBT3BCLE9BQU8sRUFBRSxJQUFLO0dBUE87OztBQWF6QixXQUFXLENBQUMsbUJBQW1CLENBQVg7RUFFbEIsUUFBUSxFQUFFLFFBQVM7Q0FGQTs7QUNBcEIsV0FBVyxDQUFDLG1CQUFtQixPQUFPLENBQTlCO0VBQ1AsS0FBSyxFQUFFLElBQUs7RUFDWixPQUFPLEVBQUUsRUFBRztFQUNaLE9BQU8sRUFBRSxLQUFNO0NBSFA7O0FES1YsV0FBVyxDQUFDLEtBQUssQ0FBWDtFQUNKLEtBQUssRUFBRSxJQUFLO0NBRFA7O0FiRVAsTUFBTSxDQUFOLE1BQU0sTUFBTSxTQUFTLEVBQUUsSUFBSTtFYUYzQixXQUFXLENBQUMsS0FBSyxDQUFYO0lBSUYsS0FBSyxFQUFFLElBQUs7SUFDWixVQUFVLEVBQUUsTUFBTztJQUNuQixPQUFPLEVBQUUsS0FBTTtHQU5aOzs7QWJFUCxNQUFNLENBQU4sTUFBTSxNQUFNLFNBQVMsRUFBRSxJQUFJO0VhRjNCLFdBQVcsQ0FBQyxLQUFLLENBQVg7SUFVRixLQUFLLEVBQUUsSUFBSztHQVZUOzs7QUFhTCxXQUFXLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBakI7RUFDRixVQUFVLEVBQUUsR0FBSTtFQUNoQixhQUFhLEVBQUUsR0FBSTtDQUZoQjs7QUFNUCxXQUFXLENBQUMsR0FBRyxDQUFYO0VBQ0YsS0FBSyxFQUFFLElBQUs7Q0FEVDs7QWJqQkwsTUFBTSxDQUFOLE1BQU0sTUFBTSxTQUFTLEVBQUUsSUFBSTtFYWlCM0IsV0FBVyxDQUFDLEdBQUcsQ0FBWDtJQUlBLEtBQUssRUFBRSxJQUFLO0lBQ1osVUFBVSxFQUFFLE1BQU87SUFDbkIsV0FBVyxFQUFFLEtBQU07SUFDbkIsV0FBVyxFQUFFLEtBQU07R0FQbEI7OztBQVdILFdBQVcsQ0FBQyxFQUFFLGdCQUFnQixDQUFiO0VBQ2pCLEtBQUssRUFBRSxJQUFLO0VBQ1osT0FBTyxFQUFFLElBQUs7RUFDZCxNQUFNLEVBQUUsTUFBTztFQUNmLFFBQVEsRUFBRSxPQUFRO0VBQ2xCLE9BQU8sRUFBRSxDQUFFO0VBQ1gsS0FBSyxFQUFFLElBQUs7Q0FOTTs7QWI1QnBCLE1BQU0sQ0FBTixNQUFNLE1BQU0sU0FBUyxFQUFFLElBQUk7RWE0QnpCLFdBQVcsQ0FBQyxFQUFFLGdCQUFnQixDQUFiO0lBU2YsT0FBTyxFQUFFLEtBQU07SUFDZixNQUFNLEVBQUUsQ0FBRTtJQUNWLE9BQU8sRUFBRSxDQUFFO0dBWEs7OztBQWNqQixXQUFXLENBQUMsRUFBRSxnQkFBZ0IsS0FBSyxDQUE3QjtFQUNMLE9BQU8sRUFBRSxLQUFNO0NBRFQ7O0FBT0wsV0FBVyxDQUFDLEVBQUUsQ0FBQyxFQUFFLFNBQVMsQ0FBaEI7RUFDYixPQUFPLEVBQUUsS0FBTTtFQUNmLFVBQVUsRUFBRSxLQUFNO0VBQ2xCLEtBQUssRUFBRSxJQUFLO0NBSEU7O0FiakRoQixNQUFNLENBQU4sTUFBTSxNQUFNLFNBQVMsRUFBRSxJQUFJO0VhaUR0QixXQUFXLENBQUMsRUFBRSxDQUFDLEVBQUUsU0FBUyxDQUFoQjtJQU1YLFVBQVUsRUFBRSxXQUFZO0lBQ3hCLE9BQU8sRUFBRSxNQUFPO0lBQ2hCLGVBQWUsRUFBRSxJQUFLO0lBQ3RCLEtBQUssRUFBRSxJQUFLO0dBVEE7OztBQWFKLFdBQVcsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQXZCO0VBQ1osT0FBTyxFQUFFLFlBQWE7Q0FEVDs7QWI5RGYsTUFBTSxDQUFOLE1BQU0sTUFBTSxTQUFTLEVBQUUsSUFBSTtFYThEZixXQUFXLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUF2QjtJQUlWLGFBQWEsRUFBRSxHQUFJO0dBSlI7OztBRXhGakIsV0FBVyxDQUFDO0VBSVYsUUFBUSxFQUFFLE9BQVE7RUFDbEIsYUFBYSxFQUFFLENBQUU7Q0FMTjs7QWYwQlgsTUFBTSxDQUFOLE1BQU0sTUFBTSxTQUFTLEVBQUUsSUFBSTtFZTFCN0IsV0FBVyxDQUFDO0lBUVIsUUFBUSxFQUFFLFFBQVM7R0FSVjs7O0FBV1gsV0FBVyxDQUFDLGdCQUFnQixDQUFYO0VBQ2YsSUFBSSxFQUFFLENBQUU7RUFDUixRQUFRLEVBQUUsUUFBUztDQUZIOztBQUlmLFdBQVcsQ0FBQyxnQkFBZ0IsT0FBTyxDQUEzQjtFQUNQLE9BQU8sRUFBRSxLQUFNO0VBQ2YsWUFBWSxFQUFFLEtBQU07Q0FGWjs7QUFNWixXQUFXLENBQUMsUUFBUSxDQUFYO0VBQ1AsT0FBTyxFQUFFLElBQUs7RUFDZCxNQUFNLEVBQUUsQ0FBRTtFQUNWLFlBQVksRUFBRSxDQUFFO0NBSFI7O0FmS1YsTUFBTSxDQUFOLE1BQU0sTUFBTSxTQUFTLEVBQUUsSUFBSTtFZUwzQixXQUFXLENBQUMsUUFBUSxDQUFYO0lBTUwsSUFBSSxFQUFFLENBQUU7SUFDUixRQUFRLEVBQUUsUUFBUztHQVBiOzs7QUFXRCxXQUFXLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBcEI7RUFDVixPQUFPLEVBQUUsS0FBTTtFQUNmLGFBQWEsRUFBRSxDQUFFO0NBRk47O0FBS0QsV0FBVyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUF2QjtFQUNaLE9BQU8sRUFBRSxZQUFhO0VBQ3RCLFVBQVUsRUFBRSxLQUFNO0VBQ2xCLEtBQUssRUFBRSxJQUFLO0NBSEM7O0FmWGYsTUFBTSxDQUFOLE1BQU0sTUFBTSxTQUFTLEVBQUUsSUFBSTtFZVdmLFdBQVcsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBdkI7SUFNVixVQUFVLEVBQUUsSUFBSztJQUNqQixLQUFLLEVBMUNPLElBQUk7R0FtQ0w7OztBZlhmLE1BQU0sQ0FBTixNQUFNLE1BQU0sU0FBUyxFQUFFLElBQUk7RWVzQmxCLFdBQVcsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFwQjtJQUVkLElBQUksRUFoRFEsSUFBSTtJQWlEaEIsR0FBRyxFQUFFLENBQUU7R0FIUTs7O0FBUVQsV0FBVyxNQUFNLEdBQUcsUUFBUTtBQUN4QyxXQUFXLE1BQU0sR0FBRyxRQUFRLENBRFA7RUFDakIsT0FBTyxFQUFFLEtBQU07Q0FERzs7QUN4RHRCLHNCQUFzQixDQUFDO0VDd0NyQixRQUFRLEVEckNVLEtBQUs7RUN5Q25CLEdBQVUsRUR6Q1csQ0FBQztFQ3lDdEIsS0FBVSxFRHpDYSxJQUFJO0VDeUMzQixNQUFVLEVEekNrQixDQUFDO0VDeUM3QixJQUFVLEVEekNvQixDQUFDO0VFcUNqQyxNQUFNLEVGcEMyQixJQUFJO0VFMENyQyxLQUFLLEVGN0NlLEtBQUs7RUdrQ3JCLGlCQUFvQixFSDlCUCxrQkFBVTtFR2tDdkIsY0FBaUIsRUhsQ0osa0JBQVU7RUdzQ3ZCLGFBQWdCLEVIdENILGtCQUFVO0VHMEN2QixZQUFlLEVIMUNGLGtCQUFVO0VHOEN2QixTQUFZLEVIOUNDLGtCQUFVO0VHOEJ2QixrQkFBb0IsRUg3Qk4sR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNO0VHaUM5QixlQUFpQixFSGpDSCxHQUFHLENBQUMsS0FBSyxDQUFDLE1BQU07RUc2QzlCLFVBQVksRUg3Q0UsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNO0VBQ3BDLFVBQVUsRUFBRSxJQUFLO0VJc0ZmLE9BQU8sRXRCQUssR0FBYTtFa0JwRjNCLDBCQUEwQixFQUFFLEtBQU07RUFDbEMsVUFBVSxFQUFFLElBQUs7RUFDakIsT0FBTyxFbEIwRkEsSUFBSTtFa0J6RlgsT0FBTyxFQUFFLENBQUU7Q0FaVzs7QUFjckIsc0JBQXNCLFdBQVcsQ0FBckI7RUdxQlAsaUJBQW9CLEVIcEJMLGFBQVU7RUd3QnpCLGNBQWlCLEVIeEJGLGFBQVU7RUc0QnpCLGFBQWdCLEVINUJELGFBQVU7RUdnQ3pCLFlBQWUsRUhoQ0EsYUFBVTtFR29DekIsU0FBWSxFSHBDRyxhQUFVO0VBQzdCLE9BQU8sRUFBRSxDQUFFO0NBRkM7O0FBTWhCLDBCQUEwQixDQUFDO0VDb0J6QixRQUFRLEVEbkJVLEtBQUs7RUN1Qm5CLEdBQVUsRUR2QlcsQ0FBQztFQ3VCdEIsS0FBVSxFRHZCYSxDQUFDO0VDdUJ4QixNQUFVLEVEdkJlLENBQUM7RUN1QjFCLElBQVUsRUR2QmlCLENBQUM7RUdjMUIsa0JBQW9CLEVFWVQsR0FBRyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsRUFBRTtFRlJoQyxlQUFpQixFRVFOLEdBQUcsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLEVBQUU7RUZJaEMsVUFBWSxFRUpELEdBQUcsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLEVBQUU7RUx4QnRDLFVBQVUsRUFBRSxJQUFLO0VBQ2pCLE9BQU8sRUFBRSxDQUFFO0VBQ1gsVUFBVSxFQUFFLE1BQU87RUFDbkIsT0FBTyxFbEIwRUUsSUFBSTtDa0JoRmE7O0FBUXpCLDBCQUEwQixXQUFXLENBQXpCO0VBQ1gsT0FBTyxFQUFFLEdBQUk7RUFDYixVQUFVLEVBQUUsT0FBUTtDQUZSOztBQU1oQixvQkFBb0IsQ0FBQztFQUNuQixNQUFNLEVBQUUsT0FBUTtFQUNoQixPQUFPLEVsQmlFQSxJQUFJO0NrQm5FUzs7QU1sQ3RCOzs7Ozs7Ozs7Ozs7RUFZRTtBQW1ERjs7Ozs7Ozs7OztFQVVFO0FBMkJGOzs7OztFQUtFO0FDdkdpQyxTQUFTLENBQ3ZDO0VEdUZILGdCQUFnQixFQUFFLHVCQUFHO0VBTHJCLG1CQUFtQixFQTlERyxHQUFHLENBQUcsTUFBSztFQW9EakMsS0FBSyxFQXBEOEIsS0FBSztFQXdEeEMsTUFBTSxFQXhEb0MsS0FBSztFQ2pCM0MsT0FBTyxFQUFFLFlBQWE7RUFDdEIsTUFBTSxFekJzRkksR0FBYTtDeUIxRnZCOztBQUQ2QixPQUFPLENBQ3JDO0VEdUZILGdCQUFnQixFQUFFLHVCQUFHO0VBTHJCLG1CQUFtQixFQW5ERSxNQUFLLENBQUUsR0FBRztFQXlDL0IsS0FBSyxFQXpDNEIsS0FBSztFQTZDdEMsTUFBTSxFQTdDa0MsS0FBSztFQzVCekMsT0FBTyxFQUFFLFlBQWE7RUFDdEIsTUFBTSxFekJzRkksR0FBYTtDeUIxRnZCOztBQUQ2QixRQUFRLENBQ3RDO0VEdUZILGdCQUFnQixFQUFFLHVCQUFHO0VBTHJCLG1CQUFtQixFQXhDQSxHQUFHLENBQUUsR0FBRztFQThCM0IsS0FBSyxFQTlCd0IsS0FBSztFQWtDbEMsTUFBTSxFQWxDOEIsS0FBSztFQ3ZDckMsT0FBTyxFQUFFLFlBQWE7RUFDdEIsTUFBTSxFekJzRkksR0FBYTtDeUIxRnZCOztBQUQ2QixRQUFRLENBQ3RDO0VEdUZILGdCQUFnQixFQUFFLHVCQUFHO0VBTHJCLG1CQUFtQixFQTdCSyxNQUFLLENBQUcsTUFBSztFQW1CckMsS0FBSyxFQW5Ca0MsS0FBSztFQXVCNUMsTUFBTSxFQXZCd0MsS0FBSztFQ2xEL0MsT0FBTyxFQUFFLFlBQWE7RUFDdEIsTUFBTSxFekJzRkksR0FBYTtDeUIxRnZCIiwiZmlsZSI6Im1haW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIG5vcm1hbGl6ZS5jc3MgdjMuMC4zIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKipcbiAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gKiAyLiBQcmV2ZW50IGlPUyBhbmQgSUUgdGV4dCBzaXplIGFkanVzdCBhZnRlciBkZXZpY2Ugb3JpZW50YXRpb24gY2hhbmdlLFxuICogICAgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tLlxuICovXG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcbiAqIGFuZCBGaXJlZm94LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzIGluIE1vYmlsZSBTYWZhcmkgNC81LzYvNy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLlxuICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICovXG5cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogSW1wcm92ZSByZWFkYWJpbGl0eSBvZiBmb2N1c2VkIGVsZW1lbnRzIHdoZW4gdGhleSBhcmUgYWxzbyBpbiBhblxuICogYWN0aXZlL2hvdmVyIHN0YXRlLlxuICovXG5cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IHN0eWxpbmcgb2YgYGFiYnJbdGl0bGVdYC5cbiAqIDEuIENvcnJlY3Qgc3R5bGluZyBpbiBGaXJlZm94IDM5IGFuZCBPcGVyYSAxMi5cbiAqIDIuIENvcnJlY3QgbWlzc2luZyBzdHlsaW5nIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBzdHlsaW5nIG9mIGIgYW5kIHN0cm9uZy5cbiAqIDEuIENvcnJlY3QgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGluIFNhZmFyaSA2LjAuMi5cbiAqIDIuIENvcnJlY3Qgc3R5bGUgc2V0IHRvIGBib2xkYCBpbiBFZGdlIDEyKywgU2FmYXJpIDYuMissIGFuZCBDaHJvbWUgMTgrLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDsgLyogMSAqL1xufVxuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxuICogY29udGV4dHMgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXI6IDA7XG59XG5cbi8qKlxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXG4gKi9cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDgvOSBhbmQgU2FmYXJpLlxuICovXG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgc3R5bGluZyBvZiBgaHJgLlxuICogMS4gQ29ycmVjdCBgYm94LXNpemluZ2Agc2V0IHRvIGBib3JkZXItYm94YCBpbiBGaXJlZm94LlxuICogMi4gQ29ycmVjdCBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAvMTEgYW5kIEVkZ2UgMTIuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb250YWluIG92ZXJmbG93IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5wcmUge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQtc2l6ZSBmb3IgcHJlZm9ybWF0dGVkIHRleHQuXG4gKiAyLiBBZGRyZXNzIG9kZCBgZW1gLXVuaXQgZm9udCBzaXplIHJlbmRlcmluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWRcbiAqIHN0eWxpbmcgb2YgYHNlbGVjdGAsIHVubGVzcyBhIGBib3JkZXJgIHByb3BlcnR5IGlzIHNldC5cbiAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAyLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbiAqIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4gKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxuICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4gKiAgICBhbmQgYHZpZGVvYCBjb250cm9scy5cbiAqIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbiAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4gKiAgICBgaW5wdXRgIGFuZCBvdGhlcnMuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyOyAvKiAzICovXG59XG5cbi8qKlxuICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbiAqL1xuXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrLlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgZm9jdXMgc3R5bGUgaW4gRmlyZWZveCA0KyAodW5zZXQgYnkgYSBydWxlIGFib3ZlKVxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcbmlucHV0Oi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cbiAqIHRoZSBVQSBzdHlsZXNoZWV0LlxuICovXG5cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuLyoqXG4gKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXG4gKiBGaXJlZm94J3MgaW1wbGVtZW50YXRpb24gZG9lc24ndCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxuICpcbiAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXG4gKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICovXG5cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEZpeCB0aGUgY3Vyc29yIHN0eWxlIGZvciBDaHJvbWUncyBpbmNyZW1lbnQvZGVjcmVtZW50IGJ1dHRvbnMuIEZvciBjZXJ0YWluXG4gKiBgZm9udC1zaXplYCB2YWx1ZXMgb2YgdGhlIGBpbnB1dGAsIGl0IGNhdXNlcyB0aGUgY3Vyc29yIHN0eWxlIG9mIHRoZVxuICogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxuICovXG5cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYGFwcGVhcmFuY2VgIHNldCB0byBgc2VhcmNoZmllbGRgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbiAqIFNhZmFyaSAoYnV0IG5vdCBDaHJvbWUpIGNsaXBzIHRoZSBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHNlYXJjaCBpbnB1dCBoYXNcbiAqIHBhZGRpbmcgKGFuZCBgdGV4dGZpZWxkYCBhcHBlYXJhbmNlKS5cbiAqL1xuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXG4gKi9cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICogMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgZm9udCB3ZWlnaHQgKHVuc2V0IGJ5IGEgcnVsZSBhYm92ZSkuXG4gKiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufSIsIi8vIFRoZSBiYXNlIHR5cG9ncmFwaHkgZWxlbWVudHNcbmJvZHkge1xuICBjb2xvcjogJGJhc2UtZm9udC1jb2xvcjtcbiAgZm9udC1mYW1pbHk6ICRiYXNlLWZvbnQtZmFtaWx5O1xuICBmb250LWZlYXR1cmUtc2V0dGluZ3M6IFwia2VyblwiLCBcImxpZ2FcIiwgXCJwbnVtXCI7XG4gIFxuICBAaW5jbHVkZSBmb250LXNpemUoMSk7XG4gIFxuICBAaW5jbHVkZSBsaW5lLWhlaWdodCgxKTtcbn1cblxuXG4vLyBUaGlzIGdlbmVyYXRlcyB0aGUgZm9udCBzaXplcyBiYXNlZCBvbiBtb2R1bGFyIHNjYWxlIHNvIHRoZXkncmUgY29uc2lzdGVudCBhbmQgZWFzeSB0byBtYW5hZ2UuXG5AZWFjaCAka2V5LCAkdmFsdWUgaW4gJG1vZHVsYXItc2l6ZS1tYXAge1xuICAkbWFpbi1mb250LXNpemU6IG1vZHVsYXItc2NhbGUoJHZhbHVlKTtcbiAgJHNjYWxlZC1mb250LXNpemU6ICRtYWluLWZvbnQtc2l6ZSAqICRzY2FsZWQtZm9udC1yYXRpbztcblxuICAgI3ska2V5fSB7XG4gICAgICBmb250LXNpemU6ICRzY2FsZWQtZm9udC1zaXplO1xuICAgICAgZm9udC1zaXplOiByZW0oJHNjYWxlZC1mb250LXNpemUpO1xuXG4gICAgICBAaW5jbHVkZSBicCgkc2NhbGVkLWJyZWFrcG9pbnQpIHtcbiAgICAgICAgZm9udC1zaXplOiAkbWFpbi1mb250LXNpemU7XG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKCRtYWluLWZvbnQtc2l6ZSk7XG4gICAgICB9XG4gICB9ICAgXG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIGZvbnQtZmFtaWx5OiAkaGVhZGluZy1mb250LWZhbWlseTtcbiAgQGluY2x1ZGUgbGluZS1oZWlnaHQoMik7XG5cbiAgQGluY2x1ZGUgbWFyZ2luLXRvcCgyKTtcbiAgQGluY2x1ZGUgbWFyZ2luLWJvdHRvbSgxKTtcbn1cblxuaDEgKyBoMiB7XG4gIEBpbmNsdWRlIG1hcmdpbi10b3AoMSk7XG59XG5cbmgyICsgaDMsXG5oMyArIGg0LFxuaDQgKyBoNSB7XG4gIEBpbmNsdWRlIG1hcmdpbi10b3AoLjUpO1xufVxuXG5oNSArIGg2IHtcbiAgQGluY2x1ZGUgbWFyZ2luLXRvcCgtLjUpO1xufVxuXG5wIHtcbiAgQGluY2x1ZGUgbWFyZ2luLWJvdHRvbSgxKTtcbn1cblxuYSB7XG4gIGNvbG9yOiAkYWN0aW9uLWNvbG9yO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRyYW5zaXRpb246IGNvbG9yICRiYXNlLWR1cmF0aW9uICRiYXNlLXRpbWluZztcblxuICAmOmFjdGl2ZSxcbiAgJjpmb2N1cyxcbiAgJjpob3ZlciB7XG4gICAgY29sb3I6IHNoYWRlKCRhY3Rpb24tY29sb3IsIDI1JSk7XG4gIH1cbn1cblxuaHIge1xuICBib3JkZXItYm90dG9tOiAkYmFzZS1ib3JkZXI7XG4gIGJvcmRlci1sZWZ0OiAwO1xuICBib3JkZXItcmlnaHQ6IDA7XG4gIGJvcmRlci10b3A6IDA7XG5cbiAgQGluY2x1ZGUgbWFyZ2luLXRvcCgxKTtcbiAgQGluY2x1ZGUgbWFyZ2luLWJvdHRvbSgxKTtcbn1cblxuc3Ryb25nIHsgZm9udC13ZWlnaHQ6IDcwMDsgfVxuXG5lbSB7IGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG5pbWcsXG5waWN0dXJlIHtcbiAgbWFyZ2luOiAwO1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG4iLCIvLyAtLS0tLSBCRU0gVmFyaWFibGVzIC0tLS0tIC8vXG5cbiRlbGVtZW50LXNlcGFyYXRvcjogJ19fJztcbiRtb2RpZmllci1zZXBhcmF0b3I6ICctLSc7XG4kc3RhdGUtcHJlZml4OiAnaXMnO1xuXG5cblxuLy8gLS0tLS0gR3JpZCBWYXJpYWJsZXMgLS0tLS0gLy9cblxuJG1vYmlsZS1oLXNjcmVlbjogZW0oNDgwcHgpO1xuJHRhYmxldC1zY3JlZW46IGVtKDc4N3B4KTtcbiRkZXNrdG9wLXNjcmVlbjogZW0oOTAwcHgpO1xuJGh1Z2Utc2NyZWVuOiBlbSgxMjAwcHgpO1xuXG5cblxuLy8gLS0tLS0gVHlwb2dyYXBoeSBWYXJpYWJsZXMgLS0tLS0gLy9cblxuJGJhc2UtZm9udC1zaXplOiAxMDA7XG4kbGluZS1oZWlnaHQ6IDI7XG5cbiRiYXNlOiAxNiAqICgkYmFzZS1mb250LXNpemUgLyAxMDApO1xuJGJhc2UtcmVtOiAoJGJhc2UtZm9udC1zaXplIC8gMTAwKTtcbiRsZWFkaW5nOiByb3VuZCgkYmFzZSAqICRsaW5lLWhlaWdodCk7XG4kbGVhZGluZy1yZW06ICRsZWFkaW5nIC8gJGJhc2U7XG5cbiRiYXNlLWZvbnQtZmFtaWx5OiAkbHVjaWRhLWdyYW5kZTtcbiRoZWFkaW5nLWZvbnQtZmFtaWx5OiAkdmVyZGFuYTtcblxuJG1vZHVsYXItc2NhbGUtcmF0aW86ICRtYWpvci10aGlyZDtcbiRtb2R1bGFyLXNjYWxlLWJhc2U6ICRiYXNlICogMXB4OyAgLy8gQmFzZSBmb250IHNpemUgZm9yIGNyZWF0aW5nIHNjYWxlZCBmb250IHNpemVzLlxuXG4kc2NhbGVkLWZvbnQtcmF0aW86IC44OyAvLyBXaGVuIHRoZSBzY3JlZW4gZ2V0cyBiZWxvdyBhIGNlcnRhaW4gc2l6ZSwgdGhpcyBpcyB0aGUgcGVyY2VudGFnZSBvZiB0aGUgb3JpZ2luYWwgZm9udCBzaXplIHRoZSBmb250IGJlY29tZXMuXG4kc2NhbGVkLWJyZWFrcG9pbnQ6ICR0YWJsZXQtc2NyZWVuOyAvLyBUaGUgc2NyZWVuIHdpZHRoIHRoZSB0ZXh0IHNjYWxlcyB1cCB0byBpdHMgb3JpZ2luYWwgc2l6ZVxuXG4vLyBUaGlzIHVzZXMgdGhlIEJvdXJib24gbW9kdWxhci1zY2FsZSBmdW5jdGlvbiB0byBjcmVhdGUgdGhlIHN0cnVjdHVyZSBvZiBob3cgZm9udHMgd2lsbCBiZSBzaXplZCBpbiB0aGUgbW9kdWxhciBzY2FsZS4gQW4gZWFjaCBsb29wIGlzIHVzZWQgdG8gZ2VuZXJhdGUgdGhlIHNjYWxlZCBmb250IHNpemVzLlxuJG1vZHVsYXItc2l6ZS1tYXA6IChcbiAgIGgxOiA2LFxuICAgaDI6IDUsXG4gICBoMzogNCxcbiAgIGg0OiAzLFxuICAgaDU6IDIsXG4gICBoNjogMSxcbiAgIHA6IDAsXG4pO1xuXG5cblxuLy8gLS0tLS0gQ29sb3IgVmFyaWFibGVzIC0tLS0tIC8vXG5cbi8vIFRoaXMgbWFwIGlzIHRoZSBhcnJheSBvZiBzdGFuZGFyZCBjb2xvcnMgZm9yIHRoZSBwcm9qZWN0LiBVc2VzIHRoZSBDb2xvciBmdW5jdGlvbiB0byByZWZlcmVuY2UuIEZvciBjb2xvcnMgdGhhdCBhcmUgZnJlcXVlbnRseSBjaGFuZ2luZyB2YWx1ZXMsIGtleSBuYW1lcyB0aGF0IGFyZW4ndCBjb2xvcnMgYXJlIHJlY29tbWVuZGVkIG92ZXIgbGl0ZXJhbCBuYW1lcyAoc3VjaCBhcyB0aGUgbmFtZSAnY3V0ZScgaW5zdGVhZCBvZiBwaW5rKS5cbiRjb2xvcnM6IChcbiAgd2hpdGU6ICNmZmYsXG4gIGFjdGlvbjogIzQ3N2RjYSxcbiAgZGFyazogIzMzMyxcbiAgbWVkaXVtOiAjOTk5LFxuICBsaWdodDogI2RkZFxuKTtcblxuLy8gVGhpcyBpcyB0aGUgZnVuY3Rpb24gdG8gcHVsbCBjb2xvcnMgb3V0LiBJdCdzIGhlcmUgaW5zdGVhZCBvZiBvbiB0aGUgZnVuY3Rpb25zIHNoZWV0IHNvIHRoZSBiZWxvdyBjb2xvciB2YWx1ZXMgY2FuIGJlIHNldC5cbkBmdW5jdGlvbiBjb2xvcigka2V5KSB7XG4gIEBpZiBtYXAtaGFzLWtleSgkY29sb3JzLCAka2V5KSB7XG4gICAgQHJldHVybiBtYXAtZ2V0KCRjb2xvcnMsICRrZXkpO1xuICB9XG4gXG4gIEB3YXJuIFwiVW5rbm93biBgI3ska2V5fWAgaW4gJGNvbG9ycy5cIjtcbiAgQHJldHVybiBudWxsO1xufVxuXG4kYmFzZS1mb250LWNvbG9yOiBjb2xvcihkYXJrKTtcbiRhY3Rpb24tY29sb3I6IGNvbG9yKGFjdGlvbik7XG4kYmFzZS1ib3JkZXItY29sb3I6IGNvbG9yKGxpZ2h0KTtcbiRiYXNlLWJvcmRlcjogMXB4IHNvbGlkICRiYXNlLWJvcmRlci1jb2xvcjtcbiRiYXNlLWJhY2tncm91bmQtY29sb3I6IGNvbG9yKHdoaXRlKTtcbiRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjogdGludCgkYmFzZS1ib3JkZXItY29sb3IsIDc1JSk7XG5cblxuXG4vLyAtLS0tLSBGb3JtIFZhcmlhYmxlcyAtLS0tLSAvL1xuXG4vLyBUaGUgaW5uZXIgc2hhZG93IHRoYXQgYXBwZWFycyBpbiBmb3JtIGlucHV0IGVsZW1lbnRzLCBzdWNoIGFzIGNoZWNrIGJveGVzLlxuJGZvcm0tYm94LXNoYWRvdzogaW5zZXQgMCAxcHggM3B4IHJnYmEoIzAwMCwgMC4wNik7XG5cbi8vIFdoZW4gY2xpY2tpbmcgYW5kIGZvY3VzaW5nIG9uIGEgZm9ybSBlbGVtZW50LCBsaWtlIGFuIGlucHV0IGJveCwgdGhpcyBpcyB0aGUgc2hhZG93IHRoYXQgYXBwZWFycyB0byBzaG93IGl0J3Mgc2VsZWN0ZWQgdG8gZmlsbCBvdXQuXG4kZm9ybS1ib3gtc2hhZG93LWZvY3VzOiAkZm9ybS1ib3gtc2hhZG93LCAwIDAgNXB4IGFkanVzdC1jb2xvcigkYWN0aW9uLWNvbG9yLCAkbGlnaHRuZXNzOiAtNSUsICRhbHBoYTogLTAuMyk7XG5cblxuXG4vLyAtLS0tLSBMYXlvdXQgVmFyaWFibGVzIC0tLS0tIC8vXG5cbiRiYXNlLWJvcmRlci1yYWRpdXM6ICRsZWFkaW5nLXJlbSAqIDAuMjVlbTsgLy8gU3RhbmRhcmQgYm9yZGVyLXJhZGl1cyBhbW91bnRcbiRiYXNlLXNwYWNpbmc6ICRsZWFkaW5nLXJlbSAqIDFlbTsgLy8gQmFzaWMgc3BhY2luZ1xuJHNtYWxsLXNwYWNpbmc6ICRiYXNlLXNwYWNpbmcgLyAyOyAvLyBIYWxmIG9mIGJhc2ljIHNwYWNpbmdcblxuLy8gTGF5cyBvdXQgdGhlIGRpZmZlcmVudCB6LWluZGV4IHZhbHVlcyB0byBoZWxwIGtlZXAgdGhlbSBvcmdhbml6ZWQuIEJhc2VkIG9mZiB3aGF0IGNvbW1vbSBlbGVtZW50cyB0aGV5J2QgYmUgdXNlZCBmb3IuXG4kei1sYXllcnM6IChcbiAgYm90dG9tbGVzcy1waXQ6IC05OTk5LFxuICBkZWZhdWx0OiAxLFxuICBkcm9wZG93bjogMzAwMCxcbiAgb3ZlcmxheTogNDAwMCxcbiAgbW9kYWw6IDQwMDFcbik7XG5cblxuXG4vLyAtLS0tLSBBbmltYXRpb24gVmFyaWFibGVzIC0tLS0tIC8vXG5cbiRiYXNlLWR1cmF0aW9uOiAxNTBtczsgLy8gRm9yIGFueSBhbmltYXRpb25zIG9yIHBvc3NpYmx5IHRyYW5zaXRpb25zIHRvb1xuJGJhc2UtdGltaW5nOiBlYXNlOyAvLyBGb3IgdGhlIHRyYW5zaXRpb24gcHJvcGVydHkiLCJAY2hhcnNldCBcIlVURi04XCI7XG5cbi8vLyBHZW9yZ2lhIGZvbnQgc3RhY2suXG4vLy9cbi8vLyBAdHlwZSBMaXN0XG5cbiRnZW9yZ2lhOiBcIkdlb3JnaWFcIiwgXCJDYW1icmlhXCIsIFwiVGltZXMgTmV3IFJvbWFuXCIsIFwiVGltZXNcIiwgc2VyaWY7XG5cbi8vLyBIZWx2ZXRpY2EgZm9udCBzdGFjay5cbi8vL1xuLy8vIEB0eXBlIExpc3RcblxuJGhlbHZldGljYTogXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkhlbHZldGljYVwiLCBcIlJvYm90b1wiLCBcIkFyaWFsXCIsIHNhbnMtc2VyaWY7XG5cbi8vLyBMdWNpZGEgR3JhbmRlIGZvbnQgc3RhY2suXG4vLy9cbi8vLyBAdHlwZSBMaXN0XG5cbiRsdWNpZGEtZ3JhbmRlOiBcIkx1Y2lkYSBHcmFuZGVcIiwgXCJUYWhvbWFcIiwgXCJWZXJkYW5hXCIsIFwiQXJpYWxcIiwgc2Fucy1zZXJpZjtcblxuLy8vIE1vbm9zcGFjZSBmb250IHN0YWNrLlxuLy8vXG4vLy8gQHR5cGUgTGlzdFxuXG4kbW9ub3NwYWNlOiBcIkJpdHN0cmVhbSBWZXJhIFNhbnMgTW9ub1wiLCBcIkNvbnNvbGFzXCIsIFwiQ291cmllclwiLCBtb25vc3BhY2U7XG5cbi8vLyBWZXJkYW5hIGZvbnQgc3RhY2suXG4vLy9cbi8vLyBAdHlwZSBMaXN0XG5cbiR2ZXJkYW5hOiBcIlZlcmRhbmFcIiwgXCJHZW5ldmFcIiwgc2Fucy1zZXJpZjtcbiIsIi8vIFR5cG9ncmFwaHkgbWl4aW5zXG5cbkBtaXhpbiBmb250LXNpemUoJG51bWJlcikge1xuICBmb250LXNpemU6ICN7ICRudW1iZXIgKiAkYmFzZSArICdweCd9O1xuICBmb250LXNpemU6ICN7ICRudW1iZXIgKiAkYmFzZS1yZW0gKyAncmVtJ307XG59XG5cbkBtaXhpbiBsaW5lLWhlaWdodCgkbnVtYmVyKSB7XG4gIGxpbmUtaGVpZ2h0OiAjeyAkbnVtYmVyICogJGxlYWRpbmcgKyAncHgnfTtcbiAgbGluZS1oZWlnaHQ6ICN7ICRudW1iZXIgKiAkbGVhZGluZy1yZW0gKyAncmVtJ307XG59XG5cbkBtaXhpbiBtYXJnaW4tdG9wKCRudW1iZXIpIHtcbiAgbWFyZ2luLXRvcDogI3sgJG51bWJlciAqICRsZWFkaW5nICsgJ3B4J307XG4gIG1hcmdpbi10b3A6ICN7ICRudW1iZXIgKiAkbGVhZGluZy1yZW0gKyAncmVtJ307XG59XG5cbkBtaXhpbiBtYXJnaW4tYm90dG9tKCRudW1iZXIpIHtcbiAgbWFyZ2luLWJvdHRvbTogI3sgJG51bWJlciAqICRsZWFkaW5nICsgJ3B4J307XG4gIG1hcmdpbi1ib3R0b206ICN7ICRudW1iZXIgKiAkbGVhZGluZy1yZW0gKyAncmVtJ307XG59XG5cblxuXG4vLyBNb2JpbGUtZmlyc3QgYnJlYWtwb2ludFxuQG1peGluIGJwKCRwb2ludCkge1xuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkcG9pbnQpIHsgQGNvbnRlbnQ7IH1cbn1cblxuLy8gTWF4LXdpZHRoIGJyZWFrcG9pbnQuIFVzZSBvbmx5IGlmIG5lZWRlZFxuQG1peGluIG1heC1icCgkcG9pbnQpIHtcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHBvaW50KSB7IEBjb250ZW50OyB9XG59XG5cblxuLy8gVGhlIGZpeC1jZWxsIGFuZCBmbGV4LWNlbGwgbWl4aW5zIGluY2x1ZGVkIGNvbXBvbmVudHMgb2YgdGhlIGZpeC1mbGV4IG1peGluLCB3aGljaCBpcyB1c2VkIGZvciBpdGVtcyB3aXRoIGEgZml4ZWQgd2lkdGggb24gb25lIHNpZGUgYW5kIGZsZXhpYmxlIG9uIHRoZSBvdGhlci5cbi8vICRmaXgtZGlyZWN0aW9uIC0gSWYgdGhlIGZpeGVkIGVsZW1lbnQgaXMgb24gdGhlIGxlZnQgb3IgcmlnaHQgc2lkZVxuLy8gJGZpeC13aWR0aCAtIFRoZSB3aWR0aCBvZiB0aGUgZml4ZWQgZWxlbWVudFxuLy8gJGZpeC1tYXJnaW4gLSBUaGUgbWFyZ2luIGxlbmd0aCBiZXR3ZWVuIHRoZSB0d28gaXRlbXNcbi8vIEVYOiBAaW5jbHVkZSBmaXgtZmxleCgnbGVmdCcsIDJlbSwgMTBweCk7XG5AbWl4aW4gZml4LWZsZXgoJGZpeC1kaXJlY3Rpb24sICRmaXgtd2lkdGgsICRmaXgtbWFyZ2luKSB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICB3aWR0aDogMTAwJTtcbiAgQGlmICRmaXgtZGlyZWN0aW9uID09ICdsZWZ0JyB7XG4gICAgJiA+IDpmaXJzdC1jaGlsZCB7XG4gICAgICBAaW5jbHVkZSBmaXgtY2VsbCgkZml4LWRpcmVjdGlvbiwgJGZpeC13aWR0aCk7XG4gICAgICBtYXJnaW4tcmlnaHQ6ICRmaXgtbWFyZ2luO1xuICAgIH1cbiAgICAmID4gOmxhc3QtY2hpbGQge1xuICAgICAgQGluY2x1ZGUgZmxleC1jZWxsO1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgJiA+IDpmaXJzdC1jaGlsZCB7XG4gICAgICBAaW5jbHVkZSBmbGV4LWNlbGw7XG4gICAgfVxuICAgICYgPiA6bGFzdC1jaGlsZCB7XG4gICAgICBAaW5jbHVkZSBmaXgtY2VsbCgkZml4LWRpcmVjdGlvbiwgJGZpeC13aWR0aCk7XG4gICAgICBtYXJnaW4tbGVmdDogJGZpeC1tYXJnaW47XG4gICAgfVxuICB9XG59XG5cbi8vIE1peGluIGRlcGVuZGVuY3kgZm9yIEZpeC1GbGV4XG5AbWl4aW4gZml4LWNlbGwoJGZpeC1kaXJlY3Rpb24sJGZpeC13aWR0aCkge1xuICB3aWR0aDogJGZpeC13aWR0aDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1heC13aWR0aDogbm9uZTtcbn1cbi8vIE1peGluIGRlcGVuZGVuY3kgZm9yIEZpeC1GbGVcbkBtaXhpbiBmbGV4LWNlbGwge1xuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICB3aWR0aDogMTAwJTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLy8gVGhpcyBpcyB0aGUgbWFpbiBtaXhpbiBmb3IgY3JlYXRpbmcga2V5ZnJhbWUgYW5pbWF0aW9ucyB3aXRoIGNyb3NzLWJyb3dzZXIgY29tcGF0aWJpbGl0eSBhdXRvbWF0aWNhbGx5IHNldCB1cC4gSXQgbmVlZHMgdGhlIG5hbWUgYW5kIGFsc28gdGhlIGJvZHkgd2l0aCB0aGUga2V5ZnJhbWUgbG9jYXRpb25zIGFuZCBwcm9wZXJ0aWVzLlxuXG4vLyBAZXhhbXBsZVxuLy8gICBAaW5jbHVkZSBrZXlmcmFtZXMobmFtZS1oZXJlKSB7XG4vLyAgICAgIDAlICAgeyBjb2xvcjogYmxhY2s7IH1cbi8vICAgICAgNTAlICAgeyBjb2xvcjogd2hpdGU7IH1cbi8vICAgICAgMTAwJSB7IGNvbG9yOiBibGFjazsgfVxuLy8gICB9XG4vL1xuLy8gICBAaW5jbHVkZSBhbmltYXRpb24oJ25hbWUtaGVyZSAxcyBsaW5lYXIgMHMgaW5maW5pdGUnKTtcbkBtaXhpbiBrZXlmcmFtZXMoJGFuaW1hdGlvbk5hbWUpIHtcbiAgICBALXdlYmtpdC1rZXlmcmFtZXMgI3skYW5pbWF0aW9uTmFtZX0ge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG4gICAgQC1tb3ota2V5ZnJhbWVzICN7JGFuaW1hdGlvbk5hbWV9IHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICAgIEAtby1rZXlmcmFtZXMgI3skYW5pbWF0aW9uTmFtZX0ge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG4gICAgQGtleWZyYW1lcyAjeyRhbmltYXRpb25OYW1lfSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cbi8vLyBUaGlzIGlzIHRoZSBzZXR1cCBmb3IgdGhlIGtleWZyYW1lcyBtaXhpblxuLy8vIEBzZWUga2V5ZnJhbWVzXG4vLy8gQGdyb3VwIERlcGVuZGVuY2llc1xuQG1peGluIGFuaW1hdGlvbigkYW5pbWF0ZS4uLikge1xuICAgICRtYXg6IGxlbmd0aCgkYW5pbWF0ZSk7XG4gICAgJGFuaW1hdGlvbnM6ICcnO1xuXG4gICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkbWF4IHtcbiAgICAgICAgJGFuaW1hdGlvbnM6ICN7JGFuaW1hdGlvbnMgKyBudGgoJGFuaW1hdGUsICRpKX07XG5cbiAgICAgICAgQGlmICRpIDwgJG1heCB7XG4gICAgICAgICAgICAkYW5pbWF0aW9uczogI3skYW5pbWF0aW9ucyArIFwiLCBcIn07XG4gICAgICAgIH1cbiAgICB9XG4gICAgLXdlYmtpdC1hbmltYXRpb246ICRhbmltYXRpb25zO1xuICAgIC1tb3otYW5pbWF0aW9uOiAgICAkYW5pbWF0aW9ucztcbiAgICAtby1hbmltYXRpb246ICAgICAgJGFuaW1hdGlvbnM7XG4gICAgYW5pbWF0aW9uOiAgICAgICAgICRhbmltYXRpb25zO1xufSIsIi8vIENvbnZlcnQgcGl4ZWxzIHRvIHJlbXNcbi8vIGVnLiBmb3IgYSByZWxhdGlvbmFsIHZhbHVlIG9mIDEycHggd3JpdGUgcmVtKDEyKVxuLy8gQXNzdW1lcyAkZW0tYmFzZSBpcyB0aGUgZm9udC1zaXplIG9mIDxodG1sPlxuXG5AZnVuY3Rpb24gcmVtKCRweHZhbCkge1xuICBAaWYgbm90IHVuaXRsZXNzKCRweHZhbCkge1xuICAgICRweHZhbDogc3RyaXAtdW5pdHMoJHB4dmFsKTtcbiAgfVxuXG4gICRiYXNlOiAkZW0tYmFzZTtcbiAgQGlmIG5vdCB1bml0bGVzcygkYmFzZSkge1xuICAgICRiYXNlOiBzdHJpcC11bml0cygkYmFzZSk7XG4gIH1cbiAgQHJldHVybiAoJHB4dmFsIC8gJGJhc2UpICogMXJlbTtcbn1cbiIsIi8vIFNjYWxpbmcgVmFyaWFibGVzXG4kZ29sZGVuOiAgICAgICAgICAgMS42MTg7XG4kbWlub3Itc2Vjb25kOiAgICAgMS4wNjc7XG4kbWFqb3Itc2Vjb25kOiAgICAgMS4xMjU7XG4kbWlub3ItdGhpcmQ6ICAgICAgMS4yO1xuJG1ham9yLXRoaXJkOiAgICAgIDEuMjU7XG4kcGVyZmVjdC1mb3VydGg6ICAgMS4zMzM7XG4kYXVnbWVudGVkLWZvdXJ0aDogMS40MTQ7XG4kcGVyZmVjdC1maWZ0aDogICAgMS41O1xuJG1pbm9yLXNpeHRoOiAgICAgIDEuNjtcbiRtYWpvci1zaXh0aDogICAgICAxLjY2NztcbiRtaW5vci1zZXZlbnRoOiAgICAxLjc3ODtcbiRtYWpvci1zZXZlbnRoOiAgICAxLjg3NTtcbiRvY3RhdmU6ICAgICAgICAgICAyO1xuJG1ham9yLXRlbnRoOiAgICAgIDIuNTtcbiRtYWpvci1lbGV2ZW50aDogICAyLjY2NztcbiRtYWpvci10d2VsZnRoOiAgICAzO1xuJGRvdWJsZS1vY3RhdmU6ICAgIDQ7XG5cbiRtb2R1bGFyLXNjYWxlLXJhdGlvOiAkcGVyZmVjdC1mb3VydGggIWRlZmF1bHQ7XG4kbW9kdWxhci1zY2FsZS1iYXNlOiBlbSgkZW0tYmFzZSkgIWRlZmF1bHQ7XG5cbkBmdW5jdGlvbiBtb2R1bGFyLXNjYWxlKCRpbmNyZW1lbnQsICR2YWx1ZTogJG1vZHVsYXItc2NhbGUtYmFzZSwgJHJhdGlvOiAkbW9kdWxhci1zY2FsZS1yYXRpbykge1xuICAkdjE6IG50aCgkdmFsdWUsIDEpO1xuICAkdjI6IG50aCgkdmFsdWUsIGxlbmd0aCgkdmFsdWUpKTtcbiAgJHZhbHVlOiAkdjE7XG5cbiAgLy8gc2NhbGUgJHYyIHRvIGp1c3QgYWJvdmUgJHYxXG4gIEB3aGlsZSAkdjIgPiAkdjEge1xuICAgICR2MjogKCR2MiAvICRyYXRpbyk7IC8vIHdpbGwgYmUgb2ZmLWJ5LTFcbiAgfVxuICBAd2hpbGUgJHYyIDwgJHYxIHtcbiAgICAkdjI6ICgkdjIgKiAkcmF0aW8pOyAvLyB3aWxsIGZpeCBvZmYtYnktMVxuICB9XG5cbiAgLy8gY2hlY2sgQUZURVIgc2NhbGluZyAkdjIgdG8gcHJldmVudCBkb3VibGUtY291bnRpbmcgY29ybmVyLWNhc2VcbiAgJGRvdWJsZS1zdHJhbmRlZDogJHYyID4gJHYxO1xuXG4gIEBpZiAkaW5jcmVtZW50ID4gMCB7XG4gICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkaW5jcmVtZW50IHtcbiAgICAgIEBpZiAkZG91YmxlLXN0cmFuZGVkIGFuZCAoJHYxICogJHJhdGlvKSA+ICR2MiB7XG4gICAgICAgICR2YWx1ZTogJHYyO1xuICAgICAgICAkdjI6ICgkdjIgKiAkcmF0aW8pO1xuICAgICAgfSBAZWxzZSB7XG4gICAgICAgICR2MTogKCR2MSAqICRyYXRpbyk7XG4gICAgICAgICR2YWx1ZTogJHYxO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBpZiAkaW5jcmVtZW50IDwgMCB7XG4gICAgLy8gYWRqdXN0ICR2MiB0byBqdXN0IGJlbG93ICR2MVxuICAgIEBpZiAkZG91YmxlLXN0cmFuZGVkIHtcbiAgICAgICR2MjogKCR2MiAvICRyYXRpbyk7XG4gICAgfVxuXG4gICAgQGZvciAkaSBmcm9tICRpbmNyZW1lbnQgdGhyb3VnaCAtMSB7XG4gICAgICBAaWYgJGRvdWJsZS1zdHJhbmRlZCBhbmQgKCR2MSAvICRyYXRpbykgPCAkdjIge1xuICAgICAgICAkdmFsdWU6ICR2MjtcbiAgICAgICAgJHYyOiAoJHYyIC8gJHJhdGlvKTtcbiAgICAgIH0gQGVsc2Uge1xuICAgICAgICAkdjE6ICgkdjEgLyAkcmF0aW8pO1xuICAgICAgICAkdmFsdWU6ICR2MTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBAcmV0dXJuICR2YWx1ZTtcbn1cbiIsIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuLy8vIE1peGVzIGEgY29sb3Igd2l0aCBibGFjay5cbi8vL1xuLy8vIEBwYXJhbSB7Q29sb3J9ICRjb2xvclxuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXIgKFBlcmNlbnRhZ2UpfSAkcGVyY2VudFxuLy8vICAgVGhlIGFtb3VudCBvZiBibGFjayB0byBiZSBtaXhlZCBpbi5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBzaGFkZSgjZmZiYjUyLCA2MCUpO1xuLy8vICAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgY3NzIC0gQ1NTIE91dHB1dFxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjY0YTIwO1xuLy8vICAgfVxuLy8vXG4vLy8gQHJldHVybiB7Q29sb3J9XG5cbkBmdW5jdGlvbiBzaGFkZSgkY29sb3IsICRwZXJjZW50KSB7XG4gIEByZXR1cm4gbWl4KCMwMDAsICRjb2xvciwgJHBlcmNlbnQpO1xufVxuIiwiLy8gRnVuY3Rpb24gdG8gZ2V0IGRlZXBlciBtYXAgdmFsdWVzIGluIHRoZSBtaXhpblxuLy8gVXNlZCB0byBnZXQgc2V0dGluZyB2YWx1ZXMgaW4gdGhlIG1peGluXG5AZnVuY3Rpb24gbWFwLWRlZXAtZ2V0KCRtYXAsICRrZXlzLi4uKSB7XG4gICAgQGVhY2ggJGtleSBpbiAka2V5cyB7XG4gICAgICAgICRtYXA6IG1hcC1nZXQoJG1hcCwgJGtleSk7XG4gICAgfVxuICAgIEByZXR1cm4gJG1hcDtcbn1cblxuLy8gRnVuY3Rpb24gdG8gYWRkIGdlbmVyYXRlZCBtYXAgdmFsdWVzIGZvciBwYWRkaW5nIGFuZCBtYXJnaW4gdG8gdGhlIHV0aWxpdGllcyBtYXBcbkBmdW5jdGlvbiBtYXAtc2V0KCRuYW1lLCAkcHJvcGVydHksICR2YWx1ZSwgJG1hcCkge1xuICAkbmV3OiAoXG4gICAgJG5hbWU6IChcbiAgICAgIHByb3BlcnR5OiAkcHJvcGVydHksXG4gICAgICB2YWx1ZTogJHZhbHVlXG4gICAgKVxuICApO1xuICBAcmV0dXJuIG1hcC1tZXJnZSgkbWFwLCAkbmV3KTtcbn1cblxuQGZ1bmN0aW9uIHByZXBlbmQoJGxpc3QsICR2YWx1ZSkge1xuICBAcmV0dXJuIGpvaW4oJHZhbHVlLCAkbGlzdCk7XG59XG5cbi8vIEFuIGV4YW1wbGUgb2YgaG93IHRvIGNvbmZpZ3VyZSBTeW5hcHNlJ3Mgc2V0dGluZ3MgZm9yIHRoZSBncmlkXG4kc3luYXBzZTogKFxuICBjb2x1bW5zOiAxMixcbiAgbGF5b3V0czogKFxuICAgICAgICB4czogIDBweCxcbiAgICAgICAgc206ICA0ODBweCwgXG4gICAgICAgIG1kOiAgNzg3cHgsXG4gICAgICAgIGxnOiAxMDI0cHgsXG4gICAgICAgIHhsZzogMTIwMHB4XG4gICAgKSxcbiAgc3BhY2VVbml0czogKDhweCwgMWVtLCAyZW0sIDNlbSwgNGVtKSxcbiAgc2lkZS1tYXJnaW46IDFlbVxuKTtcblxuLy8gTGlzdCBvZiBhbGwgYmFzaWMgdXRpbGl0aWVzLCBlYXN5IHRvIGVkaXQuXG4vLyBUaGUgc2FtZSBvZiBlYWNoIHN1Yi1tYXAgaXMgdGhlIHV0aWxpdHkgbmFtZSB0byByZWZlcmVuY2UgaW4gdGhlIG1peGluXG4vLyBUaGUgcHJvcGVydGllcyBhbmQgdmFsdWVzIGFyZSB0aGUgdXRpbGl0aWVzJyBDU1MgY29tcG9uZW50c1xuJHV0aWxpdGllc0xpc3Q6IChcbiAgICBhbGlnbi1jOiAoIFxuICAgICAgcHJvcGVydHk6IHRleHQtYWxpZ24sXG4gICAgICB2YWx1ZTogY2VudGVyXG4gICAgKSxcbiAgICBhbGlnbi1sOiAoIFxuICAgICAgcHJvcGVydHk6IHRleHQtYWxpZ24sXG4gICAgICB2YWx1ZTogbGVmdFxuICAgICksXG4gICAgYWxpZ24tcjogKCBcbiAgICAgIHByb3BlcnR5OiB0ZXh0LWFsaWduLFxuICAgICAgdmFsdWU6IHJpZ2h0XG4gICAgKSxcbiAgICBmbG9hdC1yOiAoIFxuICAgICAgcHJvcGVydHk6IGZsb2F0LFxuICAgICAgdmFsdWU6IHJpZ2h0XG4gICAgKSxcbiAgICBmbG9hdC1sOiAoIFxuICAgICAgcHJvcGVydHk6IGZsb2F0LFxuICAgICAgdmFsdWU6IGxlZnRcbiAgICApLFxuICAgIGZsb2F0LW46ICggXG4gICAgICBwcm9wZXJ0eTogZmxvYXQsXG4gICAgICB2YWx1ZTogbm9uZVxuICAgICksXG4gICAgYmxvY2s6ICggXG4gICAgICBwcm9wZXJ0eTogZGlzcGxheSxcbiAgICAgIHZhbHVlOiBibG9jayAhaW1wb3J0YW50XG4gICAgKSxcbiAgICBpLWJsb2NrOiAoIFxuICAgICAgcHJvcGVydHk6IGRpc3BsYXksXG4gICAgICB2YWx1ZTogaW5saW5lLWJsb2NrICFpbXBvcnRhbnRcbiAgICApLFxuICAgIGlubGluZTogKCBcbiAgICAgIHByb3BlcnR5OiBkaXNwbGF5LFxuICAgICAgdmFsdWU6IGlubGluZSAhaW1wb3J0YW50XG4gICAgKSxcbiAgICBib3JkZXItYjogKCBcbiAgICAgIHByb3BlcnR5OiBib3gtc2l6aW5nLFxuICAgICAgdmFsdWU6IGJvcmRlci1ib3hcbiAgICApLFxuICAgIGNlbnRlci1tOiAoIFxuICAgICAgcHJvcGVydHk6IG1hcmdpbixcbiAgICAgIHZhbHVlOiAwIGF1dG9cbiAgICApLFxuICAgIGhpZGU6IChcbiAgICAgIHByb3BlcnR5OiBkaXNwbGF5LFxuICAgICAgdmFsdWU6IG5vbmUgIWltcG9ydGFudFxuICAgIClcbiAgKTtcblxuLy8gR2V0IGEgbGlzdCBvZiBzcGFjaW5nIHZhcmlhYmxlcyBmcm9tIHRoZSBzZXR0aW5nc1xuJHNwYWNpbmc6IG1hcC1nZXQoJHN5bmFwc2UsIHNwYWNlVW5pdHMpO1xuJGZ1bGwtc3BhY2luZzogJHNwYWNpbmc7XG5cbi8vIExvb3AgdGhyb3VnaCB0aGUgc3BhY2luZyBzZXR0aW5ncyBhbmQgZ2VuZXJhdGUgYWxsIHRoZSB1dGlsaXRpZXMgXG4vLyBmb3IgcGFkZGluZyBhbmQgbWFyZ2luIHBsYWNlbWVudFxuQGVhY2ggJHNpemUgaW4gJHNwYWNpbmcge1xuICAgJGk6IGluZGV4KCRzcGFjaW5nLCAkc2l6ZSk7XG4gIFxuICAkdXRpbGl0aWVzTGlzdDogbWFwLXNldChwYWQtMCwgcGFkZGluZywgMCwgJHV0aWxpdGllc0xpc3QpO1xuICAkdXRpbGl0aWVzTGlzdDogbWFwLXNldChwYWQtI3skaX0sIHBhZGRpbmcsICRzaXplLCAkdXRpbGl0aWVzTGlzdCk7XG4gICR1dGlsaXRpZXNMaXN0OiBtYXAtc2V0KHBhZC10LSN7JGl9LCBwYWRkaW5nLXRvcCwgJHNpemUsICR1dGlsaXRpZXNMaXN0KTtcbiAgJHV0aWxpdGllc0xpc3Q6IG1hcC1zZXQocGFkLXItI3skaX0sIHBhZGRpbmctcmlnaHQsICRzaXplLCAkdXRpbGl0aWVzTGlzdCk7XG4gICR1dGlsaXRpZXNMaXN0OiBtYXAtc2V0KHBhZC1iLSN7JGl9LCBwYWRkaW5nLWJvdHRvbSwgJHNpemUsICR1dGlsaXRpZXNMaXN0KTtcbiAgJHV0aWxpdGllc0xpc3Q6IG1hcC1zZXQocGFkLWwtI3skaX0sIHBhZGRpbmctbGVmdCwgJHNpemUsICR1dGlsaXRpZXNMaXN0KTtcbiAgJHV0aWxpdGllc0xpc3Q6IG1hcC1zZXQocGFkLXZlcnQtI3skaX0sIHBhZGRpbmcsICRzaXplIDAsICR1dGlsaXRpZXNMaXN0KTtcbiAgJHV0aWxpdGllc0xpc3Q6IG1hcC1zZXQocGFkLXNpZGVzLSN7JGl9LCBwYWRkaW5nLCAwICRzaXplLCAkdXRpbGl0aWVzTGlzdCk7XG5cbiAgJHV0aWxpdGllc0xpc3Q6IG1hcC1zZXQobWFyZy0wLCBtYXJnaW4sIDAsICR1dGlsaXRpZXNMaXN0KTtcbiAgJHV0aWxpdGllc0xpc3Q6IG1hcC1zZXQobWFyZy0jeyRpfSwgbWFyZ2luLCAkc2l6ZSwgJHV0aWxpdGllc0xpc3QpO1xuICAkdXRpbGl0aWVzTGlzdDogbWFwLXNldChtYXJnLXQtI3skaX0sIG1hcmdpbi10b3AsICRzaXplLCAkdXRpbGl0aWVzTGlzdCk7XG4gICR1dGlsaXRpZXNMaXN0OiBtYXAtc2V0KG1hcmctci0jeyRpfSwgbWFyZ2luLXJpZ2h0LCAkc2l6ZSwgJHV0aWxpdGllc0xpc3QpO1xuICAkdXRpbGl0aWVzTGlzdDogbWFwLXNldChtYXJnLWItI3skaX0sIG1hcmdpbi1ib3R0b20sICRzaXplLCAkdXRpbGl0aWVzTGlzdCk7XG4gICR1dGlsaXRpZXNMaXN0OiBtYXAtc2V0KG1hcmctbC0jeyRpfSwgbWFyZ2luLWxlZnQsICRzaXplLCAkdXRpbGl0aWVzTGlzdCk7XG4gICR1dGlsaXRpZXNMaXN0OiBtYXAtc2V0KG1hcmctdmVydC0jeyRpfSwgbWFyZ2luLCAkc2l6ZSAwLCAkdXRpbGl0aWVzTGlzdCk7XG4gICR1dGlsaXRpZXNMaXN0OiBtYXAtc2V0KG1hcmctc2lkZXMtI3skaX0sIG1hcmdpbiwgMCAkc2l6ZSwgJHV0aWxpdGllc0xpc3QpO1xuXG59XG5cbi8vIFNldHVwIGZvciB0aGUgYWN0dWFsIHN5bmFwc2UgbWl4aW5cbkBtaXhpbiBzeW4oJGJyZWFrcG9pbnQsICRjb2x1bW5zLCAkb2Zmc2V0LCAkdXRpbGl0aWVzOiBub25lKSB7XG4gICAgLy8gVGhlIHdpZHRoIG9mIHRoZSBicmVha3BvaW50IHNwZWNpZmljaWVkXG4gICAgJGJyZWFrcG9pbnRXaWR0aDogbWFwLWRlZXAtZ2V0KCRzeW5hcHNlLCBcImxheW91dHNcIiwgJGJyZWFrcG9pbnQpO1xuICAgIC8vIFRoZSB0b3RhbCBudW1iZXIgb2YgY29sdW1ucyBmcm9tIHRoZSBzZXR0aW5nc1xuICAgICR0b3RhbENvbHVtbnM6IG1hcC1nZXQoJHN5bmFwc2UsIFwiY29sdW1uc1wiKTtcbiAgICAkc2lkZU1hcmdpbjogbWFwLWdldCgkc3luYXBzZSwgXCJzaWRlLW1hcmdpblwiKTtcblxuICAgIFxuICAgIC8vIFNldHMgdXAgdGhlIG1lZGlhIHF1ZXJ5IGFuZCBhZGRzIHRoZSBiYXNpYyBncmlkIHByb3BlcnRpZXMgYW5kXG4gICAgLy8gd2lkdGggYmFzZWQgb24gdGhlIG51bWJlciBvZiBjb2x1bW5zIGluIHRoZSBtaXhpblxuICAgIFxuXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJyZWFrcG9pbnRXaWR0aCkge1xuICAgICAgXG4gICAgICBAaWYgKCRjb2x1bW5zICE9J25vbmUnICkge1xuICAgICAgICAkd2lkdGhQZXI6IHBlcmNlbnRhZ2UoJGNvbHVtbnMvJHRvdGFsQ29sdW1ucyk7XG4gICAgICAgIFxuICAgICAgICB3aWR0aDogLXdlYmtpdC1jYWxjKCN7JHdpZHRoUGVyfSAtICN7JHNpZGVNYXJnaW59KTtcbiAgICAgICAgd2lkdGg6IC1tb3otY2FsYygjeyR3aWR0aFBlcn0gLSAjeyRzaWRlTWFyZ2lufSk7XG4gICAgICAgIHdpZHRoOiBjYWxjKCN7JHdpZHRoUGVyfSAtICN7JHNpZGVNYXJnaW59KTtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAkc2lkZU1hcmdpbi8yO1xuICAgICAgICBtYXJnaW4tbGVmdDogJHNpZGVNYXJnaW4vMjtcbiAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIGNsZWFyOiBub25lO1xuICAgICAgfVxuXG4gICAgICAvLyBMb29wcyB0aHJvdWdoIGFsbCB1dGlsaXRpZXMgdXNlZCBpbiB0aGUgbWl4aW4gYW5kIGFkZHMgdGhlaXJcbiAgICAgIC8vIENTUyBwcm9wZXJ0aWVzIHRvIHRoZSBlbGVtZW50IGluIHRoZSBtZWRpYSBxdWVyeVxuICAgICAgQGlmICgkdXRpbGl0aWVzICE9ICcnKSB7XG4gICAgICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggbGVuZ3RoKCR1dGlsaXRpZXMpIHtcbiAgICAgICAgICAkdXRpbGl0eU5hbWU6IG50aCgkdXRpbGl0aWVzLCAkaSk7XG4gICAgICAgICAgJHByb3BlcnR5OiBtYXAtZGVlcC1nZXQoJHV0aWxpdGllc0xpc3QsICR1dGlsaXR5TmFtZSwgXCJwcm9wZXJ0eVwiKTtcbiAgICAgICAgICAkdmFsdWU6IG1hcC1kZWVwLWdldCgkdXRpbGl0aWVzTGlzdCwgJHV0aWxpdHlOYW1lLCBcInZhbHVlXCIpO1xuICAgICAgICAgIFxuICAgICAgICAgICN7JHByb3BlcnR5fTogJHZhbHVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIElmIGEgbnVtYmVyIG9mIG9mZnNldCBjb2x1bW5zIHdlcmUgc3BlY2lmaWVkLCBhZGRzIHRoZW0gaGVyZVxuICAgICAgLy8gQ2FuIGJlIHBvc2l0aXZlIG9yIG5lZ2F0aXZlIGZvciBhIHB1c2ggb3IgcHVsbCBlZmZlY3RcbiAgICAgIEBpZiAoJG9mZnNldCAhPSAwKSBhbmQgKCRjb2x1bW5zICE9J25vbmUnKSB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBwZXJjZW50YWdlKCRvZmZzZXQvJHRvdGFsQ29sdW1ucyk7XG4gICAgICB9XG4gICAgfVxufVxuXG5AbWl4aW4gZ2VuZXJhdGUtcGFkZGluZygpIHtcbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAobGVuZ3RoKCRzcGFjaW5nKSArIDEpIHtcbiAgICAkaTogJGkgLSAxO1xuICAgICRzcGFjZTogbnVsbDtcbiAgICBcbiAgICBAaWYgKCAkaSA9PSAwICkge1xuICAgICAgJHNwYWNlOiAwO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJHNwYWNlOiBudGgoJHNwYWNpbmcsICRpKTsgXG4gICAgfVxuICAgIFxuICAgIC5wYWQtI3skaX0ge1xuICAgICAgcGFkZGluZzogI3skc3BhY2V9ICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgLnBhZC10b3AtI3skaX0ge1xuICAgICAgcGFkZGluZy10b3A6ICN7JHNwYWNlfSAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIC5wYWQtcmlnaHQtI3skaX0ge1xuICAgICAgcGFkZGluZy1yaWdodDogI3skc3BhY2V9ICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgLnBhZC1ib3R0b20tI3skaX0ge1xuICAgICAgcGFkZGluZy1ib3R0b206ICN7JHNwYWNlfSAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIC5wYWQtbGVmdC0jeyRpfSB7XG4gICAgICBwYWRkaW5nLWxlZnQ6ICN7JHNwYWNlfSAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIC5wYWQtdmVydC0jeyRpfSB7XG4gICAgICBwYWRkaW5nLXRvcDogI3skc3BhY2V9ICFpbXBvcnRhbnQ7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogI3skc3BhY2V9ICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgLnBhZC1zaWRlcy0jeyRpfSB7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAjeyRzcGFjZX0gIWltcG9ydGFudDtcbiAgICAgIHBhZGRpbmctbGVmdDogI3skc3BhY2V9ICFpbXBvcnRhbnQ7XG4gICAgfVxuICB9XG59XG5cbkBtaXhpbiBnZW5lcmF0ZS1tYXJnaW4oKSB7XG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggKGxlbmd0aCgkc3BhY2luZykgKyAxKSB7XG4gICAgJGk6ICRpIC0gMTtcbiAgICAkc3BhY2U6IG51bGw7XG4gICAgXG4gICAgQGlmICggJGkgPT0gMCApIHtcbiAgICAgICRzcGFjZTogMDtcbiAgICB9IEBlbHNlIHtcbiAgICAgICRzcGFjZTogbnRoKCRzcGFjaW5nLCAkaSk7IFxuICAgIH1cbiAgICBcbiAgICAubWFyZy0jeyRpfSB7XG4gICAgICBtYXJnaW46ICN7JHNwYWNlfSAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIC5tYXJnLXRvcC0jeyRpfSB7XG4gICAgICBtYXJnaW4tdG9wOiAjeyRzcGFjZX0gIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAubWFyZy1yaWdodC0jeyRpfSB7XG4gICAgICBtYXJnaW4tcmlnaHQ6ICN7JHNwYWNlfSAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIC5tYXJnLWJvdHRvbS0jeyRpfSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAjeyRzcGFjZX0gIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAubWFyZy1sZWZ0LSN7JGl9IHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAjeyRzcGFjZX0gIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAubWFyZy12ZXJ0LSN7JGl9IHtcbiAgICAgIG1hcmdpbi10b3A6ICN7JHNwYWNlfSAhaW1wb3J0YW50O1xuICAgICAgbWFyZ2luLWJvdHRvbTogI3skc3BhY2V9ICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgLm1hcmctc2lkZXMtI3skaX0ge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAjeyRzcGFjZX0gIWltcG9ydGFudDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAjeyRzcGFjZX0gIWltcG9ydGFudDtcbiAgICB9XG4gIH1cbn1cblxuLy8gQGluY2x1ZGUgZ2VuZXJhdGUtcGFkZGluZygpO1xuLy8gQGluY2x1ZGUgZ2VuZXJhdGUtbWFyZ2luKCk7IiwiJHN5bmFwc2U6IChcbiAgY29sdW1uczogMTIsXG4gIGxheW91dHM6IChcbiAgICAgICAgc206ICAkbW9iaWxlLWgtc2NyZWVuLCBcbiAgICAgICAgbWQ6ICAkdGFibGV0LXNjcmVlbixcbiAgICAgICAgbGc6ICRkZXNrdG9wLXNjcmVlbixcbiAgICAgICAgeGxnOiAkaHVnZS1zY3JlZW5cbiAgICApLFxuICBzcGFjZVVuaXRzOiAoXG4gICAgICAkc21hbGwtc3BhY2luZywgXG4gICAgICAkYmFzZS1zcGFjaW5nLCBcbiAgICAgICgkYmFzZS1zcGFjaW5nICogMiksIFxuICAgICAgKCRiYXNlLXNwYWNpbmcgKiAzKSwgXG4gICAgICAoJGJhc2Utc3BhY2luZyAqIDQpXG4gICAgKSxcbiAgc2lkZS1tYXJnaW46ICRiYXNlLXNwYWNpbmdcbik7XG5cbmJvZHkge1xuICBAaW5jbHVkZSBzeW4oc20sIDEyLCAwLCAoJ3BhZC0xJykpO1xuXHRAaW5jbHVkZSBzeW4obWQsIDEwLCAxLCAoJ3BhZC0wJykpO1xuXHRAaW5jbHVkZSBzeW4obGcsIDgsIDIsICgnJykpO1xufVxuXG5AaW5jbHVkZSBibG9jaygnZWxlbWVudCcpIHtcbiAgY29sb3I6IHJlZDtcblxuICBAaW5jbHVkZSBjaGlsZCgnY2hpbGQnKSB7XG4gICAgY29sb3I6IGJsdWU7XG4gIH1cbn1cblxuLy8gQGluY2x1ZGUgZ2VuZXJhdGUtcGFkZGluZygpO1xuLy8gQGluY2x1ZGUgZ2VuZXJhdGUtbWFyZ2luKCk7IiwiLy8gYmVtaWZ5XG4vLyBodHRwczovL2d0aWh1Yi5jb20vZnJhbnpoZWlkbC9iZW1pZnlcbi8vIEZyYW56IEhlaWRsIDIwMTVcbi8vIE1JVCBMaWNlbnNlXG5cblxuXG4vLyBDT05GSUdcbi8vID09PT09PVxuXG4vLyBZb3UgY2FuIGNoYW5nZSB0aGUgY29uZmlndXJhdGlvbiBoZXJlLiBUbyB1c2UgeW91ciBvd24gY29uZmlnL3ZhcmlhYmxlcyBmaWxlLCBpbXBvcnQgeW91ciBjb25maWcgYWZ0ZXIgaW1wb3J0aW5nIGJlbWlmeSBhbmQgYmVmb3JlIGNhbGxpbmcgYmVtaWZ5J3MgbWl4aW5zLlxuXG4vLyBPdXRwdXQgY29tYmluZWQgc3RhdGUgc2VsZWN0b3JzIGxpa2U6XG4vLyAgICAuYmxvY2tfX2VsZW1lbnQuaXMtYWN0aXZlIHt9XG4vLyBTZXQgdG8gZmFsc2UgdG8gb3V0cHV0IHNpbmdsZSwgbm9uLWNvbWJpbmVkIHN0YXRlIG1vZGlmaWVyczpcbi8vICAgIC5ibG9ja19fZWxlbWVudC0taXMtYWN0aXZlIHt9XG4kY29tYmluZWQtc3RhdGUtc2VsZWN0b3JzOiAgICB0cnVlO1xuXG4vLyAuYmxvY2tbc2VwYXJhdG9yXWVsZW1lbnQ6XG4kZWxlbWVudC1zZXBhcmF0b3I6ICAgICAgICAgICAgICBcIl9fXCI7XG5cbi8vIC5ibG9ja1tzZXBhcmF0b3JdbW9kaWZpZXI6XG4kbW9kaWZpZXItc2VwYXJhdG9yOiAgICAgICAgICAgICBcIi0tXCI7XG5cbi8vIFRoZSBkZWZhdWx0IHByZWZpeCBmb3Igc3RhdGUgbW9kaWZpZXIgc2VsZWN0b3JzLCB3aWxsIGJlIGNvbWJpbmVkIHdpdGggJG1vZGlmaWVyLXNlcGFyYXRvcjpcbiRzdGF0ZS1wcmVmaXg6ICAgICAgICAgICAgICAgIFwiaXNcIjtcblxuXG5cblxuLy8gTUlYSU5TXG4vLyA9PT09PT1cblxuQG1peGluIGJsb2NrKCRuYW1lKSB7XG4gIC4jeyRuYW1lfSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuXG5AbWl4aW4gZWxlbWVudCgkbmFtZSkge1xuICBAYXQtcm9vdCB7XG4gICAgJiN7JGVsZW1lbnQtc2VwYXJhdG9yfSN7JG5hbWV9IHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxufVxuXG5cbkBtaXhpbiBtb2RpZmllcigkbmFtZSkge1xuICBAYXQtcm9vdCB7XG4gICAgJiN7JG1vZGlmaWVyLXNlcGFyYXRvcn0jeyRuYW1lfSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbn1cblxuXG5AbWl4aW4gc3RhdGUoJHN0YXRlLCAkcHJlZml4OiAkc3RhdGUtcHJlZml4KSB7XG4gIEBpZiAkY29tYmluZWQtc3RhdGUtc2VsZWN0b3JzID09IHRydWUge1xuICAgIEBhdC1yb290IHtcbiAgICAgICYuI3skcHJlZml4fS0jeyRzdGF0ZX0ge1xuICAgICAgICBAY29udGVudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgQGVsc2Uge1xuICAgIEBhdC1yb290IHtcbiAgICAgICYjeyRtb2RpZmllci1zZXBhcmF0b3J9I3skcHJlZml4fS0jeyRzdGF0ZX0ge1xuICAgICAgICBAY29udGVudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuXG5cblxuLy8gQUxJQVNFU1xuLy8gPT09PT09PVxuXG5AbWl4aW4gY29tcG9uZW50KCRuYW1lKSB7XG4gIEBpbmNsdWRlIGJsb2NrKCRuYW1lKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIGNoaWxkKCRuYW1lKSB7XG4gIEBpbmNsdWRlIGVsZW1lbnQoJG5hbWUpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gc3ViY29tcG9uZW50KCRuYW1lKSB7XG4gIEBpbmNsdWRlIGVsZW1lbnQoJG5hbWUpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gc3ViKCRuYW1lKSB7XG4gIEBpbmNsdWRlIGVsZW1lbnQoJG5hbWUpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuIiwidGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBmb250LWZlYXR1cmUtc2V0dGluZ3M6IFwia2VyblwiLCBcImxpZ2FcIiwgXCJ0bnVtXCI7XG4gIG1hcmdpbjogJHNtYWxsLXNwYWNpbmcgMDtcbiAgdGFibGUtbGF5b3V0OiBmaXhlZDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRoIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHNoYWRlKCRiYXNlLWJvcmRlci1jb2xvciwgMjUlKTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgcGFkZGluZzogJHNtYWxsLXNwYWNpbmcgMDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxudGQge1xuICBib3JkZXItYm90dG9tOiAkYmFzZS1ib3JkZXI7XG4gIHBhZGRpbmc6ICRzbWFsbC1zcGFjaW5nIDA7XG59XG5cbnRyLFxudGQsXG50aCB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG4iLCJmaWVsZHNldCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjtcbiAgYm9yZGVyOiAkYmFzZS1ib3JkZXI7XG4gIG1hcmdpbjogMCAwICRzbWFsbC1zcGFjaW5nO1xuICBwYWRkaW5nOiAkYmFzZS1zcGFjaW5nO1xuICBib3JkZXItcmFkaXVzOiAoJGJhc2UtYm9yZGVyLXJhZGl1cyAvIDIpO1xufVxuXG5pbnB1dCxcbmxhYmVsLFxuc2VsZWN0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtZmFtaWx5OiAkYmFzZS1mb250LWZhbWlseTtcbiAgZm9udC1zaXplOiAkYmFzZS1mb250LXNpemU7XG59XG5cbmxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbWFyZ2luLWJvdHRvbTogJHNtYWxsLXNwYWNpbmcgLyAyO1xuXG4gICYucmVxdWlyZWQ6OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIipcIjtcbiAgfVxuXG4gIGFiYnIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxuI3skYWxsLXRleHQtaW5wdXRzfSxcbnNlbGVjdFttdWx0aXBsZT1tdWx0aXBsZV0ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFzZS1iYWNrZ3JvdW5kLWNvbG9yO1xuICBib3JkZXI6ICRiYXNlLWJvcmRlcjtcbiAgYm9yZGVyLXJhZGl1czogJGJhc2UtYm9yZGVyLXJhZGl1cztcbiAgYm94LXNoYWRvdzogJGZvcm0tYm94LXNoYWRvdztcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZm9udC1mYW1pbHk6ICRiYXNlLWZvbnQtZmFtaWx5O1xuICBmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZTtcbiAgbWFyZ2luLWJvdHRvbTogJHNtYWxsLXNwYWNpbmc7XG4gIHBhZGRpbmc6ICRiYXNlLXNwYWNpbmcgLyAzO1xuICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgJGJhc2UtZHVyYXRpb24gJGJhc2UtdGltaW5nO1xuICB3aWR0aDogMTAwJTtcblxuICAmOmhvdmVyIHtcbiAgICBib3JkZXItY29sb3I6IHNoYWRlKCRiYXNlLWJvcmRlci1jb2xvciwgMjAlKTtcbiAgfVxuXG4gICY6Zm9jdXMge1xuICAgIGJvcmRlci1jb2xvcjogJGFjdGlvbi1jb2xvcjtcbiAgICBib3gtc2hhZG93OiAkZm9ybS1ib3gtc2hhZG93LWZvY3VzO1xuICAgIG91dGxpbmU6IG5vbmU7XG4gIH1cblxuICAmOmRpc2FibGVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBzaGFkZSgkYmFzZS1iYWNrZ3JvdW5kLWNvbG9yLCA1JSk7XG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcblxuICAgICY6aG92ZXIge1xuICAgICAgYm9yZGVyOiAkYmFzZS1ib3JkZXI7XG4gICAgfVxuICB9XG59XG5cbnRleHRhcmVhIHtcbiAgcmVzaXplOiB2ZXJ0aWNhbDtcbn1cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGRpc3BsYXk6IGlubGluZTtcbiAgbWFyZ2luLXJpZ2h0OiAkc21hbGwtc3BhY2luZyAvIDI7XG59XG5cbmlucHV0W3R5cGU9XCJmaWxlXCJdIHtcbiAgbWFyZ2luLWJvdHRvbTogJHNtYWxsLXNwYWNpbmc7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5zZWxlY3Qge1xuICBtYXJnaW4tYm90dG9tOiAkYmFzZS1zcGFjaW5nO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHdpZHRoOiBhdXRvO1xufVxuIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuXG4vLy8gTWl4ZXMgYSBjb2xvciB3aXRoIHdoaXRlLlxuLy8vXG4vLy8gQHBhcmFtIHtDb2xvcn0gJGNvbG9yXG4vLy9cbi8vLyBAcGFyYW0ge051bWJlciAoUGVyY2VudGFnZSl9ICRwZXJjZW50XG4vLy8gICBUaGUgYW1vdW50IG9mIHdoaXRlIHRvIGJlIG1peGVkIGluLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFVzYWdlXG4vLy8gICAuZWxlbWVudCB7XG4vLy8gICAgIGJhY2tncm91bmQtY29sb3I6IHRpbnQoIzZlY2FhNiwgNDAlKTtcbi8vLyAgIH1cbi8vL1xuLy8vIEBleGFtcGxlIGNzcyAtIENTUyBPdXRwdXRcbi8vLyAgIC5lbGVtZW50IHtcbi8vLyAgICAgYmFja2dyb3VuZC1jb2xvcjogI2E4ZGZjOTtcbi8vLyAgIH1cbi8vL1xuLy8vIEByZXR1cm4ge0NvbG9yfVxuXG5AZnVuY3Rpb24gdGludCgkY29sb3IsICRwZXJjZW50KSB7XG4gIEByZXR1cm4gbWl4KCNmZmYsICRjb2xvciwgJHBlcmNlbnQpO1xufVxuIiwidWwsXG5vbCB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW4tYm90dG9tOiAkc21hbGwtc3BhY2luZztcbiAgcGFkZGluZy1sZWZ0OiAkYmFzZS1zcGFjaW5nICogMS43NTtcbn1cblxudWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IGRpc2M7XG59XG5cbm9sIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBkZWNpbWFsO1xufVxuXG5kbCB7XG4gIG1hcmdpbi1ib3R0b206ICRzbWFsbC1zcGFjaW5nO1xuXG4gIGR0IHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBtYXJnaW4tdG9wOiAkc21hbGwtc3BhY2luZztcbiAgfVxuXG4gIGRkIHtcbiAgICBtYXJnaW46IDA7XG4gIH1cbn1cbiIsInByZSB7XG5cdHBhZGRpbmc6ICRiYXNlLXNwYWNpbmc7XG5cdG92ZXJmbG93OiBzY3JvbGw7XG5cblx0Y29sb3I6IGNvbG9yKGxpZ2h0KTtcblx0Zm9udC1mYW1pbHk6ICRtb25vc3BhY2U7XG5cblx0YmFja2dyb3VuZC1jb2xvcjogY29sb3IoZGFyayk7XG59IiwiI3skYWxsLWJ1dHRvbnN9IHtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGFjdGlvbi1jb2xvcjtcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItcmFkaXVzOiAkYmFzZS1ib3JkZXItcmFkaXVzO1xuICBjb2xvcjogI2ZmZjtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtZmFtaWx5OiAkYmFzZS1mb250LWZhbWlseTtcbiAgZm9udC1zaXplOiAkYmFzZS1mb250LXNpemU7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICBmb250LXdlaWdodDogNjAwO1xuICBsaW5lLWhlaWdodDogMTtcbiAgcGFkZGluZzogJHNtYWxsLXNwYWNpbmcgJGJhc2Utc3BhY2luZztcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yICRiYXNlLWR1cmF0aW9uICRiYXNlLXRpbWluZztcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG5cbiAgJjpob3ZlcixcbiAgJjpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogc2hhZGUoJGFjdGlvbi1jb2xvciwgMjAlKTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgfVxuXG4gICY6ZGlzYWJsZWQge1xuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gICAgb3BhY2l0eTogMC41O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYWN0aW9uLWNvbG9yO1xuICAgIH1cbiAgfVxufVxuIiwiLm5hdmlnYXRpb24ge1xuICAkbGFyZ2Utc2NyZWVuOiA1MGVtICFkZWZhdWx0O1xuICAkbWVkaXVtLXNjcmVlbjogMzBlbSAhZGVmYXVsdDtcblxuICBcbi8vIE1vYmlsZSB2aWV3XG4gIC5uYXZpZ2F0aW9uLW1lbnUtYnV0dG9uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmctdG9wOiAwLjVlbTtcblxuICAgIEBpbmNsdWRlIGJwKCRtZWRpdW0tc2NyZWVuKSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxuXG4gIFxuLy8gTmF2IG1lbnVcbiAgLm5hdmlnYXRpb24td3JhcHBlciB7XG4gICAgQGluY2x1ZGUgY2xlYXJmaXg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG5cbiAgLmxvZ28ge1xuICAgIGZsb2F0OiBsZWZ0O1xuXG4gICAgQGluY2x1ZGUgYnAoJG1lZGl1bS1zY3JlZW4pIHtcbiAgICAgIGZsb2F0OiBub25lO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgYnAoJGxhcmdlLXNjcmVlbikge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxuXG4gICAgaW1nIHtcbiAgICAgIG1heC1oZWlnaHQ6IDJlbTtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDFlbTtcbiAgICB9XG4gIH1cblxuICBuYXYge1xuICAgIGZsb2F0OiBub25lO1xuXG4gICAgQGluY2x1ZGUgYnAoJG1lZGl1bS1zY3JlZW4pIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuNWVtO1xuICAgICAgcGFkZGluZy10b3A6IDAuM2VtO1xuICAgIH1cbiAgfVxuXG4gIHVsLm5hdmlnYXRpb24tbWVudSB7XG4gICAgY2xlYXI6IGJvdGg7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgQGluY2x1ZGUgYnAoJG1lZGl1bS1zY3JlZW4pIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgcGFkZGluZzogMDtcbiAgICB9XG5cbiAgICAmLnNob3cge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICB9XG5cbiAgXG4vLyBOYXYgaXRlbXNcbiAgdWwgbGkubmF2LWxpbmsge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgQGluY2x1ZGUgYnAoJG1lZGl1bS1zY3JlZW4pIHtcbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgZGlzcGxheTogaW5saW5lO1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgfVxuICB9XG5cbiAgbGkubmF2LWxpbmsgYSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXG4gICAgQGluY2x1ZGUgYnAoJGxhcmdlLXNjcmVlbikge1xuICAgICAgcGFkZGluZy1yaWdodDogMWVtO1xuICAgIH1cbiAgfVxufSIsIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuLy8vIFByb3ZpZGVzIGFuIGVhc3kgd2F5IHRvIGluY2x1ZGUgYSBjbGVhcmZpeCBmb3IgY29udGFpbmluZyBmbG9hdHMuXG4vLy9cbi8vLyBAbGluayBodHRwOi8vY3NzbW9qby5jb20vbGF0ZXN0X25ld19jbGVhcmZpeF9zb19mYXIvXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVXNhZ2Vcbi8vLyAgIC5lbGVtZW50IHtcbi8vLyAgICAgQGluY2x1ZGUgY2xlYXJmaXg7XG4vLy8gICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBjc3MgLSBDU1MgT3V0cHV0XG4vLy8gICAuZWxlbWVudDo6YWZ0ZXIge1xuLy8vICAgICBjbGVhcjogYm90aDtcbi8vLyAgICAgY29udGVudDogXCJcIjtcbi8vLyAgICAgZGlzcGxheTogdGFibGU7XG4vLy8gICB9XG5cbkBtaXhpbiBjbGVhcmZpeCB7XG4gICY6OmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICB9XG59XG4iLCIuaG92ZXItbWVudSB7XG4gICRsYXJnZS1zY3JlZW46IDUwZW0gIWRlZmF1bHQ7XG4gICRzdWJtZW51LXdpZHRoOiAxMmVtO1xuXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICBwYWRkaW5nLXJpZ2h0OiAwO1xuXG4gIEBpbmNsdWRlIGJwKCRsYXJnZS1zY3JlZW4pIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cblxuICAuaG92ZXItbWVudS1pdGVtIHtcbiAgICBsZWZ0OiAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICY6OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwi4oC6XCI7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDAuNWVtO1xuICAgIH1cbiAgfVxuXG4gIC5zdWJtZW51IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XG5cbiAgICBAaW5jbHVkZSBicCgkbGFyZ2Utc2NyZWVuKSB7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIH1cbiAgfVxuXG4gIC5zdWJtZW51IGxpIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICB9XG5cbiAgLnN1Ym1lbnUgbGkgYSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgQGluY2x1ZGUgYnAoJGxhcmdlLXNjcmVlbikge1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIHdpZHRoOiAkc3VibWVudS13aWR0aDtcbiAgICB9XG4gIH1cblxuICAuc3VibWVudSAuc3VibWVudSB7XG4gICAgQGluY2x1ZGUgYnAoJGxhcmdlLXNjcmVlbikge1xuICAgICAgbGVmdDogJHN1Ym1lbnUtd2lkdGg7XG4gICAgICB0b3A6IDA7XG4gICAgfVxuICB9XG5cbiAgJjpmb2N1cyA+IC5zdWJtZW51LFxuICAmOmhvdmVyID4gLnN1Ym1lbnUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG4iLCIuc2xpZGluZy1wYW5lbC1jb250ZW50IHsgIFxuICAkc2xpZGluZy1wYW5lbC13aWR0aDogMjIwcHg7XG5cbiAgQGluY2x1ZGUgcG9zaXRpb24oZml4ZWQsIDAgYXV0byAwIDApO1xuICBAaW5jbHVkZSBzaXplKCRzbGlkaW5nLXBhbmVsLXdpZHRoIDEwMCUpO1xuICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlWCgtICRzbGlkaW5nLXBhbmVsLXdpZHRoKSk7XG4gIEBpbmNsdWRlIHRyYW5zaXRpb24oYWxsIDAuMjVzIGxpbmVhcik7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIEBpbmNsdWRlIHBhZGRpbmcoJHNtYWxsLXNwYWNpbmcpO1xuICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIHotaW5kZXg6IHotaW5kZXgobW9kYWwpO1xuICBvcGFjaXR5OiAwO1xuXG4gICYuaXMtdmlzaWJsZSB7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHRyYW5zbGF0ZVgoMCkpO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cblxuLnNsaWRpbmctcGFuZWwtZmFkZS1zY3JlZW4ge1xuICBAaW5jbHVkZSBwb3NpdGlvbihmaXhlZCwgMCAwIDAgMCk7XG4gIEBpbmNsdWRlIHRyYW5zaXRpb247XG4gIGJhY2tncm91bmQ6ICMwMDA7XG4gIG9wYWNpdHk6IDA7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgei1pbmRleDogei1pbmRleChvdmVybGF5KTtcblxuICAmLmlzLXZpc2libGUge1xuICAgIG9wYWNpdHk6IDAuNDtcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICB9XG59XG5cbi5zbGlkaW5nLXBhbmVsLWNsb3NlIHtcbiAgY3Vyc29yOiBwb2ludGVyOyAvLyBXaHkgaXNuJ3QgdGhpcyB3b3JraW5nP1xuICB6LWluZGV4OiB6LWluZGV4KG1vZGFsKTtcbn1cblxuLy8gQmFzZWQgb24gY29kZSBieSBEaWVnbyBFaXMiLCJAY2hhcnNldCBcIlVURi04XCI7XG5cbi8vLyBQcm92aWRlcyBhIHF1aWNrIG1ldGhvZCBmb3Igc2V0dGluZyBhbiBlbGVtZW504oCZcyBwb3NpdGlvbi4gVXNlIGEgYG51bGxgIHZhbHVlIHRvIOKAnHNraXDigJ0gYSBzaWRlLlxuLy8vXG4vLy8gQHBhcmFtIHtQb3NpdGlvbn0gJHBvc2l0aW9uIFtyZWxhdGl2ZV1cbi8vLyAgIEEgQ1NTIHBvc2l0aW9uIHZhbHVlXG4vLy9cbi8vLyBAcGFyYW0ge0FyZ2xpc3R9ICRjb29yZGluYXRlcyBbbnVsbCBudWxsIG51bGwgbnVsbF1cbi8vLyAgIExpc3Qgb2YgdmFsdWVzIHRoYXQgY29ycmVzcG9uZCB0byB0aGUgNC12YWx1ZSBzeW50YXggZm9yIHRoZSBlZGdlcyBvZiBhIGJveFxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFVzYWdlXG4vLy8gICAuZWxlbWVudCB7XG4vLy8gICAgIEBpbmNsdWRlIHBvc2l0aW9uKGFic29sdXRlLCAwIG51bGwgbnVsbCAxMGVtKTtcbi8vLyAgIH1cbi8vL1xuLy8vIEBleGFtcGxlIGNzcyAtIENTUyBPdXRwdXRcbi8vLyAgIC5lbGVtZW50IHtcbi8vLyAgICAgbGVmdDogMTBlbTtcbi8vLyAgICAgcG9zaXRpb246IGFic29sdXRlO1xuLy8vICAgICB0b3A6IDA7XG4vLy8gICB9XG4vLy9cbi8vLyBAcmVxdWlyZSB7ZnVuY3Rpb259IGlzLWxlbmd0aFxuLy8vIEByZXF1aXJlIHtmdW5jdGlvbn0gdW5wYWNrXG5cbkBtaXhpbiBwb3NpdGlvbigkcG9zaXRpb246IHJlbGF0aXZlLCAkY29vcmRpbmF0ZXM6IG51bGwgbnVsbCBudWxsIG51bGwpIHtcbiAgQGlmIHR5cGUtb2YoJHBvc2l0aW9uKSA9PSBsaXN0IHtcbiAgICAkY29vcmRpbmF0ZXM6ICRwb3NpdGlvbjtcbiAgICAkcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG5cbiAgJGNvb3JkaW5hdGVzOiB1bnBhY2soJGNvb3JkaW5hdGVzKTtcblxuICAkb2Zmc2V0czogKFxuICAgIHRvcDogICAgbnRoKCRjb29yZGluYXRlcywgMSksXG4gICAgcmlnaHQ6ICBudGgoJGNvb3JkaW5hdGVzLCAyKSxcbiAgICBib3R0b206IG50aCgkY29vcmRpbmF0ZXMsIDMpLFxuICAgIGxlZnQ6ICAgbnRoKCRjb29yZGluYXRlcywgNClcbiAgKTtcblxuICBwb3NpdGlvbjogJHBvc2l0aW9uO1xuXG4gIEBlYWNoICRvZmZzZXQsICR2YWx1ZSBpbiAkb2Zmc2V0cyB7XG4gICAgQGlmIGlzLWxlbmd0aCgkdmFsdWUpIHtcbiAgICAgICN7JG9mZnNldH06ICR2YWx1ZTtcbiAgICB9XG4gIH1cbn1cbiIsIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuLy8vIFNldHMgdGhlIGB3aWR0aGAgYW5kIGBoZWlnaHRgIG9mIHRoZSBlbGVtZW50LlxuLy8vXG4vLy8gQHBhcmFtIHtMaXN0fSAkc2l6ZVxuLy8vICAgQSBsaXN0IG9mIGF0IG1vc3QgMiBzaXplIHZhbHVlcy5cbi8vL1xuLy8vICAgSWYgdGhlcmUgaXMgb25seSBhIHNpbmdsZSB2YWx1ZSBpbiBgJHNpemVgIGl0IGlzIHVzZWQgZm9yIGJvdGggd2lkdGggYW5kIGhlaWdodC4gQWxsIHVuaXRzIGFyZSBzdXBwb3J0ZWQuXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVXNhZ2Vcbi8vLyAgIC5maXJzdC1lbGVtZW50IHtcbi8vLyAgICAgQGluY2x1ZGUgc2l6ZSgyZW0pO1xuLy8vICAgfVxuLy8vXG4vLy8gICAuc2Vjb25kLWVsZW1lbnQge1xuLy8vICAgICBAaW5jbHVkZSBzaXplKGF1dG8gMTBlbSk7XG4vLy8gICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBjc3MgLSBDU1MgT3V0cHV0XG4vLy8gICAuZmlyc3QtZWxlbWVudCB7XG4vLy8gICAgIHdpZHRoOiAyZW07XG4vLy8gICAgIGhlaWdodDogMmVtO1xuLy8vICAgfVxuLy8vXG4vLy8gICAuc2Vjb25kLWVsZW1lbnQge1xuLy8vICAgICB3aWR0aDogYXV0bztcbi8vLyAgICAgaGVpZ2h0OiAxMGVtO1xuLy8vICAgfVxuLy8vXG4vLy8gQHRvZG8gUmVmYWN0b3IgaW4gNS4wLjAgdG8gdXNlIGEgY29tbWEtc2VwYXJhdGVkIGFyZ3VtZW50XG5cbkBtaXhpbiBzaXplKCR2YWx1ZSkge1xuICAkd2lkdGg6IG50aCgkdmFsdWUsIDEpO1xuICAkaGVpZ2h0OiAkd2lkdGg7XG5cbiAgQGlmIGxlbmd0aCgkdmFsdWUpID4gMSB7XG4gICAgJGhlaWdodDogbnRoKCR2YWx1ZSwgMik7XG4gIH1cblxuICBAaWYgaXMtc2l6ZSgkaGVpZ2h0KSB7XG4gICAgaGVpZ2h0OiAkaGVpZ2h0O1xuICB9IEBlbHNlIHtcbiAgICBAd2FybiBcImAjeyRoZWlnaHR9YCBpcyBub3QgYSB2YWxpZCBsZW5ndGggZm9yIHRoZSBgJGhlaWdodGAgcGFyYW1ldGVyIGluIHRoZSBgc2l6ZWAgbWl4aW4uXCI7XG4gIH1cblxuICBAaWYgaXMtc2l6ZSgkd2lkdGgpIHtcbiAgICB3aWR0aDogJHdpZHRoO1xuICB9IEBlbHNlIHtcbiAgICBAd2FybiBcImAjeyR3aWR0aH1gIGlzIG5vdCBhIHZhbGlkIGxlbmd0aCBmb3IgdGhlIGAkd2lkdGhgIHBhcmFtZXRlciBpbiB0aGUgYHNpemVgIG1peGluLlwiO1xuICB9XG59XG4iLCJAY2hhcnNldCBcIlVURi04XCI7XG5cbi8vLyBBIG1peGluIGZvciBnZW5lcmF0aW5nIHZlbmRvciBwcmVmaXhlcyBvbiBub24tc3RhbmRhcmRpemVkIHByb3BlcnRpZXMuXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJHByb3BlcnR5XG4vLy8gICBQcm9wZXJ0eSB0byBwcmVmaXhcbi8vL1xuLy8vIEBwYXJhbSB7Kn0gJHZhbHVlXG4vLy8gICBWYWx1ZSB0byB1c2Vcbi8vL1xuLy8vIEBwYXJhbSB7TGlzdH0gJHByZWZpeGVzXG4vLy8gICBQcmVmaXhlcyB0byBkZWZpbmVcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBAaW5jbHVkZSBwcmVmaXhlcihib3JkZXItcmFkaXVzLCAxMHB4LCB3ZWJraXQgbXMgc3BlYyk7XG4vLy8gICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBjc3MgLSBDU1MgT3V0cHV0XG4vLy8gICAuZWxlbWVudCB7XG4vLy8gICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMTBweDtcbi8vLyAgICAgLW1vei1ib3JkZXItcmFkaXVzOiAxMHB4O1xuLy8vICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuLy8vICAgfVxuLy8vXG4vLy8gQHJlcXVpcmUge3ZhcmlhYmxlfSAkcHJlZml4LWZvci13ZWJraXRcbi8vLyBAcmVxdWlyZSB7dmFyaWFibGV9ICRwcmVmaXgtZm9yLW1vemlsbGFcbi8vLyBAcmVxdWlyZSB7dmFyaWFibGV9ICRwcmVmaXgtZm9yLW1pY3Jvc29mdFxuLy8vIEByZXF1aXJlIHt2YXJpYWJsZX0gJHByZWZpeC1mb3Itb3BlcmFcbi8vLyBAcmVxdWlyZSB7dmFyaWFibGV9ICRwcmVmaXgtZm9yLXNwZWNcblxuQG1peGluIHByZWZpeGVyKCRwcm9wZXJ0eSwgJHZhbHVlLCAkcHJlZml4ZXMpIHtcbiAgQGVhY2ggJHByZWZpeCBpbiAkcHJlZml4ZXMge1xuICAgIEBpZiAkcHJlZml4ID09IHdlYmtpdCB7XG4gICAgICBAaWYgJHByZWZpeC1mb3Itd2Via2l0IHtcbiAgICAgICAgLXdlYmtpdC0jeyRwcm9wZXJ0eX06ICR2YWx1ZTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIGlmICRwcmVmaXggPT0gbW96IHtcbiAgICAgIEBpZiAkcHJlZml4LWZvci1tb3ppbGxhIHtcbiAgICAgICAgLW1vei0jeyRwcm9wZXJ0eX06ICR2YWx1ZTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIGlmICRwcmVmaXggPT0gbXMge1xuICAgICAgQGlmICRwcmVmaXgtZm9yLW1pY3Jvc29mdCB7XG4gICAgICAgIC1tcy0jeyRwcm9wZXJ0eX06ICR2YWx1ZTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIGlmICRwcmVmaXggPT0gbyB7XG4gICAgICBAaWYgJHByZWZpeC1mb3Itb3BlcmEge1xuICAgICAgICAtby0jeyRwcm9wZXJ0eX06ICR2YWx1ZTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIGlmICRwcmVmaXggPT0gc3BlYyB7XG4gICAgICBAaWYgJHByZWZpeC1mb3Itc3BlYyB7XG4gICAgICAgICN7JHByb3BlcnR5fTogJHZhbHVlO1xuICAgICAgfVxuICAgIH0gQGVsc2UgIHtcbiAgICAgIEB3YXJuIFwiVW5yZWNvZ25pemVkIHByZWZpeDogI3skcHJlZml4fVwiO1xuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gZGlzYWJsZS1wcmVmaXgtZm9yLWFsbCgpIHtcbiAgJHByZWZpeC1mb3Itd2Via2l0OiAgICBmYWxzZSAhZ2xvYmFsO1xuICAkcHJlZml4LWZvci1tb3ppbGxhOiAgIGZhbHNlICFnbG9iYWw7XG4gICRwcmVmaXgtZm9yLW1pY3Jvc29mdDogZmFsc2UgIWdsb2JhbDtcbiAgJHByZWZpeC1mb3Itb3BlcmE6ICAgICBmYWxzZSAhZ2xvYmFsO1xuICAkcHJlZml4LWZvci1zcGVjOiAgICAgIGZhbHNlICFnbG9iYWw7XG59XG4iLCJAY2hhcnNldCBcIlVURi04XCI7XG5cbi8vLyBEaXJlY3Rpb25hbC1wcm9wZXJ0eSBtaXhpbnMgYXJlIHNob3J0aGFuZHMgZm9yIHdyaXRpbmcgcHJvcGVydGllcyBsaWtlIHRoZSBmb2xsb3dpbmdcbi8vL1xuLy8vIEBpZ25vcmUgWW91IGNhbiBhbHNvIHVzZSBgZmFsc2VgIGluc3RlYWQgb2YgYG51bGxgLlxuLy8vXG4vLy8gQHBhcmFtIHtMaXN0fSAkdmFsc1xuLy8vICAgTGlzdCBvZiBkaXJlY3Rpb25hbCB2YWx1ZXNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBAaW5jbHVkZSBib3JkZXItc3R5bGUoZG90dGVkIG51bGwpO1xuLy8vICAgICBAaW5jbHVkZSBtYXJnaW4obnVsbCAwIDEwcHgpO1xuLy8vICAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgY3NzIC0gQ1NTIE91dHB1dFxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBib3JkZXItYm90dG9tLXN0eWxlOiBkb3R0ZWQ7XG4vLy8gICAgIGJvcmRlci10b3Atc3R5bGU6IGRvdHRlZDtcbi8vLyAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbi8vLyAgICAgbWFyZ2luLWxlZnQ6IDA7XG4vLy8gICAgIG1hcmdpbi1yaWdodDogMDtcbi8vLyAgIH1cbi8vL1xuLy8vIEByZXF1aXJlIHtmdW5jdGlvbn0gY29udGFpbnMtZmFsc3lcbi8vL1xuLy8vIEByZXR1cm4ge0xpc3R9XG5cbkBmdW5jdGlvbiBjb2xsYXBzZS1kaXJlY3Rpb25hbHMoJHZhbHMpIHtcbiAgJG91dHB1dDogbnVsbDtcblxuICAkYTogbnRoKCR2YWxzLCAxKTtcbiAgJGI6IGlmKGxlbmd0aCgkdmFscykgPCAyLCAkYSwgbnRoKCR2YWxzLCAyKSk7XG4gICRjOiBpZihsZW5ndGgoJHZhbHMpIDwgMywgJGEsIG50aCgkdmFscywgMykpO1xuICAkZDogaWYobGVuZ3RoKCR2YWxzKSA8IDIsICRhLCBudGgoJHZhbHMsIGlmKGxlbmd0aCgkdmFscykgPCA0LCAyLCA0KSkpO1xuXG4gIEBpZiAkYSA9PSAwIHsgJGE6IDA7IH1cbiAgQGlmICRiID09IDAgeyAkYjogMDsgfVxuICBAaWYgJGMgPT0gMCB7ICRjOiAwOyB9XG4gIEBpZiAkZCA9PSAwIHsgJGQ6IDA7IH1cblxuICBAaWYgJGEgPT0gJGIgYW5kICRhID09ICRjIGFuZCAkYSA9PSAkZCB7ICRvdXRwdXQ6ICRhOyAgICAgICAgICB9XG4gIEBlbHNlIGlmICRhID09ICRjIGFuZCAkYiA9PSAkZCAgICAgICAgIHsgJG91dHB1dDogJGEgJGI7ICAgICAgIH1cbiAgQGVsc2UgaWYgJGIgPT0gJGQgICAgICAgICAgICAgICAgICAgICAgeyAkb3V0cHV0OiAkYSAkYiAkYzsgICAgfVxuICBAZWxzZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ICRvdXRwdXQ6ICRhICRiICRjICRkOyB9XG5cbiAgQHJldHVybiAkb3V0cHV0O1xufVxuXG4vLy8gT3V0cHV0IGRpcmVjdGlvbmFsIHByb3BlcnRpZXMsIGZvciBpbnN0YW5jZSBgbWFyZ2luYC5cbi8vL1xuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRwcmVcbi8vLyAgIFByZWZpeCB0byB1c2Vcbi8vLyBAcGFyYW0ge1N0cmluZ30gJHN1ZlxuLy8vICAgU3VmZml4IHRvIHVzZVxuLy8vIEBwYXJhbSB7TGlzdH0gJHZhbHNcbi8vLyAgIExpc3Qgb2YgdmFsdWVzXG4vLy9cbi8vLyBAcmVxdWlyZSB7ZnVuY3Rpb259IGNvbGxhcHNlLWRpcmVjdGlvbmFsc1xuLy8vIEByZXF1aXJlIHtmdW5jdGlvbn0gY29udGFpbnMtZmFsc3lcblxuQG1peGluIGRpcmVjdGlvbmFsLXByb3BlcnR5KCRwcmUsICRzdWYsICR2YWxzKSB7XG4gIC8vIFByb3BlcnR5IE5hbWVzXG4gICR0b3A6ICAgICRwcmUgKyBcIi10b3BcIiAgICArIGlmKCRzdWYsIFwiLSN7JHN1Zn1cIiwgXCJcIik7XG4gICRib3R0b206ICRwcmUgKyBcIi1ib3R0b21cIiArIGlmKCRzdWYsIFwiLSN7JHN1Zn1cIiwgXCJcIik7XG4gICRsZWZ0OiAgICRwcmUgKyBcIi1sZWZ0XCIgICArIGlmKCRzdWYsIFwiLSN7JHN1Zn1cIiwgXCJcIik7XG4gICRyaWdodDogICRwcmUgKyBcIi1yaWdodFwiICArIGlmKCRzdWYsIFwiLSN7JHN1Zn1cIiwgXCJcIik7XG4gICRhbGw6ICAgICRwcmUgKyAgICAgICAgICAgICBpZigkc3VmLCBcIi0jeyRzdWZ9XCIsIFwiXCIpO1xuXG4gICR2YWxzOiBjb2xsYXBzZS1kaXJlY3Rpb25hbHMoJHZhbHMpO1xuXG4gIEBpZiBjb250YWlucy1mYWxzeSgkdmFscykge1xuICAgIEBpZiBudGgoJHZhbHMsIDEpIHsgI3skdG9wfTogbnRoKCR2YWxzLCAxKTsgfVxuXG4gICAgQGlmIGxlbmd0aCgkdmFscykgPT0gMSB7XG4gICAgICBAaWYgbnRoKCR2YWxzLCAxKSB7ICN7JHJpZ2h0fTogbnRoKCR2YWxzLCAxKTsgfVxuICAgIH0gQGVsc2Uge1xuICAgICAgQGlmIG50aCgkdmFscywgMikgeyAjeyRyaWdodH06IG50aCgkdmFscywgMik7IH1cbiAgICB9XG5cbiAgICBAaWYgbGVuZ3RoKCR2YWxzKSA9PSAyIHtcbiAgICAgIEBpZiBudGgoJHZhbHMsIDEpIHsgI3skYm90dG9tfTogbnRoKCR2YWxzLCAxKTsgfVxuICAgICAgQGlmIG50aCgkdmFscywgMikgeyAjeyRsZWZ0fTogICBudGgoJHZhbHMsIDIpOyB9XG4gICAgfSBAZWxzZSBpZiBsZW5ndGgoJHZhbHMpID09IDMge1xuICAgICAgQGlmIG50aCgkdmFscywgMykgeyAjeyRib3R0b219OiBudGgoJHZhbHMsIDMpOyB9XG4gICAgICBAaWYgbnRoKCR2YWxzLCAyKSB7ICN7JGxlZnR9OiAgIG50aCgkdmFscywgMik7IH1cbiAgICB9IEBlbHNlIGlmIGxlbmd0aCgkdmFscykgPT0gNCB7XG4gICAgICBAaWYgbnRoKCR2YWxzLCAzKSB7ICN7JGJvdHRvbX06IG50aCgkdmFscywgMyk7IH1cbiAgICAgIEBpZiBudGgoJHZhbHMsIDQpIHsgI3skbGVmdH06ICAgbnRoKCR2YWxzLCA0KTsgfVxuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgI3skYWxsfTogJHZhbHM7XG4gIH1cbn1cbiIsIi8vIFNob3J0aGFuZCBtaXhpbi4gU3VwcG9ydHMgbXVsdGlwbGUgcGFyZW50aGVzZXMtZGVsaW1pbmF0ZWQgdmFsdWVzIGZvciBlYWNoIHZhcmlhYmxlLlxuLy8gRXhhbXBsZTogQGluY2x1ZGUgdHJhbnNpdGlvbiAoYWxsIDJzIGVhc2UtaW4tb3V0KTtcbi8vICAgICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24gKG9wYWNpdHkgMXMgZWFzZS1pbiAycywgd2lkdGggMnMgZWFzZS1vdXQpO1xuLy8gICAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbi1wcm9wZXJ0eSAodHJhbnNmb3JtLCBvcGFjaXR5KTtcblxuQG1peGluIHRyYW5zaXRpb24oJHByb3BlcnRpZXMuLi4pIHtcbiAgLy8gRml4IGZvciB2ZW5kb3ItcHJlZml4IHRyYW5zZm9ybSBwcm9wZXJ0eVxuICAkbmVlZHMtcHJlZml4ZXM6IGZhbHNlO1xuICAkd2Via2l0OiAoKTtcbiAgJG1vejogKCk7XG4gICRzcGVjOiAoKTtcblxuICAvLyBDcmVhdGUgbGlzdHMgZm9yIHZlbmRvci1wcmVmaXhlZCB0cmFuc2Zvcm1cbiAgQGVhY2ggJGxpc3QgaW4gJHByb3BlcnRpZXMge1xuICAgIEBpZiBudGgoJGxpc3QsIDEpID09IFwidHJhbnNmb3JtXCIge1xuICAgICAgJG5lZWRzLXByZWZpeGVzOiB0cnVlO1xuICAgICAgJGxpc3QxOiAtd2Via2l0LXRyYW5zZm9ybTtcbiAgICAgICRsaXN0MjogLW1vei10cmFuc2Zvcm07XG4gICAgICAkbGlzdDM6ICgpO1xuXG4gICAgICBAZWFjaCAkdmFyIGluICRsaXN0IHtcbiAgICAgICAgJGxpc3QzOiBqb2luKCRsaXN0MywgJHZhcik7XG5cbiAgICAgICAgQGlmICR2YXIgIT0gXCJ0cmFuc2Zvcm1cIiB7XG4gICAgICAgICAgJGxpc3QxOiBqb2luKCRsaXN0MSwgJHZhcik7XG4gICAgICAgICAgJGxpc3QyOiBqb2luKCRsaXN0MiwgJHZhcik7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJHdlYmtpdDogYXBwZW5kKCR3ZWJraXQsICRsaXN0MSk7XG4gICAgICAkbW96OiAgICBhcHBlbmQoJG1veiwgICAgJGxpc3QyKTtcbiAgICAgICRzcGVjOiAgIGFwcGVuZCgkc3BlYywgICAkbGlzdDMpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJHdlYmtpdDogYXBwZW5kKCR3ZWJraXQsICRsaXN0LCBjb21tYSk7XG4gICAgICAkbW96OiAgICBhcHBlbmQoJG1veiwgICAgJGxpc3QsIGNvbW1hKTtcbiAgICAgICRzcGVjOiAgIGFwcGVuZCgkc3BlYywgICAkbGlzdCwgY29tbWEpO1xuICAgIH1cbiAgfVxuXG4gIEBpZiAkbmVlZHMtcHJlZml4ZXMge1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogJHdlYmtpdDtcbiAgICAgICAtbW96LXRyYW5zaXRpb246ICRtb3o7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAkc3BlYztcbiAgfSBAZWxzZSB7XG4gICAgQGlmIGxlbmd0aCgkcHJvcGVydGllcykgPj0gMSB7XG4gICAgICBAaW5jbHVkZSBwcmVmaXhlcih0cmFuc2l0aW9uLCAkcHJvcGVydGllcywgd2Via2l0IG1veiBzcGVjKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICRwcm9wZXJ0aWVzOiBhbGwgMC4xNXMgZWFzZS1vdXQgMHM7XG4gICAgICBAaW5jbHVkZSBwcmVmaXhlcih0cmFuc2l0aW9uLCAkcHJvcGVydGllcywgd2Via2l0IG1veiBzcGVjKTtcbiAgICB9XG4gIH1cbn1cblxuQG1peGluIHRyYW5zaXRpb24tcHJvcGVydHkoJHByb3BlcnRpZXMuLi4pIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2l0aW9uLXByb3BlcnR5LW5hbWVzKCRwcm9wZXJ0aWVzLCBcIndlYmtpdFwiKTtcbiAgICAgLW1vei10cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2l0aW9uLXByb3BlcnR5LW5hbWVzKCRwcm9wZXJ0aWVzLCBcIm1velwiKTtcbiAgICAgICAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2l0aW9uLXByb3BlcnR5LW5hbWVzKCRwcm9wZXJ0aWVzLCBmYWxzZSk7XG59XG5cbkBtaXhpbiB0cmFuc2l0aW9uLWR1cmF0aW9uKCR0aW1lcy4uLikge1xuICBAaW5jbHVkZSBwcmVmaXhlcih0cmFuc2l0aW9uLWR1cmF0aW9uLCAkdGltZXMsIHdlYmtpdCBtb3ogc3BlYyk7XG59XG5cbkBtaXhpbiB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbigkbW90aW9ucy4uLikge1xuICAvLyBlYXNlIHwgbGluZWFyIHwgZWFzZS1pbiB8IGVhc2Utb3V0IHwgZWFzZS1pbi1vdXQgfCBjdWJpYy1iZXppZXIoKVxuICBAaW5jbHVkZSBwcmVmaXhlcih0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbiwgJG1vdGlvbnMsIHdlYmtpdCBtb3ogc3BlYyk7XG59XG5cbkBtaXhpbiB0cmFuc2l0aW9uLWRlbGF5KCR0aW1lcy4uLikge1xuICBAaW5jbHVkZSBwcmVmaXhlcih0cmFuc2l0aW9uLWRlbGF5LCAkdGltZXMsIHdlYmtpdCBtb3ogc3BlYyk7XG59XG4iLCIvKlxuU0NTUyB2YXJpYWJsZXMgYXJlIGluZm9ybWF0aW9uIGFib3V0IGljb24ncyBjb21waWxlZCBzdGF0ZSwgc3RvcmVkIHVuZGVyIGl0cyBvcmlnaW5hbCBmaWxlIG5hbWVcblxuLmljb24taG9tZSB7XG4gIHdpZHRoOiAkaWNvbi1ob21lLXdpZHRoO1xufVxuXG5UaGUgbGFyZ2UgYXJyYXktbGlrZSB2YXJpYWJsZXMgY29udGFpbiBhbGwgaW5mb3JtYXRpb24gYWJvdXQgYSBzaW5nbGUgaWNvblxuJGljb24taG9tZTogeCB5IG9mZnNldF94IG9mZnNldF95IHdpZHRoIGhlaWdodCB0b3RhbF93aWR0aCB0b3RhbF9oZWlnaHQgaW1hZ2VfcGF0aDtcblxuQXQgdGhlIGJvdHRvbSBvZiB0aGlzIHNlY3Rpb24sIHdlIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHNwcml0ZXNoZWV0IGl0c2VsZlxuJHNwcml0ZXNoZWV0OiB3aWR0aCBoZWlnaHQgaW1hZ2UgJHNwcml0ZXNoZWV0LXNwcml0ZXM7XG4qL1xuJGZhY2Vib29rLW5hbWU6ICdmYWNlYm9vayc7XG4kZmFjZWJvb2steDogMHB4O1xuJGZhY2Vib29rLXk6IDEyMHB4O1xuJGZhY2Vib29rLW9mZnNldC14OiAwcHg7XG4kZmFjZWJvb2stb2Zmc2V0LXk6IC0xMjBweDtcbiRmYWNlYm9vay13aWR0aDogMTIxcHg7XG4kZmFjZWJvb2staGVpZ2h0OiAxMjBweDtcbiRmYWNlYm9vay10b3RhbC13aWR0aDogMjkxcHg7XG4kZmFjZWJvb2stdG90YWwtaGVpZ2h0OiAyNDBweDtcbiRmYWNlYm9vay1pbWFnZTogJy4uL2ltZy9zcHJpdGVzLnBuZyc7XG4kZmFjZWJvb2s6ICgwcHgsIDEyMHB4LCAwcHgsIC0xMjBweCwgMTIxcHgsIDEyMHB4LCAyOTFweCwgMjQwcHgsICcuLi9pbWcvc3ByaXRlcy5wbmcnLCAnZmFjZWJvb2snLCApO1xuJGdpdGh1Yi1uYW1lOiAnZ2l0aHViJztcbiRnaXRodWIteDogMTQ5cHg7XG4kZ2l0aHViLXk6IDBweDtcbiRnaXRodWItb2Zmc2V0LXg6IC0xNDlweDtcbiRnaXRodWItb2Zmc2V0LXk6IDBweDtcbiRnaXRodWItd2lkdGg6IDE0MnB4O1xuJGdpdGh1Yi1oZWlnaHQ6IDEyMHB4O1xuJGdpdGh1Yi10b3RhbC13aWR0aDogMjkxcHg7XG4kZ2l0aHViLXRvdGFsLWhlaWdodDogMjQwcHg7XG4kZ2l0aHViLWltYWdlOiAnLi4vaW1nL3Nwcml0ZXMucG5nJztcbiRnaXRodWI6ICgxNDlweCwgMHB4LCAtMTQ5cHgsIDBweCwgMTQycHgsIDEyMHB4LCAyOTFweCwgMjQwcHgsICcuLi9pbWcvc3ByaXRlcy5wbmcnLCAnZ2l0aHViJywgKTtcbiR0d2l0dGVyLW5hbWU6ICd0d2l0dGVyJztcbiR0d2l0dGVyLXg6IDBweDtcbiR0d2l0dGVyLXk6IDBweDtcbiR0d2l0dGVyLW9mZnNldC14OiAwcHg7XG4kdHdpdHRlci1vZmZzZXQteTogMHB4O1xuJHR3aXR0ZXItd2lkdGg6IDE0OXB4O1xuJHR3aXR0ZXItaGVpZ2h0OiAxMjBweDtcbiR0d2l0dGVyLXRvdGFsLXdpZHRoOiAyOTFweDtcbiR0d2l0dGVyLXRvdGFsLWhlaWdodDogMjQwcHg7XG4kdHdpdHRlci1pbWFnZTogJy4uL2ltZy9zcHJpdGVzLnBuZyc7XG4kdHdpdHRlcjogKDBweCwgMHB4LCAwcHgsIDBweCwgMTQ5cHgsIDEyMHB4LCAyOTFweCwgMjQwcHgsICcuLi9pbWcvc3ByaXRlcy5wbmcnLCAndHdpdHRlcicsICk7XG4keW91dHViZS1uYW1lOiAneW91dHViZSc7XG4keW91dHViZS14OiAxMjFweDtcbiR5b3V0dWJlLXk6IDEyMHB4O1xuJHlvdXR1YmUtb2Zmc2V0LXg6IC0xMjFweDtcbiR5b3V0dWJlLW9mZnNldC15OiAtMTIwcHg7XG4keW91dHViZS13aWR0aDogMTIwcHg7XG4keW91dHViZS1oZWlnaHQ6IDEyMHB4O1xuJHlvdXR1YmUtdG90YWwtd2lkdGg6IDI5MXB4O1xuJHlvdXR1YmUtdG90YWwtaGVpZ2h0OiAyNDBweDtcbiR5b3V0dWJlLWltYWdlOiAnLi4vaW1nL3Nwcml0ZXMucG5nJztcbiR5b3V0dWJlOiAoMTIxcHgsIDEyMHB4LCAtMTIxcHgsIC0xMjBweCwgMTIwcHgsIDEyMHB4LCAyOTFweCwgMjQwcHgsICcuLi9pbWcvc3ByaXRlcy5wbmcnLCAneW91dHViZScsICk7XG4kc3ByaXRlc2hlZXQtd2lkdGg6IDI5MXB4O1xuJHNwcml0ZXNoZWV0LWhlaWdodDogMjQwcHg7XG4kc3ByaXRlc2hlZXQtaW1hZ2U6ICcuLi9pbWcvc3ByaXRlcy5wbmcnO1xuJHNwcml0ZXNoZWV0LXNwcml0ZXM6ICgkZmFjZWJvb2ssICRnaXRodWIsICR0d2l0dGVyLCAkeW91dHViZSwgKTtcbiRzcHJpdGVzaGVldDogKDI5MXB4LCAyNDBweCwgJy4uL2ltZy9zcHJpdGVzLnBuZycsICRzcHJpdGVzaGVldC1zcHJpdGVzLCApO1xuXG4vKlxuVGhlIHByb3ZpZGVkIG1peGlucyBhcmUgaW50ZW5kZWQgdG8gYmUgdXNlZCB3aXRoIHRoZSBhcnJheS1saWtlIHZhcmlhYmxlc1xuXG4uaWNvbi1ob21lIHtcbiAgQGluY2x1ZGUgc3ByaXRlLXdpZHRoKCRpY29uLWhvbWUpO1xufVxuXG4uaWNvbi1lbWFpbCB7XG4gIEBpbmNsdWRlIHNwcml0ZSgkaWNvbi1lbWFpbCk7XG59XG4qL1xuQG1peGluIHNwcml0ZS13aWR0aCgkc3ByaXRlKSB7XG4gIHdpZHRoOiBudGgoJHNwcml0ZSwgNSk7XG59XG5cbkBtaXhpbiBzcHJpdGUtaGVpZ2h0KCRzcHJpdGUpIHtcbiAgaGVpZ2h0OiBudGgoJHNwcml0ZSwgNik7XG59XG5cbkBtaXhpbiBzcHJpdGUtcG9zaXRpb24oJHNwcml0ZSkge1xuICAkc3ByaXRlLW9mZnNldC14OiBudGgoJHNwcml0ZSwgMyk7XG4gICRzcHJpdGUtb2Zmc2V0LXk6IG50aCgkc3ByaXRlLCA0KTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogJHNwcml0ZS1vZmZzZXQteCAgJHNwcml0ZS1vZmZzZXQteTtcbn1cblxuQG1peGluIHNwcml0ZS1pbWFnZSgkc3ByaXRlKSB7XG4gICRzcHJpdGUtaW1hZ2U6IG50aCgkc3ByaXRlLCA5KTtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCN7JHNwcml0ZS1pbWFnZX0pO1xufVxuXG5AbWl4aW4gc3ByaXRlKCRzcHJpdGUpIHtcbiAgQGluY2x1ZGUgc3ByaXRlLWltYWdlKCRzcHJpdGUpO1xuICBAaW5jbHVkZSBzcHJpdGUtcG9zaXRpb24oJHNwcml0ZSk7XG4gIEBpbmNsdWRlIHNwcml0ZS13aWR0aCgkc3ByaXRlKTtcbiAgQGluY2x1ZGUgc3ByaXRlLWhlaWdodCgkc3ByaXRlKTtcbn1cblxuLypcblRoZSBgc3ByaXRlc2AgbWl4aW4gZ2VuZXJhdGVzIGlkZW50aWNhbCBvdXRwdXQgdG8gdGhlIENTUyB0ZW1wbGF0ZVxuICBidXQgY2FuIGJlIG92ZXJyaWRkZW4gaW5zaWRlIG9mIFNDU1NcblxuQGluY2x1ZGUgc3ByaXRlcygkc3ByaXRlc2hlZXQtc3ByaXRlcyk7XG4qL1xuQG1peGluIHNwcml0ZXMoJHNwcml0ZXMpIHtcbiAgQGVhY2ggJHNwcml0ZSBpbiAkc3ByaXRlcyB7XG4gICAgJHNwcml0ZS1uYW1lOiBudGgoJHNwcml0ZSwgMTApO1xuICAgIC4jeyRzcHJpdGUtbmFtZX0ge1xuICAgICAgQGluY2x1ZGUgc3ByaXRlKCRzcHJpdGUpO1xuICAgIH1cbiAgfVxufVxuIiwiQG1peGluIHNwcml0ZXMoJHNwcml0ZXMpIHtcbiAgQGVhY2ggJHNwcml0ZSBpbiAkc3ByaXRlcyB7XG4gICAgJHNwcml0ZS1uYW1lOiBudGgoJHNwcml0ZSwgMTApO1xuICAgIC4jeyRzcHJpdGUtbmFtZX0ge1xuICAgICAgQGluY2x1ZGUgc3ByaXRlKCRzcHJpdGUpO1xuICAgICAgXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBtYXJnaW46ICRzbWFsbC1zcGFjaW5nO1xuICAgIFxuICAgIH1cbiAgfVxufVxuXG5AaW5jbHVkZSBzcHJpdGVzKCRzcHJpdGVzaGVldC1zcHJpdGVzKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */