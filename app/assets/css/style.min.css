/*
@mixin synapse-custom($var) {
  @if ($var == 'big-font') {
    font-weight: 700;
    font-style: italic;
  } @elseif ($var == 'small-font') {
    font-weight: 300;
    text-decoration: underline;
  }
}
*//*! normalize.css v4.0.0 | MIT License | github.com/necolas/normalize.css *//**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */html {
  font-family: sans-serif;
 /* 1 */
  -ms-text-size-adjust: 100%;
 /* 2 */
  -webkit-text-size-adjust: 100%;
 /* 2 */;
}/**
 * Remove the margin in all browsers (opinionated).
 */body {
  margin: 0;
}/* HTML5 display definitions
   ========================================================================== *//**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 *//**
 * Add the correct display in IE 9-.
 *//**
 * Add the correct display in iOS 4-7.
 *//**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 *//**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 *//* Links
   ========================================================================== *//**
 * Remove the gray background on active links in IE 10.
 */a {
  background-color: transparent;
}/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */a:active,a:hover {
  outline-width: 0;
}/* Text-level semantics
   ========================================================================== *//**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 *//**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */strong {
  font-weight: inherit;
}/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */strong {
  font-weight: bolder;
}/**
 * Add the correct font style in Android 4.3-.
 *//**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */h1 {
  font-size: 2em;
  margin: 0.67em 0;
}/**
 * Add the correct background and color in IE 9-.
 *//**
 * Add the correct font size in all browsers.
 *//**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 *//* Embedded content
   ========================================================================== *//**
 * Remove the border on images inside links in IE 10-.
 *//**
 * Hide the overflow in IE.
 *//* Grouping content
   ========================================================================== *//**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */pre {
  font-family: monospace, monospace;
 /* 1 */
  font-size: 1em;
 /* 2 */;
}/**
 * Add the correct margin in IE 8.
 *//**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 *//* Forms
   ========================================================================== *//**
 * Change font properties to `inherit` in all browsers (opinionated).
 */input,select,textarea {
  font: inherit;
}/**
 * Restore the font weight unset by the previous rule.
 */optgroup {
  font-weight: bold;
}/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 * 2. Show the overflow in Edge, Firefox, and IE.
 */input,select {
 /* 2 */
  overflow: visible;
}/**
 * Remove the margin in Safari.
 * 1. Remove the margin in Firefox and Safari.
 */input,select,textarea {
 /* 1 */
  margin: 0;
}/**
 * Remove the inheritence of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritence of text transform in Firefox.
 */select {
 /* 1 */
  text-transform: none;
}/**
 * Change the cursor in all browsers (opinionated).
 */[type="submit"] {
  cursor: pointer;
}/**
 * Restore the default cursor to disabled elements unset by the previous rule.
 *//**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS.
 */[type="submit"] {
  -webkit-appearance: button;
 /* 2 */;
}/**
 * Remove the inner border and padding in Firefox.
 */button::-moz-focus-inner,input::-moz-focus-inner {
  border: 0;
  padding: 0;
}/**
 * Restore the focus styles unset by the previous rule.
 */button:-moz-focusring,input:-moz-focusring {
  outline: 1px dotted ButtonText;
}/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 *//**
 * Remove the default vertical scrollbar in IE.
 */textarea {
  overflow: auto;
}/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */[type="checkbox"],[type="radio"] {
  box-sizing: border-box;
 /* 1 */
  padding: 0;
 /* 2 */;
}/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 *//**
 * Correct the odd appearance of search inputs in Chrome and Safari.
 *//**
 * Remove the inner padding and cancel buttons in Chrome on OS X and
 * Safari on OS X.
 */body {
  font-size: 16.8px;
  font-size: 1.05rem;
  line-height: 34px;
  line-height: 2.02381rem;
  color: #333;
  font-family: "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  font-feature-settings: 'kern', 'liga', 'pnum';
}

h1 {
  font-size: 40.13162px;
  font-size: 2.50823rem;
}

h2 {
  font-size: 33.44302px;
  font-size: 2.09019rem;
}

h3 {
  font-size: 27.86918px;
  font-size: 1.74182rem;
}

h4 {
  font-size: 23.22432px;
  font-size: 1.45152rem;
}

h5 {
  font-size: 19.3536px;
  font-size: 1.2096rem;
}

h6 {
  font-size: 16.128px;
  font-size: 1.008rem;
}

blockquote {
  font-size: 16.128px;
  font-size: 1.008rem;
}

p {
  font-size: 13.44px;
  font-size: 0.84rem;
}

h1,h2,h3,h4,h5,h6 {
  line-height: 68px;
  line-height: 4.04762rem;
  margin-top: 68px;
  margin-top: 4.04762rem;
  margin-bottom: 34px;
  margin-bottom: 2.02381rem;
  font-family: "Verdana", "Geneva", sans-serif;
}

h1 + h2 {
  margin-top: 34px;
  margin-top: 2.02381rem;
}

h2 + h3,h3 + h4,h4 + h5 {
  margin-top: 17px;
  margin-top: 1.0119rem;
}

h5 + h6 {
  margin-top: -17px;
  margin-top: -1.0119rem;
}

p {
  margin-bottom: 34px;
  margin-bottom: 2.02381rem;
}

a {
  color: #477dca;
  text-decoration: none;
  transition: color 150ms ease;
}

a:active,a:focus,a:hover {
  color: #355e98;
}

strong {
  font-weight: 700;
}

em {
  font-style: italic;
}

blockquote {
  margin: 0;
  margin-top: 8px;
  margin-bottom: 1em;
  text-align: center;
  box-sizing: border-box;
  padding: 1.0119em 2.02381em;
  border-top: 2px solid #999;
  border-bottom: 2px solid #999;
}

body {
  width: 100%;
  padding: 1em;
  box-sizing: border-box;
}

table {
  border-collapse: collapse;
  font-feature-settings: 'kern', 'liga', 'tnum';
  margin: 1.0119em 0;
  table-layout: fixed;
  width: 100%;
}

th {
  border-bottom: 1px solid #737373;
  font-weight: 600;
  padding: 1.0119em 0;
  text-align: left;
}

td {
  border-bottom: 2px solid #999;
  padding: 1.0119em 0;
}

tr,td,th {
  vertical-align: middle;
}

fieldset {
  background-color: #ececec;
  border: 2px solid #999;
  margin: 0 0 1.0119em;
  padding: 1.0119em 2.02381em;
  border-radius: 0.25298em;
}

input,label,select {
  display: block;
  font-family: "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  font-size: 105;
}

label {
  font-weight: 600;
  margin-bottom: 0.50595em;
}

input[type="password"],input[type="text"],textarea {
  background-color: #fff;
  border: 2px solid #999;
  border-radius: 0.50595em;
  box-shadow: inset 0 2px 6px rgba(0, 0, 0, 0.06);
  box-sizing: border-box;
  font-family: "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  font-size: 105;
  margin-bottom: 1.0119em;
  padding: 0.6746em;
  transition: border-color 150ms ease;
  width: 100%;
}

input[type="password"]:hover,input[type="text"]:hover,textarea:hover {
  border-color: #7a7a7a;
}

input[type="password"]:focus,input[type="text"]:focus,textarea:focus {
  border-color: #477dca;
  box-shadow: inset 0 2px 6px rgba(0, 0, 0, 0.06), 0 0 10px rgba(55, 112, 192, 0.7);
  outline: none;
}

input[type="password"]:disabled,input[type="text"]:disabled,textarea:disabled {
  background-color: #f2f2f2;
  cursor: not-allowed;
}

input[type="password"]:disabled:hover,input[type="text"]:disabled:hover,textarea:disabled:hover {
  border: 2px solid #999;
}

textarea {
  resize: vertical;
}

input[type="checkbox"],input[type="radio"] {
  display: inline;
  margin-right: 0.50595em;
}

input[type="file"] {
  margin-bottom: 1.0119em;
  width: 100%;
}

select {
  margin-bottom: 2.02381em;
  max-width: 100%;
  width: auto;
}

ul,ol {
  list-style-type: none;
  margin: 0;
  padding: 0;
  margin-bottom: 1.0119em;
  padding-left: 3.54167em;
}

ul {
  list-style-type: disc;
}

ol {
  list-style-type: decimal;
}

dl {
  margin-bottom: 1.0119em;
}

dl dt {
  font-weight: bold;
  margin-top: 1.0119em;
}

dl dd {
  margin: 0;
}

pre {
  padding: 2.02381em;
  overflow: scroll;
  color: #ddd;
  font-family: "Bitstream Vera Sans Mono", "Consolas", "Courier", monospace;
  background-color: #333;
}

input[type="submit"] {
  appearance: none;
  background-color: #477dca;
  border: 0;
  border-radius: 0.50595em;
  color: #fff;
  cursor: pointer;
  display: inline-block;
  font-family: "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  font-size: 105;
  -webkit-font-smoothing: antialiased;
  font-weight: 600;
  line-height: 1;
  padding: 1.0119em 2.02381em;
  text-decoration: none;
  transition: background-color 150ms ease;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
}

input[type="submit"]:hover,input[type="submit"]:focus {
  background-color: #3964a2;
  color: #fff;
}

input[type="submit"]:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

input[type="submit"]:disabled:hover {
  background-color: #477dca;
}/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*//*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*//*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/.facebook {background-image: url(../img/sprites.png);background-position: 0px -120px;width: 121px;height: 120px;display: inline-block;margin: 1.0119em;}.github {background-image: url(../img/sprites.png);background-position: -149px 0px;width: 142px;height: 120px;display: inline-block;margin: 1.0119em;}.twitter {background-image: url(../img/sprites.png);background-position: 0px 0px;width: 149px;height: 120px;display: inline-block;margin: 1.0119em;}.youtube {background-image: url(../img/sprites.png);background-position: -121px -120px;width: 120px;height: 120px;display: inline-block;margin: 1.0119em;}@media screen and (min-width: 30em) {blockquote {width: 83.33333%;margin: 0 auto;}}@media screen and (min-width: 49.1875em) {h1 {font-size: 50.16453px;font-size: 3.13528rem;}h2 {font-size: 41.80378px;font-size: 2.61274rem;}h3 {font-size: 34.83648px;font-size: 2.17728rem;}h4 {font-size: 29.0304px;font-size: 1.8144rem;}h5 {font-size: 24.192px;font-size: 1.512rem;}h6 {font-size: 20.16px;font-size: 1.26rem;}blockquote {font-size: 20.16px;font-size: 1.26rem;}p {font-size: 16.8px;font-size: 1.05rem;}blockquote {width: 50%;margin: 0;margin-left: 1em;float: right;}body {width: 83.33333%;padding: 8px;margin-left: 8.33333%;}}@media screen and (min-width: 56.25em) {blockquote {width: 33.33333%;}}@media screen and (min-width: 75em) {body {width: 66.66667%;margin-left: 16.66667%;}}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NvbXBvbmVudHMvU3luYXBzZS1HcmlkL19zeW5hcHNlLWdyaWQuc2NzcyIsIi4uL2NvbXBvbmVudHMvbm9ybWFsaXplLWNzcy9ub3JtYWxpemUuY3NzIiwiYmFzZS9fdHlwb2dyYXBoeS5zY3NzIiwidXRpbHMvX21peGlucy5zY3NzIiwidXRpbHMvX3ZhcmlhYmxlcy5zY3NzIiwiLi4vY29tcG9uZW50cy9ib3VyYm9uL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvYWRkb25zL19mb250LXN0YWNrcy5zY3NzIiwiLi4vY29tcG9uZW50cy9ib3VyYm9uL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvZnVuY3Rpb25zL19weC10by1yZW0uc2NzcyIsIi4uL2NvbXBvbmVudHMvYm91cmJvbi9hcHAvYXNzZXRzL3N0eWxlc2hlZXRzL2Z1bmN0aW9ucy9fbW9kdWxhci1zY2FsZS5zY3NzIiwiLi4vY29tcG9uZW50cy9ib3VyYm9uL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvZnVuY3Rpb25zL19zaGFkZS5zY3NzIiwiLi4vY29tcG9uZW50cy9ib3VyYm9uL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvaGVscGVycy9fZGlyZWN0aW9uYWwtdmFsdWVzLnNjc3MiLCJsYXlvdXQvX2dyaWQuc2NzcyIsImNvbXBvbmVudHMvX3RhYmxlcy5zY3NzIiwiY29tcG9uZW50cy9fZm9ybXMuc2NzcyIsImNvbXBvbmVudHMvX2xpc3RzLnNjc3MiLCJjb21wb25lbnRzL19wcmUuc2NzcyIsImNvbXBvbmVudHMvX2J1dHRvbnMuc2NzcyIsImNvbXBvbmVudHMvX3Nwcml0ZXMuc2NzcyIsImNvbXBvbmVudHMvX3Nwcml0ZXMtc2V0dGluZ3Muc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxUEE7Ozs7Ozs7Ozs7RUFVRTtBQy9QRiw0RUFBNEU7QUFFNUU7OztHQUdHO0FBRUgsSUFBSSxDQUFDO0VBQ0gsV0FBVyxFQUFFLFVBQVc7RUFBRSxPQUFPO0VBQ2pDLG9CQUFvQixFQUFFLElB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LEFBQVksQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxPQUFMLEFBQVksQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxRQUFMLEFBQWEsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxVQUFMLEFBQWUsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxRQUFMLEFBQWEsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxLQUFMLEFBQVUsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxNQUFMLEFBQVcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxNQUFMLEFBQVcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxLQUFMLEFBQVUsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxNQUFMLEFBQVcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxLQUFLLENBQUEsSUFBQyxFQUFNLE1BQU0sRUFBRSxRQUFRLE1BQU07QUFDN2EsTUFBTSxDQUFBLFFBQUMsQ0FBRCxRQUFDLENBQWtCLE1BQU0sQ0FEckI7RUFDTixZQUFZLEVKckJOLE9BQUc7Q0lvQkY7O0FBSVIsS0FBSyxDQUFBLElBQUMsQ0FBSyxPQUFMLEFBQVksQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxNQUFMLEFBQVcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxVQUFMLEFBQWUsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFBLElBQUMsQ0FBSyxnQkFBTCxBQUFxQixDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLE9BQUwsQUFBWSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLE9BQUwsQUFBWSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLFFBQUwsQUFBYSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUEsSUFBQyxDQUFLLFVBQUwsQUFBZSxD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Ozs7Ozs7OztFQVlFO0FBbURGOzs7Ozs7Ozs7O0VBVUU7QUEyQkY7Ozs7O0VBS0U7QUN2R2lDLFNBQVMsQ0FDdkM7RUR1RkgsZ0JBQWdCLEVBQUUsdUJBQUc7RUFMckIsbUJBQW1CLEVBOURHLEdBQUcsQ0FBRyxNQUFLO0VBb0RqQyxLQUFLLEVBcEQ4QixLQUFLO0VBd0R4QyxNQUFNLEVBeERvQyxLQUFLO0VDakIzQyxPQUFPLEVBQUUsWUFBYTtFQUN0QixNQUFNLEViK0VJLFFBQWE7Q2FuRnZCOztBQUQ2QixPQUFPLENBQ3JDO0VEdUZILGdCQUFnQixFQUFFLHVCQUFHO0VBTHJCLG1CQUFtQixFQW5ERSxNQUFLLENBQUUsR0FBRztFQXlDL0IsS0FBSyxFQXpDNEIsS0FBSztFQTZDdEMsTUFBTSxFQTdDa0MsS0FBSztFQzVCekMsT0FBTyxFQUFFLFlBQWE7RUFDdEIsTUFBTSxFYitFSSxRQUFhO0NhbkZ2Qjs7QUFENkIsUUFBUSxDQUN0QztFRHVGSCxnQkFBZ0IsRUFBRSx1QkFBRztFQUxyQixtQkFBbUIsRUF4Q0EsR0FBRyxDQUFFLEdBQUc7RUE4QjNCLEtBQUssRUE5QndCLEtBQUs7RUFrQ2xDLE1BQU0sRUFsQzhCLEtBQUs7RUN2Q3JDLE9BQU8sRUFBRSxZQUFhO0VBQ3RCLE1BQU0sRWIrRUksUUFBYTtDYW5GdkI7O0FBRDZCLFFBQVEsQ0FDdEM7RUR1RkgsZ0JBQWdCLEVBQUUsdUJBQUc7RUFMckIsbUJBQW1CLEVBN0JLLE1BQUssQ0FBRyxNQUFLO0VBbUJyQyxLQUFLLEVBbkJrQyxLQUFLO0VBdUI1QyxNQUFNLEVBdkJ3QyxLQUFLO0VDbEQvQyxPQUFPLEVBQUUsWUFBYTtFQUN0QixNQUFNLEViK0VJLFFBQWE7Q2FuRnZCIiwiZmlsZSI6Im1haW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRnVuY3Rpb24gdG8gZ2V0IGRlZXBlciBtYXAgdmFsdWVzIGluIHRoZSBtaXhpblxuLy8gVXNlZCB0byBnZXQgc2V0dGluZyB2YWx1ZXMgaW4gdGhlIG1peGluXG5AZnVuY3Rpb24gbWFwLWRlZXAtZ2V0KCRtYXAsICRrZXlzLi4uKSB7XG4gICAgQGVhY2ggJGtleSBpbiAka2V5cyB7XG4gICAgICAgICRtYXA6IG1hcC1nZXQoJG1hcCwgJGtleSk7XG4gICAgfVxuXG4gICAgQHJldHVybiAkbWFwO1xufVxuXG5AZnVuY3Rpb24gbWFwLWNoZWNrKCRtLCAkYSl7XG4gIEBpZiBtYXAtaGFzLWtleSgkbSwgJGEpIHtcbiAgICBAcmV0dXJuIHRydWU7XG4gIH0gQGVsc2Uge1xuICAgIEByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuLy8gRnVuY3Rpb24gdG8gYWRkIGdlbmVyYXRlZCBtYXAgdmFsdWVzIGZvciBwYWRkaW5nIGFuZCBtYXJnaW4gdG8gdGhlIHV0aWxpdGllcyBtYXBcbkBmdW5jdGlvbiBtYXAtc2V0KCRuYW1lLCAkcHJvcGVydHksICR2YWx1ZSwgJG1hcCkge1xuICAkbmV3OiAoXG4gICAgJG5hbWU6IChcbiAgICAgIHByb3BlcnR5OiAkcHJvcGVydHksXG4gICAgICB2YWx1ZTogJHZhbHVlXG4gICAgKVxuICApO1xuICBAcmV0dXJuIG1hcC1tZXJnZSgkbWFwLCAkbmV3KTtcbn1cblxuQGZ1bmN0aW9uIHByZXBlbmQoJGxpc3QsICR2YWx1ZSkge1xuICBAcmV0dXJuIGpvaW4oJHZhbHVlLCAkbGlzdCk7XG59XG5cbi8vIEFuIGV4YW1wbGUgb2YgaG93IHRvIGNvbmZpZ3VyZSBTeW5hcHNlJ3Mgc2V0dGluZ3MgZm9yIHRoZSBncmlkXG4kc3luYXBzZTogKFxuICBjb2x1bW5zOiAxMixcbiAgbGF5b3V0czogKFxuICAgICAgICB4czogIDBweCxcbiAgICAgICAgc206ICA0ODBweCxcbiAgICAgICAgbWQ6ICA3ODdweCxcbiAgICAgICAgbGc6IDEwMjRweCxcbiAgICAgICAgeGxnOiAxMjAwcHhcbiAgICApLFxuICBzcGFjZVVuaXRzOiAoOHB4LCAxZW0sIDJlbSwgM2VtLCA0ZW0pXG4pO1xuXG4vLyBMaXN0IG9mIGFsbCBiYXNpYyB1dGlsaXRpZXMsIGVhc3kgdG8gZWRpdC5cbi8vIFRoZSBzYW1lIG9mIGVhY2ggc3ViLW1hcCBpcyB0aGUgdXRpbGl0eSBuYW1lIHRvIHJlZmVyZW5jZSBpbiB0aGUgbWl4aW5cbi8vIFRoZSBwcm9wZXJ0aWVzIGFuZCB2YWx1ZXMgYXJlIHRoZSB1dGlsaXRpZXMnIENTUyBjb21wb25lbnRzXG4kdXRpbGl0aWVzTGlzdDogKFxuICAgIGFsaWduLWM6IChcbiAgICAgIHByb3BlcnR5OiB0ZXh0LWFsaWduLFxuICAgICAgdmFsdWU6IGNlbnRlclxuICAgICksXG4gICAgYWxpZ24tbDogKFxuICAgICAgcHJvcGVydHk6IHRleHQtYWxpZ24sXG4gICAgICB2YWx1ZTogbGVmdFxuICAgICksXG4gICAgYWxpZ24tcjogKFxuICAgICAgcHJvcGVydHk6IHRleHQtYWxpZ24sXG4gICAgICB2YWx1ZTogcmlnaHRcbiAgICApLFxuICAgIGZsb2F0LXI6IChcbiAgICAgIHByb3BlcnR5OiBmbG9hdCxcbiAgICAgIHZhbHVlOiByaWdodFxuICAgICksXG4gICAgZmxvYXQtbDogKFxuICAgICAgcHJvcGVydHk6IGZsb2F0LFxuICAgICAgdmFsdWU6IGxlZnRcbiAgICApLFxuICAgIGZsb2F0LW46IChcbiAgICAgIHByb3BlcnR5OiBmbG9hdCxcbiAgICAgIHZhbHVlOiBub25lXG4gICAgKSxcbiAgICBib3JkZXItYjogKFxuICAgICAgcHJvcGVydHk6IGJveC1zaXppbmcsXG4gICAgICB2YWx1ZTogYm9yZGVyLWJveFxuICAgICksXG4gICAgaGlkZTogKFxuICAgICAgcHJvcGVydHk6IGRpc3BsYXksXG4gICAgICB2YWx1ZTogbm9uZSAhaW1wb3J0YW50XG4gICAgKVxuICApO1xuXG4vLyBHZXQgYSBsaXN0IG9mIHNwYWNpbmcgdmFyaWFibGVzIGZyb20gdGhlIHNldHRpbmdzXG4kc3BhY2luZzogbWFwLWdldCgkc3luYXBzZSwgc3BhY2VVbml0cyk7XG4kZnVsbC1zcGFjaW5nOiAkc3BhY2luZztcblxuLy8gTG9vcCB0aHJvdWdoIHRoZSBzcGFjaW5nIHNldHRpbmdzIGFuZCBnZW5lcmF0ZSBhbGwgdGhlIHV0aWxpdGllc1xuLy8gZm9yIHBhZGRpbmcgYW5kIG1hcmdpbiBwbGFjZW1lbnRcbkBlYWNoICRzaXplIGluICRzcGFjaW5nIHtcbiAgICRpOiBpbmRleCgkc3BhY2luZywgJHNpemUpO1xuXG4gICR1dGlsaXRpZXNMaXN0OiBtYXAtc2V0KHBhZC0wLCBwYWRkaW5nLCAwLCAkdXRpbGl0aWVzTGlzdCk7XG4gICR1dGlsaXRpZXNMaXN0OiBtYXAtc2V0KHBhZC0jeyRpfSwgcGFkZGluZywgJHNpemUsICR1dGlsaXRpZXNMaXN0KTtcbiAgJHV0aWxpdGllc0xpc3Q6IG1hcC1zZXQocGFkLXQtI3skaX0sIHBhZGRpbmctdG9wLCAkc2l6ZSwgJHV0aWxpdGllc0xpc3QpO1xuICAkdXRpbGl0aWVzTGlzdDogbWFwLXNldChwYWQtci0jeyRpfSwgcGFkZGluZy1yaWdodCwgJHNpemUsICR1dGlsaXRpZXNMaXN0KTtcbiAgJHV0aWxpdGllc0xpc3Q6IG1hcC1zZXQocGFkLWItI3skaX0sIHBhZGRpbmctYm90dG9tLCAkc2l6ZSwgJHV0aWxpdGllc0xpc3QpO1xuICAkdXRpbGl0aWVzTGlzdDogbWFwLXNldChwYWQtbC0jeyRpfSwgcGFkZGluZy1sZWZ0LCAkc2l6ZSwgJHV0aWxpdGllc0xpc3QpO1xuXG4gICR1dGlsaXRpZXNMaXN0OiBtYXAtc2V0KG1hcmctMCwgbWFyZ2luLCAwLCAkdXRpbGl0aWVzTGlzdCk7XG4gICR1dGlsaXRpZXNMaXN0OiBtYXAtc2V0KG1hcmctI3skaX0sIG1hcmdpbiwgJHNpemUsICR1dGlsaXRpZXNMaXN0KTtcbiAgJHV0aWxpdGllc0xpc3Q6IG1hcC1zZXQobWFyZy10LSN7JGl9LCBtYXJnaW4tdG9wLCAkc2l6ZSwgJHV0aWxpdGllc0xpc3QpO1xuICAkdXRpbGl0aWVzTGlzdDogbWFwLXNldChtYXJnLXItI3skaX0sIG1hcmdpbi1yaWdodCwgJHNpemUsICR1dGlsaXRpZXNMaXN0KTtcbiAgJHV0aWxpdGllc0xpc3Q6IG1hcC1zZXQobWFyZy1iLSN7JGl9LCBtYXJnaW4tYm90dG9tLCAkc2l6ZSwgJHV0aWxpdGllc0xpc3QpO1xuICAkdXRpbGl0aWVzTGlzdDogbWFwLXNldChtYXJnLWwtI3skaX0sIG1hcmdpbi1sZWZ0LCAkc2l6ZSwgJHV0aWxpdGllc0xpc3QpO1xuXG59XG5cbkBtaXhpbiBjb2x1bW4tYmFzaWNzKCRicmVha3BvaW50V2lkdGgsICR3aWR0aFBlciwgJHV0aWxpdGllcywgJG9mZnNldCwgJGNvbHVtbnMsICR0b3RhbENvbHVtbnMpIHtcblxuICBAaWYgKCRjb2x1bW5zID09ICR0b3RhbENvbHVtbnMpIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfSBAZWxzZWlmICgkY29sdW1ucyAhPSAwKSB7XG4gICAgd2lkdGg6ICR3aWR0aFBlcjtcbiAgfVxuXG4gIEBpZiAoJHV0aWxpdGllcyAhPSAnJykge1xuICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggbGVuZ3RoKCR1dGlsaXRpZXMpIHtcbiAgICAgICR1dGlsaXR5TmFtZTogbnRoKCR1dGlsaXRpZXMsICRpKTtcblxuICAgICAgQGlmICggbWFwLWNoZWNrKCR1dGlsaXRpZXNMaXN0LCAkdXRpbGl0eU5hbWUpID09IHRydWUgKSB7XG4gICAgICAgICRwcm9wZXJ0eTogbWFwLWRlZXAtZ2V0KCR1dGlsaXRpZXNMaXN0LCAkdXRpbGl0eU5hbWUsIFwicHJvcGVydHlcIik7XG4gICAgICAgICR2YWx1ZTogbWFwLWRlZXAtZ2V0KCR1dGlsaXRpZXNMaXN0LCAkdXRpbGl0eU5hbWUsIFwidmFsdWVcIik7XG5cbiAgICAgICAgI3skcHJvcGVydHl9OiAkdmFsdWU7XG4gICAgICB9IEBlbHNlaWYgICggbWFwLWNoZWNrKCR1dGlsaXRpZXNMaXN0LCAkdXRpbGl0eU5hbWUpID09IGZhbHNlICkge1xuICAgICAgICBAaW5jbHVkZSBzeW5hcHNlLWN1c3RvbSgkdXRpbGl0eU5hbWUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBpZiAoJG9mZnNldCAhPSAwKSB7XG4gICAgbWFyZ2luLWxlZnQ6IHBlcmNlbnRhZ2UoJG9mZnNldC8kdG90YWxDb2x1bW5zKTtcbiAgfVxufVxuXG4vLyBTZXR1cCBmb3IgdGhlIGFjdHVhbCBzeW5hcHNlIG1peGluXG5AbWl4aW4gc3luKCRicmVha3BvaW50LCAkY29sdW1ucywgJG9mZnNldCwgJHV0aWxpdGllczogbm9uZSkge1xuICAgIC8vIFRoZSB3aWR0aCBvZiB0aGUgYnJlYWtwb2ludCBzcGVjaWZpY2llZFxuICAgICRicmVha3BvaW50V2lkdGg6IG1hcC1kZWVwLWdldCgkc3luYXBzZSwgXCJsYXlvdXRzXCIsICRicmVha3BvaW50KTtcbiAgICAvLyBUaGUgdG90YWwgbnVtYmVyIG9mIGNvbHVtbnMgZnJvbSB0aGUgc2V0dGluZ3NcbiAgICAkdG90YWxDb2x1bW5zOiBtYXAtZ2V0KCRzeW5hcHNlLCBcImNvbHVtbnNcIik7XG4gICAgJHdpZHRoUGVyOiBwZXJjZW50YWdlKCRjb2x1bW5zLyR0b3RhbENvbHVtbnMpO1xuXG4gICAgLy8gU2V0cyB1cCB0aGUgbWVkaWEgcXVlcnkgYW5kIGFkZHMgdGhlIGJhc2ljIGdyaWQgcHJvcGVydGllcyBhbmRcbiAgICAvLyB3aWR0aCBiYXNlZCBvbiB0aGUgbnVtYmVyIG9mIGNvbHVtbnMgaW4gdGhlIG1peGluXG4gICAgQGlmICgkYnJlYWtwb2ludFdpZHRoID09IDAgKSB7XG4gICAgICBAaW5jbHVkZSBjb2x1bW4tYmFzaWNzKCRicmVha3BvaW50V2lkdGgsICR3aWR0aFBlciwgJHV0aWxpdGllcywgJG9mZnNldCwgJGNvbHVtbnMsICR0b3RhbENvbHVtbnMpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJyZWFrcG9pbnRXaWR0aCkge1xuICAgICAgICBAaW5jbHVkZSBjb2x1bW4tYmFzaWNzKCRicmVha3BvaW50V2lkdGgsICR3aWR0aFBlciwgJHV0aWxpdGllcywgJG9mZnNldCwgJGNvbHVtbnMsICR0b3RhbENvbHVtbnMpO1xuICAgICAgfVxuICAgIH1cbn1cblxuQG1peGluIGdlbmVyYXRlLXBhZGRpbmcoKSB7XG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggKGxlbmd0aCgkc3BhY2luZykgKyAxKSB7XG4gICAgJGk6ICRpIC0gMTtcbiAgICAkc3BhY2U6IG51bGw7XG5cbiAgICBAaWYgKCAkaSA9PSAwICkge1xuICAgICAgJHNwYWNlOiAwO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJHNwYWNlOiBudGgoJHNwYWNpbmcsICRpKTtcbiAgICB9XG5cbiAgICAucGFkLSN7JGl9IHtcbiAgICAgIHBhZGRpbmc6ICN7JHNwYWNlfTtcbiAgICB9XG5cbiAgICAucGFkLXRvcC0jeyRpfSB7XG4gICAgICBwYWRkaW5nLXRvcDogI3skc3BhY2V9O1xuICAgIH1cblxuICAgIC5wYWQtcmlnaHQtI3skaX0ge1xuICAgICAgcGFkZGluZy1yaWdodDogI3skc3BhY2V9O1xuICAgIH1cblxuICAgIC5wYWQtYm90dG9tLSN7JGl9IHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAjeyRzcGFjZX07XG4gICAgfVxuXG4gICAgLnBhZC1sZWZ0LSN7JGl9IHtcbiAgICAgIHBhZGRpbmctbGVmdDogI3skc3BhY2V9O1xuICAgIH1cblxuICAgIC5wYWQtdmVydC0jeyRpfSB7XG4gICAgICBwYWRkaW5nLXRvcDogI3skc3BhY2V9O1xuICAgICAgcGFkZGluZy1ib3R0b206ICN7JHNwYWNlfTtcbiAgICB9XG5cbiAgICAucGFkLXNpZGVzLSN7JGl9IHtcbiAgICAgIHBhZGRpbmctcmlnaHQ6ICN7JHNwYWNlfTtcbiAgICAgIHBhZGRpbmctbGVmdDogI3skc3BhY2V9O1xuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gZ2VuZXJhdGUtbWFyZ2luKCkge1xuICBAZm9yICRpIGZyb20gMSB0aHJvdWdoIChsZW5ndGgoJHNwYWNpbmcpICsgMSkge1xuICAgICRpOiAkaSAtIDE7XG4gICAgJHNwYWNlOiBudWxsO1xuXG4gICAgQGlmICggJGkgPT0gMCApIHtcbiAgICAgICRzcGFjZTogMDtcbiAgICB9IEBlbHNlIHtcbiAgICAgICRzcGFjZTogbnRoKCRzcGFjaW5nLCAkaSk7XG4gICAgfVxuXG4gICAgLm1hcmctI3skaX0ge1xuICAgICAgbWFyZ2luOiAjeyRzcGFjZX07XG4gICAgfVxuXG4gICAgLm1hcmctdG9wLSN7JGl9IHtcbiAgICAgIG1hcmdpbi10b3A6ICN7JHNwYWNlfTtcbiAgICB9XG5cbiAgICAubWFyZy1yaWdodC0jeyRpfSB7XG4gICAgICBtYXJnaW4tcmlnaHQ6ICN7JHNwYWNlfTtcbiAgICB9XG5cbiAgICAubWFyZy1ib3R0b20tI3skaX0ge1xuICAgICAgbWFyZ2luLWJvdHRvbTogI3skc3BhY2V9O1xuICAgIH1cblxuICAgIC5tYXJnLWxlZnQtI3skaX0ge1xuICAgICAgbWFyZ2luLWxlZnQ6ICN7JHNwYWNlfTtcbiAgICB9XG5cbiAgICAubWFyZy12ZXJ0LSN7JGl9IHtcbiAgICAgIG1hcmdpbi10b3A6ICN7JHNwYWNlfTtcbiAgICAgIG1hcmdpbi1ib3R0b206ICN7JHNwYWNlfTtcbiAgICB9XG5cbiAgICAubWFyZy1zaWRlcy0jeyRpfSB7XG4gICAgICBtYXJnaW4tcmlnaHQ6ICN7JHNwYWNlfTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAjeyRzcGFjZX07XG4gICAgfVxuICB9XG59XG5cbi8vIEBpbmNsdWRlIGdlbmVyYXRlLXBhZGRpbmcoKTtcbi8vIEBpbmNsdWRlIGdlbmVyYXRlLW1hcmdpbigpO1xuXG4vKlxuQG1peGluIHN5bmFwc2UtY3VzdG9tKCR2YXIpIHtcbiAgQGlmICgkdmFyID09ICdiaWctZm9udCcpIHtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgfSBAZWxzZWlmICgkdmFyID09ICdzbWFsbC1mb250Jykge1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIH1cbn1cbiovXG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2NC4wLjAgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBhbmQgaU9TLlxuICovXG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscywgLyogMSAqL1xuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbm1haW4sIC8qIDIgKi9cbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7IC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cblxuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxudGVtcGxhdGUsIC8qIDEgKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIHRoZXkgYXJlIGFsc28gYWN0aXZlIG9yIGhvdmVyZWRcbiAqIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmUtd2lkdGg6IDA7XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL1xuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udDogaW5oZXJpdDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCwgLyogMSAqL1xuc2VsZWN0IHsgLyogMiAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBTYWZhcmkuXG4gKiAxLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7IC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGVuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0ZW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBjdXJzb3IgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZGVmYXVsdCBjdXJzb3IgdG8gZGlzYWJsZWQgZWxlbWVudHMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuW2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TLlxuICovXG5cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuaW5wdXQ6LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2Ugb2Ygc2VhcmNoIGlucHV0cyBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIG9uIE9TIFggYW5kXG4gKiBTYWZhcmkgb24gT1MgWC5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuIiwiLy8gVGhlIGJhc2UgdHlwb2dyYXBoeSBlbGVtZW50c1xuYm9keSB7XG4gIEBpbmNsdWRlIGZvbnQtc2l6ZSgxKTtcbiAgQGluY2x1ZGUgbGluZS1oZWlnaHQoMSk7XG5cbiAgY29sb3I6ICRiYXNlLWZvbnQtY29sb3I7XG4gIGZvbnQtZmFtaWx5OiAkYmFzZS1mb250LWZhbWlseTtcbiAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiAna2VybicsICdsaWdhJywgJ3BudW0nO1xufVxuXG5cbi8vIFRoaXMgZ2VuZXJhdGVzIHRoZSBmb250IHNpemVzIGJhc2VkIG9uIG1vZHVsYXIgc2NhbGUgc28gdGhleSdyZSBjb25zaXN0ZW50IGFuZCBlYXN5IHRvIG1hbmFnZS5cbkBlYWNoICRrZXksICR2YWx1ZSBpbiAkbW9kdWxhci1zaXplLW1hcCB7XG4gICRtYWluLWZvbnQtc2l6ZTogbW9kdWxhci1zY2FsZSgkdmFsdWUpO1xuICAkc2NhbGVkLWZvbnQtc2l6ZTogJG1haW4tZm9udC1zaXplICogJHNjYWxlZC1mb250LXJhdGlvO1xuXG4gICN7JGtleX0ge1xuICAgIGZvbnQtc2l6ZTogJHNjYWxlZC1mb250LXNpemU7XG4gICAgZm9udC1zaXplOiByZW0oJHNjYWxlZC1mb250LXNpemUpO1xuXG4gICAgQGluY2x1ZGUgYnAoJHNjYWxlZC1icmVha3BvaW50KSB7XG4gICAgICBmb250LXNpemU6ICRtYWluLWZvbnQtc2l6ZTtcbiAgICAgIGZvbnQtc2l6ZTogcmVtKCRtYWluLWZvbnQtc2l6ZSk7XG4gICAgfVxuICB9XG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIEBpbmNsdWRlIGxpbmUtaGVpZ2h0KDIpO1xuICBAaW5jbHVkZSBtYXJnaW4tdG9wKDIpO1xuICBAaW5jbHVkZSBtYXJnaW4tYm90dG9tKDEpO1xuXG4gIGZvbnQtZmFtaWx5OiAkaGVhZGluZy1mb250LWZhbWlseTtcblxuICAvLyBGb3IgaGVhZGVycyBpbiBhIGNvbmRlbnNlZCBvciBzbWFsbCBhcmVhIHdpdGggbGVzcyByb29tIGZvciBzcGFjaW5nXG4gICYubm8tbWFyZyB7XG4gICAgQGluY2x1ZGUgbWFyZ2luLXRvcCgwLjUpO1xuICAgIEBpbmNsdWRlIG1hcmdpbi1ib3R0b20oMC41KTtcblxuICAgIEBpbmNsdWRlIGxpbmUtaGVpZ2h0KDEuNSk7XG4gIH1cbn1cblxuaDEgKyBoMiB7IEBpbmNsdWRlIG1hcmdpbi10b3AoMSk7IH1cblxuaDIgKyBoMyxcbmgzICsgaDQsXG5oNCArIGg1IHsgQGluY2x1ZGUgbWFyZ2luLXRvcCgwLjUpOyB9XG5cbmg1ICsgaDYgeyBAaW5jbHVkZSBtYXJnaW4tdG9wKC0wLjUpOyB9XG5cbnAgeyBAaW5jbHVkZSBtYXJnaW4tYm90dG9tKDEpOyB9XG5cbmEge1xuICBjb2xvcjogJGFjdGlvbi1jb2xvcjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0cmFuc2l0aW9uOiBjb2xvciAkYmFzZS1kdXJhdGlvbiAkYmFzZS10aW1pbmc7XG5cbiAgJjphY3RpdmUsXG4gICY6Zm9jdXMsXG4gICY6aG92ZXIgeyBjb2xvcjogc2hhZGUoJGFjdGlvbi1jb2xvciwgMjUlKTsgfVxufVxuXG5ociB7XG4gIEBpbmNsdWRlIG1hcmdpbi10b3AoMSk7XG4gIEBpbmNsdWRlIG1hcmdpbi1ib3R0b20oMSk7XG5cbiAgYm9yZGVyOiAkYmFzZS1ib3JkZXIgMCAwIDA7XG59XG5cbnN0cm9uZyB7IGZvbnQtd2VpZ2h0OiA3MDA7IH1cblxuZW0geyBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxuaW1nLFxucGljdHVyZSB7XG4gIG1hcmdpbjogMDtcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG5ibG9ja3F1b3RlIHtcbiAgQGluY2x1ZGUgc3luKHhzLCAwLCAwLCAobWFyZy0wIG1hcmctdC0xIG1hcmctYi0yIGFsaWduLWMgYm9yZGVyLWIpKTtcbiAgQGluY2x1ZGUgc3luKHNtLCAxMCwgMCwgKG1hcmdpbi1hdXRvKSk7XG4gIEBpbmNsdWRlIHN5bihtZCwgNiwgMCwgKG1hcmctMCBtYXJnLWwtMiBmbG9hdC1yKSk7XG4gIEBpbmNsdWRlIHN5bihsZywgNCwgMCwgKCcnKSk7XG5cbiAgQGluY2x1ZGUgcGFkZGluZygkc21hbGwtc3BhY2luZyAkYmFzZS1zcGFjaW5nKTtcblxuICBib3JkZXItdG9wOiAkYmFzZS1ib3JkZXI7XG4gIGJvcmRlci1ib3R0b206ICRiYXNlLWJvcmRlcjtcbn1cbiIsIi8vIFR5cG9ncmFwaHkgbWl4aW5zXG5cbkBtaXhpbiBmb250LXNpemUoJG51bWJlcikge1xuICBmb250LXNpemU6ICN7ICRudW1iZXIgKiAkYmFzZSArICdweCd9O1xuICBmb250LXNpemU6ICN7ICRudW1iZXIgKiAkYmFzZS1yZW0gKyAncmVtJ307XG59XG5cbkBtaXhpbiBsaW5lLWhlaWdodCgkbnVtYmVyKSB7XG4gIGxpbmUtaGVpZ2h0OiAjeyAkbnVtYmVyICogJGxlYWRpbmcgKyAncHgnfTtcbiAgbGluZS1oZWlnaHQ6ICN7ICRudW1iZXIgKiAkbGVhZGluZy1yZW0gKyAncmVtJ307XG59XG5cbkBtaXhpbiBtYXJnaW4tdG9wKCRudW1iZXIpIHtcbiAgbWFyZ2luLXRvcDogI3sgJG51bWJlciAqICRsZWFkaW5nICsgJ3B4J307XG4gIG1hcmdpbi10b3A6ICN7ICRudW1iZXIgKiAkbGVhZGluZy1yZW0gKyAncmVtJ307XG59XG5cbkBtaXhpbiBtYXJnaW4tYm90dG9tKCRudW1iZXIpIHtcbiAgbWFyZ2luLWJvdHRvbTogI3sgJG51bWJlciAqICRsZWFkaW5nICsgJ3B4J307XG4gIG1hcmdpbi1ib3R0b206ICN7ICRudW1iZXIgKiAkbGVhZGluZy1yZW0gKyAncmVtJ307XG59XG5cblxuXG4vLyBNb2JpbGUtZmlyc3QgYnJlYWtwb2ludFxuQG1peGluIGJwKCRwb2ludCkge1xuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkcG9pbnQpIHsgQGNvbnRlbnQ7IH1cbn1cblxuLy8gTWF4LXdpZHRoIGJyZWFrcG9pbnQuIFVzZSBvbmx5IGlmIG5lZWRlZFxuQG1peGluIG1heC1icCgkcG9pbnQpIHtcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHBvaW50KSB7IEBjb250ZW50OyB9XG59XG5cblxuLy8gVGhlIGZpeC1jZWxsIGFuZCBmbGV4LWNlbGwgbWl4aW5zIGluY2x1ZGVkIGNvbXBvbmVudHMgb2YgdGhlIGZpeC1mbGV4IG1peGluLCB3aGljaCBpcyB1c2VkIGZvciBpdGVtcyB3aXRoIGEgZml4ZWQgd2lkdGggb24gb25lIHNpZGUgYW5kIGZsZXhpYmxlIG9uIHRoZSBvdGhlci5cbi8vICRmaXgtZGlyZWN0aW9uIC0gSWYgdGhlIGZpeGVkIGVsZW1lbnQgaXMgb24gdGhlIGxlZnQgb3IgcmlnaHQgc2lkZVxuLy8gJGZpeC13aWR0aCAtIFRoZSB3aWR0aCBvZiB0aGUgZml4ZWQgZWxlbWVudFxuLy8gJGZpeC1tYXJnaW4gLSBUaGUgbWFyZ2luIGxlbmd0aCBiZXR3ZWVuIHRoZSB0d28gaXRlbXNcbi8vIEVYOiBAaW5jbHVkZSBmaXgtZmxleCgnbGVmdCcsIDJlbSwgMTBweCk7XG5AbWl4aW4gZml4LWZsZXgoJGZpeC1kaXJlY3Rpb24sICRmaXgtd2lkdGgsICRmaXgtbWFyZ2luKSB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICB3aWR0aDogMTAwJTtcbiAgQGlmICRmaXgtZGlyZWN0aW9uID09ICdsZWZ0JyB7XG4gICAgJiA+IDpmaXJzdC1jaGlsZCB7XG4gICAgICBAaW5jbHVkZSBmaXgtY2VsbCgkZml4LWRpcmVjdGlvbiwgJGZpeC13aWR0aCk7XG4gICAgICBtYXJnaW4tcmlnaHQ6ICRmaXgtbWFyZ2luO1xuICAgIH1cbiAgICAmID4gOmxhc3QtY2hpbGQge1xuICAgICAgQGluY2x1ZGUgZmxleC1jZWxsO1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgJiA+IDpmaXJzdC1jaGlsZCB7XG4gICAgICBAaW5jbHVkZSBmbGV4LWNlbGw7XG4gIH1cblxuICAgICYgPiA6bGFzdC1jaGlsZCB7XG4gICAgICBAaW5jbHVkZSBmaXgtY2VsbCgkZml4LWRpcmVjdGlvbiwgJGZpeC13aWR0aCk7XG4gICAgICBtYXJnaW4tbGVmdDogJGZpeC1tYXJnaW47XG4gICAgfVxuICB9XG59XG5cbi8vIE1peGluIGRlcGVuZGVuY3kgZm9yIEZpeC1GbGV4XG5AbWl4aW4gZml4LWNlbGwoJGZpeC1kaXJlY3Rpb24sICRmaXgtd2lkdGgpIHtcbiAgd2lkdGg6ICRmaXgtd2lkdGg7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXgtd2lkdGg6IG5vbmU7XG59XG4vLyBNaXhpbiBkZXBlbmRlbmN5IGZvciBGaXgtRmxlXG5AbWl4aW4gZmxleC1jZWxsIHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgd2lkdGg6IDEwMCU7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi8vIFRoaXMgaXMgdGhlIG1haW4gbWl4aW4gZm9yIGNyZWF0aW5nIGtleWZyYW1lIGFuaW1hdGlvbnMgd2l0aCBjcm9zcy1icm93c2VyIGNvbXBhdGliaWxpdHkgYXV0b21hdGljYWxseSBzZXQgdXAuIEl0IG5lZWRzIHRoZSBuYW1lIGFuZCBhbHNvIHRoZSBib2R5IHdpdGggdGhlIGtleWZyYW1lIGxvY2F0aW9ucyBhbmQgcHJvcGVydGllcy5cblxuLy8gQGV4YW1wbGVcbi8vICAgQGluY2x1ZGUga2V5ZnJhbWVzKG5hbWUtaGVyZSkge1xuLy8gICAgICAwJSAgIHsgY29sb3I6IGJsYWNrOyB9XG4vLyAgICAgIDUwJSAgIHsgY29sb3I6IHdoaXRlOyB9XG4vLyAgICAgIDEwMCUgeyBjb2xvcjogYmxhY2s7IH1cbi8vICAgfVxuLy9cbi8vICAgQGluY2x1ZGUgYW5pbWF0aW9uKCduYW1lLWhlcmUgMXMgbGluZWFyIDBzIGluZmluaXRlJyk7XG5AbWl4aW4ga2V5ZnJhbWVzKCRhbmltYXRpb25OYW1lKSB7XG4gICAgQC13ZWJraXQta2V5ZnJhbWVzICN7JGFuaW1hdGlvbk5hbWV9IHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICAgIEAtbW96LWtleWZyYW1lcyAjeyRhbmltYXRpb25OYW1lfSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgICBALW8ta2V5ZnJhbWVzICN7JGFuaW1hdGlvbk5hbWV9IHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICAgIEBrZXlmcmFtZXMgI3skYW5pbWF0aW9uTmFtZX0ge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG4vLy8gVGhpcyBpcyB0aGUgc2V0dXAgZm9yIHRoZSBrZXlmcmFtZXMgbWl4aW5cbi8vLyBAc2VlIGtleWZyYW1lc1xuLy8vIEBncm91cCBEZXBlbmRlbmNpZXNcbkBtaXhpbiBhbmltYXRpb24oJGFuaW1hdGUuLi4pIHtcbiAgJG1heDogbGVuZ3RoKCRhbmltYXRlKTtcbiAgJGFuaW1hdGlvbnM6ICcnO1xuXG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJG1heCB7XG4gICAgJGFuaW1hdGlvbnM6ICN7JGFuaW1hdGlvbnMgKyBudGgoJGFuaW1hdGUsICRpKX07XG5cbiAgICBAaWYgJGkgPCAkbWF4IHtcbiAgICAgICAgJGFuaW1hdGlvbnM6ICN7JGFuaW1hdGlvbnMgKyBcIiwgXCJ9O1xuICAgIH1cbiAgfVxuICAtd2Via2l0LWFuaW1hdGlvbjogJGFuaW1hdGlvbnM7XG4gIC1tb3otYW5pbWF0aW9uOiAgICAkYW5pbWF0aW9ucztcbiAgLW8tYW5pbWF0aW9uOiAgICAgICRhbmltYXRpb25zO1xuICBhbmltYXRpb246ICAgICAgICAgJGFuaW1hdGlvbnM7XG59IiwiLy8gLS0tLS0gR3JpZCBWYXJpYWJsZXMgLS0tLS0gLy9cblxuJG1vYmlsZS1oLXNjcmVlbjogZW0oNDgwcHgpO1xuJHRhYmxldC1zY3JlZW46IGVtKDc4N3B4KTtcbiRkZXNrdG9wLXNjcmVlbjogZW0oOTAwcHgpO1xuJGh1Z2Utc2NyZWVuOiBlbSgxMjAwcHgpO1xuXG5cblxuLy8gLS0tLS0gVHlwb2dyYXBoeSBWYXJpYWJsZXMgLS0tLS0gLy9cblxuJGJhc2UtZm9udC1zaXplOiAxMDU7XG4kbGluZS1oZWlnaHQ6IDI7XG5cbiRiYXNlOiAxNiAqICgkYmFzZS1mb250LXNpemUgLyAxMDApO1xuJGJhc2UtcmVtOiAoJGJhc2UtZm9udC1zaXplIC8gMTAwKTtcbiRsZWFkaW5nOiByb3VuZCgkYmFzZSAqICRsaW5lLWhlaWdodCk7XG4kbGVhZGluZy1yZW06ICRsZWFkaW5nIC8gJGJhc2U7XG5cbiRiYXNlLWZvbnQtZmFtaWx5OiAkaGVsdmV0aWNhO1xuJGhlYWRpbmctZm9udC1mYW1pbHk6ICR2ZXJkYW5hO1xuXG4kbW9kdWxhci1zY2FsZS1yYXRpbzogJG1pbm9yLXRoaXJkO1xuJG1vZHVsYXItc2NhbGUtYmFzZTogJGJhc2UgKiAxcHg7ICAvLyBCYXNlIGZvbnQgc2l6ZSBmb3IgY3JlYXRpbmcgc2NhbGVkIGZvbnQgc2l6ZXMuXG5cbiRzY2FsZWQtZm9udC1yYXRpbzogMC44OyAvLyBXaGVuIHRoZSBzY3JlZW4gZ2V0cyBiZWxvdyBhIGNlcnRhaW4gc2l6ZSwgdGhpcyBpcyB0aGUgcGVyY2VudGFnZSBvZiB0aGUgb3JpZ2luYWwgZm9udCBzaXplIHRoZSBmb250IGJlY29tZXMuXG4kc2NhbGVkLWJyZWFrcG9pbnQ6ICR0YWJsZXQtc2NyZWVuOyAvLyBUaGUgc2NyZWVuIHdpZHRoIHRoZSB0ZXh0IHNjYWxlcyB1cCB0byBpdHMgb3JpZ2luYWwgc2l6ZVxuXG4vLyBUaGlzIHVzZXMgdGhlIEJvdXJib24gbW9kdWxhci1zY2FsZSBmdW5jdGlvbiB0byBjcmVhdGUgdGhlIHN0cnVjdHVyZSBvZiBob3cgZm9udHMgd2lsbCBiZSBzaXplZCBpbiB0aGUgbW9kdWxhciBzY2FsZS4gQW4gZWFjaCBsb29wIGlzIHVzZWQgdG8gZ2VuZXJhdGUgdGhlIHNjYWxlZCBmb250IHNpemVzLlxuJG1vZHVsYXItc2l6ZS1tYXA6IChcbiAgIGgxOiA2LFxuICAgaDI6IDUsXG4gICBoMzogNCxcbiAgIGg0OiAzLFxuICAgaDU6IDIsXG4gICBoNjogMSxcbiAgIGJsb2NrcXVvdGU6IDEsXG4gICBwOiAwLFxuKTtcblxuXG5cbi8vIC0tLS0tIENvbG9yIFZhcmlhYmxlcyAtLS0tLSAvL1xuXG4vLyBUaGlzIG1hcCBpcyB0aGUgYXJyYXkgb2Ygc3RhbmRhcmQgY29sb3JzIGZvciB0aGUgcHJvamVjdC4gVXNlcyB0aGUgQ29sb3IgZnVuY3Rpb24gdG8gcmVmZXJlbmNlLiBGb3IgY29sb3JzIHRoYXQgYXJlIGZyZXF1ZW50bHkgY2hhbmdpbmcgdmFsdWVzLCBrZXkgbmFtZXMgdGhhdCBhcmVuJ3QgY29sb3JzIGFyZSByZWNvbW1lbmRlZCBvdmVyIGxpdGVyYWwgbmFtZXMgKHN1Y2ggYXMgdGhlIG5hbWUgJ2N1dGUnIGluc3RlYWQgb2YgcGluaykuXG4kY29sb3JzOiAoXG4gIGJsYW5rOiAjZmZmLFxuICBhY3Rpb246ICM0NzdkY2EsXG4gIGRhcms6ICMzMzMsXG4gIG1lZGl1bTogIzk5OSxcbiAgbGlnaHQ6ICNkZGRcbik7XG5cbi8vIFRoaXMgaXMgdGhlIGZ1bmN0aW9uIHRvIHB1bGwgY29sb3JzIG91dC4gSXQncyBoZXJlIGluc3RlYWQgb2Ygb24gdGhlIGZ1bmN0aW9ucyBzaGVldCBzbyB0aGUgYmVsb3cgY29sb3IgdmFsdWVzIGNhbiBiZSBzZXQuXG5AZnVuY3Rpb24gY29sb3IoJGtleSkge1xuICBAaWYgbWFwLWhhcy1rZXkoJGNvbG9ycywgJGtleSkge1xuICAgIEByZXR1cm4gbWFwLWdldCgkY29sb3JzLCAka2V5KTtcbiAgfVxuXG4gIEB3YXJuIFwiVW5rbm93biBgI3ska2V5fWAgaW4gJGNvbG9ycy5cIjtcbiAgQHJldHVybiBudWxsO1xufVxuXG4kYmFzZS1mb250LWNvbG9yOiBjb2xvcihkYXJrKTtcbiRhY3Rpb24tY29sb3I6IGNvbG9yKGFjdGlvbik7XG4kYmFzZS1ib3JkZXItY29sb3I6IGNvbG9yKG1lZGl1bSk7XG4kYmFzZS1ib3JkZXI6ICgkbGluZS1oZWlnaHQgKiAxcHgpIHNvbGlkICRiYXNlLWJvcmRlci1jb2xvcjtcbiRiYXNlLWJhY2tncm91bmQtY29sb3I6IGNvbG9yKGJsYW5rKTtcbiRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjogc2hhZGUoJGJhc2UtYmFja2dyb3VuZC1jb2xvciwgNy41JSk7XG5cblxuXG4vLyAtLS0tLSBGb3JtIFZhcmlhYmxlcyAtLS0tLSAvL1xuXG4vLyBUaGUgaW5uZXIgc2hhZG93IHRoYXQgYXBwZWFycyBpbiBmb3JtIGlucHV0IGVsZW1lbnRzLCBzdWNoIGFzIGNoZWNrIGJveGVzLlxuJGZvcm0tYm94LXNoYWRvdzogaW5zZXQgMCAoJGxpbmUtaGVpZ2h0ICogMXB4KSAoJGxpbmUtaGVpZ2h0ICogM3B4KSByZ2JhKCMwMDAsIDAuMDYpO1xuXG4vLyBXaGVuIGNsaWNraW5nIGFuZCBmb2N1c2luZyBvbiBhIGZvcm0gZWxlbWVudCwgbGlrZSBhbiBpbnB1dCBib3gsIHRoaXMgaXMgdGhlIHNoYWRvdyB0aGF0IGFwcGVhcnMgdG8gc2hvdyBpdCdzIHNlbGVjdGVkIHRvIGZpbGwgb3V0LlxuJGZvcm0tYm94LXNoYWRvdy1mb2N1czogJGZvcm0tYm94LXNoYWRvdywgMCAwICgkbGluZS1oZWlnaHQgKiA1cHgpIGFkanVzdC1jb2xvcigkYWN0aW9uLWNvbG9yLCAkbGlnaHRuZXNzOiAtNSUsICRhbHBoYTogLTAuMyk7XG5cblxuXG4vLyAtLS0tLSBMYXlvdXQgVmFyaWFibGVzIC0tLS0tIC8vXG5cbiRiYXNlLWJvcmRlci1yYWRpdXM6ICRsZWFkaW5nLXJlbSAqIDAuMjVlbTsgLy8gU3RhbmRhcmQgYm9yZGVyLXJhZGl1cyBhbW91bnRcbiRiYXNlLXNwYWNpbmc6ICRsZWFkaW5nLXJlbSAqIDFlbTsgLy8gQmFzaWMgc3BhY2luZ1xuJHNtYWxsLXNwYWNpbmc6ICRiYXNlLXNwYWNpbmcgLyAyOyAvLyBIYWxmIG9mIGJhc2ljIHNwYWNpbmdcblxuLy8gTGF5cyBvdXQgdGhlIGRpZmZlcmVudCB6LWluZGV4IHZhbHVlcyB0byBoZWxwIGtlZXAgdGhlbSBvcmdhbml6ZWQuIEJhc2VkIG9mZiB3aGF0IGNvbW1vbSBlbGVtZW50cyB0aGV5J2QgYmUgdXNlZCBmb3IuXG4kei1sYXllcnM6IChcbiAgYm90dG9tbGVzcy1waXQ6IC05OTk5LFxuICBkZWZhdWx0OiAxLFxuICBkcm9wZG93bjogMzAwMCxcbiAgb3ZlcmxheTogNDAwMCxcbiAgbW9kYWw6IDQwMDFcbik7XG5cbi8vIEZvciB0aGUgc3luYXBzZSBncmlkXG4kc3luYXBzZTogKFxuICBjb2x1bW5zOiAxMixcbiAgbGF5b3V0czogKFxuICAgICAgICB4czogIDAsXG4gICAgICAgIHNtOiAgJG1vYmlsZS1oLXNjcmVlbiwgXG4gICAgICAgIG1kOiAgJHRhYmxldC1zY3JlZW4sXG4gICAgICAgIGxnOiAkZGVza3RvcC1zY3JlZW4sXG4gICAgICAgIHhsZzogJGh1Z2Utc2NyZWVuXG4gICAgKSxcbiAgc3BhY2VVbml0czogKFxuICAgICAgJHNtYWxsLXNwYWNpbmcsXG4gICAgICAkYmFzZS1zcGFjaW5nLFxuICAgICAgKCRiYXNlLXNwYWNpbmcgKiAyKSxcbiAgICAgICgkYmFzZS1zcGFjaW5nICogMyksXG4gICAgICAoJGJhc2Utc3BhY2luZyAqIDQpXG4gICAgKVxuKTtcblxuQG1peGluIHN5bmFwc2UtY3VzdG9tKCR2YXIpIHtcbiAgQGlmICgkdmFyID09ICdtYXJnaW4tYXV0bycpIHtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxufVxuXG4vLyAtLS0tLSBBbmltYXRpb24gVmFyaWFibGVzIC0tLS0tIC8vXG5cbiRiYXNlLWR1cmF0aW9uOiAxNTBtczsgLy8gRm9yIGFueSBhbmltYXRpb25zIG9yIHBvc3NpYmx5IHRyYW5zaXRpb25zIHRvb1xuJGJhc2UtdGltaW5nOiBlYXNlOyAvLyBGb3IgdGhlIHRyYW5zaXRpb24gcHJvcGVydHlcbiIsIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuLy8vIEdlb3JnaWEgZm9udCBzdGFjay5cbi8vL1xuLy8vIEB0eXBlIExpc3RcblxuJGdlb3JnaWE6IFwiR2VvcmdpYVwiLCBcIkNhbWJyaWFcIiwgXCJUaW1lcyBOZXcgUm9tYW5cIiwgXCJUaW1lc1wiLCBzZXJpZjtcblxuLy8vIEhlbHZldGljYSBmb250IHN0YWNrLlxuLy8vXG4vLy8gQHR5cGUgTGlzdFxuXG4kaGVsdmV0aWNhOiBcIkhlbHZldGljYSBOZXVlXCIsIFwiSGVsdmV0aWNhXCIsIFwiUm9ib3RvXCIsIFwiQXJpYWxcIiwgc2Fucy1zZXJpZjtcblxuLy8vIEx1Y2lkYSBHcmFuZGUgZm9udCBzdGFjay5cbi8vL1xuLy8vIEB0eXBlIExpc3RcblxuJGx1Y2lkYS1ncmFuZGU6IFwiTHVjaWRhIEdyYW5kZVwiLCBcIlRhaG9tYVwiLCBcIlZlcmRhbmFcIiwgXCJBcmlhbFwiLCBzYW5zLXNlcmlmO1xuXG4vLy8gTW9ub3NwYWNlIGZvbnQgc3RhY2suXG4vLy9cbi8vLyBAdHlwZSBMaXN0XG5cbiRtb25vc3BhY2U6IFwiQml0c3RyZWFtIFZlcmEgU2FucyBNb25vXCIsIFwiQ29uc29sYXNcIiwgXCJDb3VyaWVyXCIsIG1vbm9zcGFjZTtcblxuLy8vIFZlcmRhbmEgZm9udCBzdGFjay5cbi8vL1xuLy8vIEB0eXBlIExpc3RcblxuJHZlcmRhbmE6IFwiVmVyZGFuYVwiLCBcIkdlbmV2YVwiLCBzYW5zLXNlcmlmO1xuIiwiLy8gQ29udmVydCBwaXhlbHMgdG8gcmVtc1xuLy8gZWcuIGZvciBhIHJlbGF0aW9uYWwgdmFsdWUgb2YgMTJweCB3cml0ZSByZW0oMTIpXG4vLyBBc3N1bWVzICRlbS1iYXNlIGlzIHRoZSBmb250LXNpemUgb2YgPGh0bWw+XG5cbkBmdW5jdGlvbiByZW0oJHB4dmFsKSB7XG4gIEBpZiBub3QgdW5pdGxlc3MoJHB4dmFsKSB7XG4gICAgJHB4dmFsOiBzdHJpcC11bml0cygkcHh2YWwpO1xuICB9XG5cbiAgJGJhc2U6ICRlbS1iYXNlO1xuICBAaWYgbm90IHVuaXRsZXNzKCRiYXNlKSB7XG4gICAgJGJhc2U6IHN0cmlwLXVuaXRzKCRiYXNlKTtcbiAgfVxuICBAcmV0dXJuICgkcHh2YWwgLyAkYmFzZSkgKiAxcmVtO1xufVxuIiwiLy8gU2NhbGluZyBWYXJpYWJsZXNcbiRnb2xkZW46ICAgICAgICAgICAxLjYxODtcbiRtaW5vci1zZWNvbmQ6ICAgICAxLjA2NztcbiRtYWpvci1zZWNvbmQ6ICAgICAxLjEyNTtcbiRtaW5vci10aGlyZDogICAgICAxLjI7XG4kbWFqb3ItdGhpcmQ6ICAgICAgMS4yNTtcbiRwZXJmZWN0LWZvdXJ0aDogICAxLjMzMztcbiRhdWdtZW50ZWQtZm91cnRoOiAxLjQxNDtcbiRwZXJmZWN0LWZpZnRoOiAgICAxLjU7XG4kbWlub3Itc2l4dGg6ICAgICAgMS42O1xuJG1ham9yLXNpeHRoOiAgICAgIDEuNjY3O1xuJG1pbm9yLXNldmVudGg6ICAgIDEuNzc4O1xuJG1ham9yLXNldmVudGg6ICAgIDEuODc1O1xuJG9jdGF2ZTogICAgICAgICAgIDI7XG4kbWFqb3ItdGVudGg6ICAgICAgMi41O1xuJG1ham9yLWVsZXZlbnRoOiAgIDIuNjY3O1xuJG1ham9yLXR3ZWxmdGg6ICAgIDM7XG4kZG91YmxlLW9jdGF2ZTogICAgNDtcblxuJG1vZHVsYXItc2NhbGUtcmF0aW86ICRwZXJmZWN0LWZvdXJ0aCAhZGVmYXVsdDtcbiRtb2R1bGFyLXNjYWxlLWJhc2U6IGVtKCRlbS1iYXNlKSAhZGVmYXVsdDtcblxuQGZ1bmN0aW9uIG1vZHVsYXItc2NhbGUoJGluY3JlbWVudCwgJHZhbHVlOiAkbW9kdWxhci1zY2FsZS1iYXNlLCAkcmF0aW86ICRtb2R1bGFyLXNjYWxlLXJhdGlvKSB7XG4gICR2MTogbnRoKCR2YWx1ZSwgMSk7XG4gICR2MjogbnRoKCR2YWx1ZSwgbGVuZ3RoKCR2YWx1ZSkpO1xuICAkdmFsdWU6ICR2MTtcblxuICAvLyBzY2FsZSAkdjIgdG8ganVzdCBhYm92ZSAkdjFcbiAgQHdoaWxlICR2MiA+ICR2MSB7XG4gICAgJHYyOiAoJHYyIC8gJHJhdGlvKTsgLy8gd2lsbCBiZSBvZmYtYnktMVxuICB9XG4gIEB3aGlsZSAkdjIgPCAkdjEge1xuICAgICR2MjogKCR2MiAqICRyYXRpbyk7IC8vIHdpbGwgZml4IG9mZi1ieS0xXG4gIH1cblxuICAvLyBjaGVjayBBRlRFUiBzY2FsaW5nICR2MiB0byBwcmV2ZW50IGRvdWJsZS1jb3VudGluZyBjb3JuZXItY2FzZVxuICAkZG91YmxlLXN0cmFuZGVkOiAkdjIgPiAkdjE7XG5cbiAgQGlmICRpbmNyZW1lbnQgPiAwIHtcbiAgICBAZm9yICRpIGZyb20gMSB0aHJvdWdoICRpbmNyZW1lbnQge1xuICAgICAgQGlmICRkb3VibGUtc3RyYW5kZWQgYW5kICgkdjEgKiAkcmF0aW8pID4gJHYyIHtcbiAgICAgICAgJHZhbHVlOiAkdjI7XG4gICAgICAgICR2MjogKCR2MiAqICRyYXRpbyk7XG4gICAgICB9IEBlbHNlIHtcbiAgICAgICAgJHYxOiAoJHYxICogJHJhdGlvKTtcbiAgICAgICAgJHZhbHVlOiAkdjE7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgQGlmICRpbmNyZW1lbnQgPCAwIHtcbiAgICAvLyBhZGp1c3QgJHYyIHRvIGp1c3QgYmVsb3cgJHYxXG4gICAgQGlmICRkb3VibGUtc3RyYW5kZWQge1xuICAgICAgJHYyOiAoJHYyIC8gJHJhdGlvKTtcbiAgICB9XG5cbiAgICBAZm9yICRpIGZyb20gJGluY3JlbWVudCB0aHJvdWdoIC0xIHtcbiAgICAgIEBpZiAkZG91YmxlLXN0cmFuZGVkIGFuZCAoJHYxIC8gJHJhdGlvKSA8ICR2MiB7XG4gICAgICAgICR2YWx1ZTogJHYyO1xuICAgICAgICAkdjI6ICgkdjIgLyAkcmF0aW8pO1xuICAgICAgfSBAZWxzZSB7XG4gICAgICAgICR2MTogKCR2MSAvICRyYXRpbyk7XG4gICAgICAgICR2YWx1ZTogJHYxO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gJHZhbHVlO1xufVxuIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuXG4vLy8gTWl4ZXMgYSBjb2xvciB3aXRoIGJsYWNrLlxuLy8vXG4vLy8gQHBhcmFtIHtDb2xvcn0gJGNvbG9yXG4vLy9cbi8vLyBAcGFyYW0ge051bWJlciAoUGVyY2VudGFnZSl9ICRwZXJjZW50XG4vLy8gICBUaGUgYW1vdW50IG9mIGJsYWNrIHRvIGJlIG1peGVkIGluLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFVzYWdlXG4vLy8gICAuZWxlbWVudCB7XG4vLy8gICAgIGJhY2tncm91bmQtY29sb3I6IHNoYWRlKCNmZmJiNTIsIDYwJSk7XG4vLy8gICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBjc3MgLSBDU1MgT3V0cHV0XG4vLy8gICAuZWxlbWVudCB7XG4vLy8gICAgIGJhY2tncm91bmQtY29sb3I6ICM2NjRhMjA7XG4vLy8gICB9XG4vLy9cbi8vLyBAcmV0dXJuIHtDb2xvcn1cblxuQGZ1bmN0aW9uIHNoYWRlKCRjb2xvciwgJHBlcmNlbnQpIHtcbiAgQHJldHVybiBtaXgoIzAwMCwgJGNvbG9yLCAkcGVyY2VudCk7XG59XG4iLCJAY2hhcnNldCBcIlVURi04XCI7XG5cbi8vLyBEaXJlY3Rpb25hbC1wcm9wZXJ0eSBtaXhpbnMgYXJlIHNob3J0aGFuZHMgZm9yIHdyaXRpbmcgcHJvcGVydGllcyBsaWtlIHRoZSBmb2xsb3dpbmdcbi8vL1xuLy8vIEBpZ25vcmUgWW91IGNhbiBhbHNvIHVzZSBgZmFsc2VgIGluc3RlYWQgb2YgYG51bGxgLlxuLy8vXG4vLy8gQHBhcmFtIHtMaXN0fSAkdmFsc1xuLy8vICAgTGlzdCBvZiBkaXJlY3Rpb25hbCB2YWx1ZXNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBAaW5jbHVkZSBib3JkZXItc3R5bGUoZG90dGVkIG51bGwpO1xuLy8vICAgICBAaW5jbHVkZSBtYXJnaW4obnVsbCAwIDEwcHgpO1xuLy8vICAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgY3NzIC0gQ1NTIE91dHB1dFxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBib3JkZXItYm90dG9tLXN0eWxlOiBkb3R0ZWQ7XG4vLy8gICAgIGJvcmRlci10b3Atc3R5bGU6IGRvdHRlZDtcbi8vLyAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbi8vLyAgICAgbWFyZ2luLWxlZnQ6IDA7XG4vLy8gICAgIG1hcmdpbi1yaWdodDogMDtcbi8vLyAgIH1cbi8vL1xuLy8vIEByZXF1aXJlIHtmdW5jdGlvbn0gY29udGFpbnMtZmFsc3lcbi8vL1xuLy8vIEByZXR1cm4ge0xpc3R9XG5cbkBmdW5jdGlvbiBjb2xsYXBzZS1kaXJlY3Rpb25hbHMoJHZhbHMpIHtcbiAgJG91dHB1dDogbnVsbDtcblxuICAkYTogbnRoKCR2YWxzLCAxKTtcbiAgJGI6IGlmKGxlbmd0aCgkdmFscykgPCAyLCAkYSwgbnRoKCR2YWxzLCAyKSk7XG4gICRjOiBpZihsZW5ndGgoJHZhbHMpIDwgMywgJGEsIG50aCgkdmFscywgMykpO1xuICAkZDogaWYobGVuZ3RoKCR2YWxzKSA8IDIsICRhLCBudGgoJHZhbHMsIGlmKGxlbmd0aCgkdmFscykgPCA0LCAyLCA0KSkpO1xuXG4gIEBpZiAkYSA9PSAwIHsgJGE6IDA7IH1cbiAgQGlmICRiID09IDAgeyAkYjogMDsgfVxuICBAaWYgJGMgPT0gMCB7ICRjOiAwOyB9XG4gIEBpZiAkZCA9PSAwIHsgJGQ6IDA7IH1cblxuICBAaWYgJGEgPT0gJGIgYW5kICRhID09ICRjIGFuZCAkYSA9PSAkZCB7ICRvdXRwdXQ6ICRhOyAgICAgICAgICB9XG4gIEBlbHNlIGlmICRhID09ICRjIGFuZCAkYiA9PSAkZCAgICAgICAgIHsgJG91dHB1dDogJGEgJGI7ICAgICAgIH1cbiAgQGVsc2UgaWYgJGIgPT0gJGQgICAgICAgICAgICAgICAgICAgICAgeyAkb3V0cHV0OiAkYSAkYiAkYzsgICAgfVxuICBAZWxzZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ICRvdXRwdXQ6ICRhICRiICRjICRkOyB9XG5cbiAgQHJldHVybiAkb3V0cHV0O1xufVxuXG4vLy8gT3V0cHV0IGRpcmVjdGlvbmFsIHByb3BlcnRpZXMsIGZvciBpbnN0YW5jZSBgbWFyZ2luYC5cbi8vL1xuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRwcmVcbi8vLyAgIFByZWZpeCB0byB1c2Vcbi8vLyBAcGFyYW0ge1N0cmluZ30gJHN1ZlxuLy8vICAgU3VmZml4IHRvIHVzZVxuLy8vIEBwYXJhbSB7TGlzdH0gJHZhbHNcbi8vLyAgIExpc3Qgb2YgdmFsdWVzXG4vLy9cbi8vLyBAcmVxdWlyZSB7ZnVuY3Rpb259IGNvbGxhcHNlLWRpcmVjdGlvbmFsc1xuLy8vIEByZXF1aXJlIHtmdW5jdGlvbn0gY29udGFpbnMtZmFsc3lcblxuQG1peGluIGRpcmVjdGlvbmFsLXByb3BlcnR5KCRwcmUsICRzdWYsICR2YWxzKSB7XG4gIC8vIFByb3BlcnR5IE5hbWVzXG4gICR0b3A6ICAgICRwcmUgKyBcIi10b3BcIiAgICArIGlmKCRzdWYsIFwiLSN7JHN1Zn1cIiwgXCJcIik7XG4gICRib3R0b206ICRwcmUgKyBcIi1ib3R0b21cIiArIGlmKCRzdWYsIFwiLSN7JHN1Zn1cIiwgXCJcIik7XG4gICRsZWZ0OiAgICRwcmUgKyBcIi1sZWZ0XCIgICArIGlmKCRzdWYsIFwiLSN7JHN1Zn1cIiwgXCJcIik7XG4gICRyaWdodDogICRwcmUgKyBcIi1yaWdodFwiICArIGlmKCRzdWYsIFwiLSN7JHN1Zn1cIiwgXCJcIik7XG4gICRhbGw6ICAgICRwcmUgKyAgICAgICAgICAgICBpZigkc3VmLCBcIi0jeyRzdWZ9XCIsIFwiXCIpO1xuXG4gICR2YWxzOiBjb2xsYXBzZS1kaXJlY3Rpb25hbHMoJHZhbHMpO1xuXG4gIEBpZiBjb250YWlucy1mYWxzeSgkdmFscykge1xuICAgIEBpZiBudGgoJHZhbHMsIDEpIHsgI3skdG9wfTogbnRoKCR2YWxzLCAxKTsgfVxuXG4gICAgQGlmIGxlbmd0aCgkdmFscykgPT0gMSB7XG4gICAgICBAaWYgbnRoKCR2YWxzLCAxKSB7ICN7JHJpZ2h0fTogbnRoKCR2YWxzLCAxKTsgfVxuICAgIH0gQGVsc2Uge1xuICAgICAgQGlmIG50aCgkdmFscywgMikgeyAjeyRyaWdodH06IG50aCgkdmFscywgMik7IH1cbiAgICB9XG5cbiAgICBAaWYgbGVuZ3RoKCR2YWxzKSA9PSAyIHtcbiAgICAgIEBpZiBudGgoJHZhbHMsIDEpIHsgI3skYm90dG9tfTogbnRoKCR2YWxzLCAxKTsgfVxuICAgICAgQGlmIG50aCgkdmFscywgMikgeyAjeyRsZWZ0fTogICBudGgoJHZhbHMsIDIpOyB9XG4gICAgfSBAZWxzZSBpZiBsZW5ndGgoJHZhbHMpID09IDMge1xuICAgICAgQGlmIG50aCgkdmFscywgMykgeyAjeyRib3R0b219OiBudGgoJHZhbHMsIDMpOyB9XG4gICAgICBAaWYgbnRoKCR2YWxzLCAyKSB7ICN7JGxlZnR9OiAgIG50aCgkdmFscywgMik7IH1cbiAgICB9IEBlbHNlIGlmIGxlbmd0aCgkdmFscykgPT0gNCB7XG4gICAgICBAaWYgbnRoKCR2YWxzLCAzKSB7ICN7JGJvdHRvbX06IG50aCgkdmFscywgMyk7IH1cbiAgICAgIEBpZiBudGgoJHZhbHMsIDQpIHsgI3skbGVmdH06ICAgbnRoKCR2YWxzLCA0KTsgfVxuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgI3skYWxsfTogJHZhbHM7XG4gIH1cbn1cbiIsImJvZHkge1xuICBAaW5jbHVkZSBzeW4oeHMsIDEyLCAwLCAocGFkLTIgYm9yZGVyLWIpKTtcbiAgQGluY2x1ZGUgc3luKG1kLCAxMCwgMSwgKHBhZC0xKSk7XG4gIEBpbmNsdWRlIHN5bih4bGcsIDgsIDIsICgnJykpO1xufVxuIiwidGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBmb250LWZlYXR1cmUtc2V0dGluZ3M6ICdrZXJuJywgJ2xpZ2EnLCAndG51bSc7XG4gIG1hcmdpbjogJHNtYWxsLXNwYWNpbmcgMDtcbiAgdGFibGUtbGF5b3V0OiBmaXhlZDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRoIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHNoYWRlKCRiYXNlLWJvcmRlci1jb2xvciwgMjUlKTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgcGFkZGluZzogJHNtYWxsLXNwYWNpbmcgMDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxudGQge1xuICBib3JkZXItYm90dG9tOiAkYmFzZS1ib3JkZXI7XG4gIHBhZGRpbmc6ICRzbWFsbC1zcGFjaW5nIDA7XG59XG5cbnRyLFxudGQsXG50aCB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG4iLCJmaWVsZHNldCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjtcbiAgYm9yZGVyOiAkYmFzZS1ib3JkZXI7XG4gIG1hcmdpbjogMCAwICRzbWFsbC1zcGFjaW5nO1xuICBwYWRkaW5nOiAkc21hbGwtc3BhY2luZyAkYmFzZS1zcGFjaW5nO1xuICBib3JkZXItcmFkaXVzOiAoJGJhc2UtYm9yZGVyLXJhZGl1cyAvIDIpO1xufVxuXG5pbnB1dCxcbmxhYmVsLFxuc2VsZWN0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtZmFtaWx5OiAkYmFzZS1mb250LWZhbWlseTtcbiAgZm9udC1zaXplOiAkYmFzZS1mb250LXNpemU7XG59XG5cbmxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbWFyZ2luLWJvdHRvbTogJHNtYWxsLXNwYWNpbmcgLyAyO1xuXG4gICYucmVxdWlyZWQ6OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIipcIjtcbiAgfVxuXG4gIGFiYnIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxuI3skYWxsLXRleHQtaW5wdXRzfSxcbnNlbGVjdFttdWx0aXBsZT1tdWx0aXBsZV0ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFzZS1iYWNrZ3JvdW5kLWNvbG9yO1xuICBib3JkZXI6ICRiYXNlLWJvcmRlcjtcbiAgYm9yZGVyLXJhZGl1czogJGJhc2UtYm9yZGVyLXJhZGl1cztcbiAgYm94LXNoYWRvdzogJGZvcm0tYm94LXNoYWRvdztcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZm9udC1mYW1pbHk6ICRiYXNlLWZvbnQtZmFtaWx5O1xuICBmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZTtcbiAgbWFyZ2luLWJvdHRvbTogJHNtYWxsLXNwYWNpbmc7XG4gIHBhZGRpbmc6ICRiYXNlLXNwYWNpbmcgLyAzO1xuICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgJGJhc2UtZHVyYXRpb24gJGJhc2UtdGltaW5nO1xuICB3aWR0aDogMTAwJTtcblxuICAmOmhvdmVyIHtcbiAgICBib3JkZXItY29sb3I6IHNoYWRlKCRiYXNlLWJvcmRlci1jb2xvciwgMjAlKTtcbiAgfVxuXG4gICY6Zm9jdXMge1xuICAgIGJvcmRlci1jb2xvcjogJGFjdGlvbi1jb2xvcjtcbiAgICBib3gtc2hhZG93OiAkZm9ybS1ib3gtc2hhZG93LWZvY3VzO1xuICAgIG91dGxpbmU6IG5vbmU7XG4gIH1cblxuICAmOmRpc2FibGVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBzaGFkZSgkYmFzZS1iYWNrZ3JvdW5kLWNvbG9yLCA1JSk7XG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcblxuICAgICY6aG92ZXIge1xuICAgICAgYm9yZGVyOiAkYmFzZS1ib3JkZXI7XG4gICAgfVxuICB9XG59XG5cbnRleHRhcmVhIHtcbiAgcmVzaXplOiB2ZXJ0aWNhbDtcbn1cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGRpc3BsYXk6IGlubGluZTtcbiAgbWFyZ2luLXJpZ2h0OiAkc21hbGwtc3BhY2luZyAvIDI7XG59XG5cbmlucHV0W3R5cGU9XCJmaWxlXCJdIHtcbiAgbWFyZ2luLWJvdHRvbTogJHNtYWxsLXNwYWNpbmc7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5zZWxlY3Qge1xuICBtYXJnaW4tYm90dG9tOiAkYmFzZS1zcGFjaW5nO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHdpZHRoOiBhdXRvO1xufVxuIiwidWwsXG5vbCB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW4tYm90dG9tOiAkc21hbGwtc3BhY2luZztcbiAgcGFkZGluZy1sZWZ0OiAkYmFzZS1zcGFjaW5nICogMS43NTtcbn1cblxudWwgeyBsaXN0LXN0eWxlLXR5cGU6IGRpc2M7IH1cblxub2wgeyBsaXN0LXN0eWxlLXR5cGU6IGRlY2ltYWw7IH1cblxuZGwge1xuICBtYXJnaW4tYm90dG9tOiAkc21hbGwtc3BhY2luZztcblxuICBkdCB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgbWFyZ2luLXRvcDogJHNtYWxsLXNwYWNpbmc7XG4gIH1cblxuICBkZCB7IG1hcmdpbjogMDsgfVxufVxuIiwicHJlIHtcbiAgcGFkZGluZzogJGJhc2Utc3BhY2luZztcbiAgb3ZlcmZsb3c6IHNjcm9sbDtcblxuICBjb2xvcjogY29sb3IobGlnaHQpO1xuICBmb250LWZhbWlseTogJG1vbm9zcGFjZTtcblxuICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvcihkYXJrKTtcbn1cbiIsIiN7JGFsbC1idXR0b25zfSB7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICRhY3Rpb24tY29sb3I7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogJGJhc2UtYm9yZGVyLXJhZGl1cztcbiAgY29sb3I6ICNmZmY7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LWZhbWlseTogJGJhc2UtZm9udC1mYW1pbHk7XG4gIGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIHBhZGRpbmc6ICRzbWFsbC1zcGFjaW5nICRiYXNlLXNwYWNpbmc7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAkYmFzZS1kdXJhdGlvbiAkYmFzZS10aW1pbmc7XG4gIHVzZXItc2VsZWN0OiBub25lO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuXG4gICY6aG92ZXIsXG4gICY6Zm9jdXMge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHNoYWRlKCRhY3Rpb24tY29sb3IsIDIwJSk7XG4gICAgY29sb3I6ICNmZmY7XG4gIH1cblxuICAmOmRpc2FibGVkIHtcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgIG9wYWNpdHk6IDAuNTtcblxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGFjdGlvbi1jb2xvcjtcbiAgICB9XG4gIH1cbn1cbiIsIi8qXG5TQ1NTIHZhcmlhYmxlcyBhcmUgaW5mb3JtYXRpb24gYWJvdXQgaWNvbidzIGNvbXBpbGVkIHN0YXRlLCBzdG9yZWQgdW5kZXIgaXRzIG9yaWdpbmFsIGZpbGUgbmFtZVxuXG4uaWNvbi1ob21lIHtcbiAgd2lkdGg6ICRpY29uLWhvbWUtd2lkdGg7XG59XG5cblRoZSBsYXJnZSBhcnJheS1saWtlIHZhcmlhYmxlcyBjb250YWluIGFsbCBpbmZvcm1hdGlvbiBhYm91dCBhIHNpbmdsZSBpY29uXG4kaWNvbi1ob21lOiB4IHkgb2Zmc2V0X3ggb2Zmc2V0X3kgd2lkdGggaGVpZ2h0IHRvdGFsX3dpZHRoIHRvdGFsX2hlaWdodCBpbWFnZV9wYXRoO1xuXG5BdCB0aGUgYm90dG9tIG9mIHRoaXMgc2VjdGlvbiwgd2UgcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgc3ByaXRlc2hlZXQgaXRzZWxmXG4kc3ByaXRlc2hlZXQ6IHdpZHRoIGhlaWdodCBpbWFnZSAkc3ByaXRlc2hlZXQtc3ByaXRlcztcbiovXG4kZmFjZWJvb2stbmFtZTogJ2ZhY2Vib29rJztcbiRmYWNlYm9vay14OiAwcHg7XG4kZmFjZWJvb2steTogMTIwcHg7XG4kZmFjZWJvb2stb2Zmc2V0LXg6IDBweDtcbiRmYWNlYm9vay1vZmZzZXQteTogLTEyMHB4O1xuJGZhY2Vib29rLXdpZHRoOiAxMjFweDtcbiRmYWNlYm9vay1oZWlnaHQ6IDEyMHB4O1xuJGZhY2Vib29rLXRvdGFsLXdpZHRoOiAyOTFweDtcbiRmYWNlYm9vay10b3RhbC1oZWlnaHQ6IDI0MHB4O1xuJGZhY2Vib29rLWltYWdlOiAnLi4vaW1nL3Nwcml0ZXMucG5nJztcbiRmYWNlYm9vazogKDBweCwgMTIwcHgsIDBweCwgLTEyMHB4LCAxMjFweCwgMTIwcHgsIDI5MXB4LCAyNDBweCwgJy4uL2ltZy9zcHJpdGVzLnBuZycsICdmYWNlYm9vaycsICk7XG4kZ2l0aHViLW5hbWU6ICdnaXRodWInO1xuJGdpdGh1Yi14OiAxNDlweDtcbiRnaXRodWIteTogMHB4O1xuJGdpdGh1Yi1vZmZzZXQteDogLTE0OXB4O1xuJGdpdGh1Yi1vZmZzZXQteTogMHB4O1xuJGdpdGh1Yi13aWR0aDogMTQycHg7XG4kZ2l0aHViLWhlaWdodDogMTIwcHg7XG4kZ2l0aHViLXRvdGFsLXdpZHRoOiAyOTFweDtcbiRnaXRodWItdG90YWwtaGVpZ2h0OiAyNDBweDtcbiRnaXRodWItaW1hZ2U6ICcuLi9pbWcvc3ByaXRlcy5wbmcnO1xuJGdpdGh1YjogKDE0OXB4LCAwcHgsIC0xNDlweCwgMHB4LCAxNDJweCwgMTIwcHgsIDI5MXB4LCAyNDBweCwgJy4uL2ltZy9zcHJpdGVzLnBuZycsICdnaXRodWInLCApO1xuJHR3aXR0ZXItbmFtZTogJ3R3aXR0ZXInO1xuJHR3aXR0ZXIteDogMHB4O1xuJHR3aXR0ZXIteTogMHB4O1xuJHR3aXR0ZXItb2Zmc2V0LXg6IDBweDtcbiR0d2l0dGVyLW9mZnNldC15OiAwcHg7XG4kdHdpdHRlci13aWR0aDogMTQ5cHg7XG4kdHdpdHRlci1oZWlnaHQ6IDEyMHB4O1xuJHR3aXR0ZXItdG90YWwtd2lkdGg6IDI5MXB4O1xuJHR3aXR0ZXItdG90YWwtaGVpZ2h0OiAyNDBweDtcbiR0d2l0dGVyLWltYWdlOiAnLi4vaW1nL3Nwcml0ZXMucG5nJztcbiR0d2l0dGVyOiAoMHB4LCAwcHgsIDBweCwgMHB4LCAxNDlweCwgMTIwcHgsIDI5MXB4LCAyNDBweCwgJy4uL2ltZy9zcHJpdGVzLnBuZycsICd0d2l0dGVyJywgKTtcbiR5b3V0dWJlLW5hbWU6ICd5b3V0dWJlJztcbiR5b3V0dWJlLXg6IDEyMXB4O1xuJHlvdXR1YmUteTogMTIwcHg7XG4keW91dHViZS1vZmZzZXQteDogLTEyMXB4O1xuJHlvdXR1YmUtb2Zmc2V0LXk6IC0xMjBweDtcbiR5b3V0dWJlLXdpZHRoOiAxMjBweDtcbiR5b3V0dWJlLWhlaWdodDogMTIwcHg7XG4keW91dHViZS10b3RhbC13aWR0aDogMjkxcHg7XG4keW91dHViZS10b3RhbC1oZWlnaHQ6IDI0MHB4O1xuJHlvdXR1YmUtaW1hZ2U6ICcuLi9pbWcvc3ByaXRlcy5wbmcnO1xuJHlvdXR1YmU6ICgxMjFweCwgMTIwcHgsIC0xMjFweCwgLTEyMHB4LCAxMjBweCwgMTIwcHgsIDI5MXB4LCAyNDBweCwgJy4uL2ltZy9zcHJpdGVzLnBuZycsICd5b3V0dWJlJywgKTtcbiRzcHJpdGVzaGVldC13aWR0aDogMjkxcHg7XG4kc3ByaXRlc2hlZXQtaGVpZ2h0OiAyNDBweDtcbiRzcHJpdGVzaGVldC1pbWFnZTogJy4uL2ltZy9zcHJpdGVzLnBuZyc7XG4kc3ByaXRlc2hlZXQtc3ByaXRlczogKCRmYWNlYm9vaywgJGdpdGh1YiwgJHR3aXR0ZXIsICR5b3V0dWJlLCApO1xuJHNwcml0ZXNoZWV0OiAoMjkxcHgsIDI0MHB4LCAnLi4vaW1nL3Nwcml0ZXMucG5nJywgJHNwcml0ZXNoZWV0LXNwcml0ZXMsICk7XG5cbi8qXG5UaGUgcHJvdmlkZWQgbWl4aW5zIGFyZSBpbnRlbmRlZCB0byBiZSB1c2VkIHdpdGggdGhlIGFycmF5LWxpa2UgdmFyaWFibGVzXG5cbi5pY29uLWhvbWUge1xuICBAaW5jbHVkZSBzcHJpdGUtd2lkdGgoJGljb24taG9tZSk7XG59XG5cbi5pY29uLWVtYWlsIHtcbiAgQGluY2x1ZGUgc3ByaXRlKCRpY29uLWVtYWlsKTtcbn1cbiovXG5AbWl4aW4gc3ByaXRlLXdpZHRoKCRzcHJpdGUpIHtcbiAgd2lkdGg6IG50aCgkc3ByaXRlLCA1KTtcbn1cblxuQG1peGluIHNwcml0ZS1oZWlnaHQoJHNwcml0ZSkge1xuICBoZWlnaHQ6IG50aCgkc3ByaXRlLCA2KTtcbn1cblxuQG1peGluIHNwcml0ZS1wb3NpdGlvbigkc3ByaXRlKSB7XG4gICRzcHJpdGUtb2Zmc2V0LXg6IG50aCgkc3ByaXRlLCAzKTtcbiAgJHNwcml0ZS1vZmZzZXQteTogbnRoKCRzcHJpdGUsIDQpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAkc3ByaXRlLW9mZnNldC14ICAkc3ByaXRlLW9mZnNldC15O1xufVxuXG5AbWl4aW4gc3ByaXRlLWltYWdlKCRzcHJpdGUpIHtcbiAgJHNwcml0ZS1pbWFnZTogbnRoKCRzcHJpdGUsIDkpO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoI3skc3ByaXRlLWltYWdlfSk7XG59XG5cbkBtaXhpbiBzcHJpdGUoJHNwcml0ZSkge1xuICBAaW5jbHVkZSBzcHJpdGUtaW1hZ2UoJHNwcml0ZSk7XG4gIEBpbmNsdWRlIHNwcml0ZS1wb3NpdGlvbigkc3ByaXRlKTtcbiAgQGluY2x1ZGUgc3ByaXRlLXdpZHRoKCRzcHJpdGUpO1xuICBAaW5jbHVkZSBzcHJpdGUtaGVpZ2h0KCRzcHJpdGUpO1xufVxuXG4vKlxuVGhlIGBzcHJpdGVzYCBtaXhpbiBnZW5lcmF0ZXMgaWRlbnRpY2FsIG91dHB1dCB0byB0aGUgQ1NTIHRlbXBsYXRlXG4gIGJ1dCBjYW4gYmUgb3ZlcnJpZGRlbiBpbnNpZGUgb2YgU0NTU1xuXG5AaW5jbHVkZSBzcHJpdGVzKCRzcHJpdGVzaGVldC1zcHJpdGVzKTtcbiovXG5AbWl4aW4gc3ByaXRlcygkc3ByaXRlcykge1xuICBAZWFjaCAkc3ByaXRlIGluICRzcHJpdGVzIHtcbiAgICAkc3ByaXRlLW5hbWU6IG50aCgkc3ByaXRlLCAxMCk7XG4gICAgLiN7JHNwcml0ZS1uYW1lfSB7XG4gICAgICBAaW5jbHVkZSBzcHJpdGUoJHNwcml0ZSk7XG4gICAgfVxuICB9XG59XG4iLCJAbWl4aW4gc3ByaXRlcygkc3ByaXRlcykge1xuICBAZWFjaCAkc3ByaXRlIGluICRzcHJpdGVzIHtcbiAgICAkc3ByaXRlLW5hbWU6IG50aCgkc3ByaXRlLCAxMCk7XG4gICAgLiN7JHNwcml0ZS1uYW1lfSB7XG4gICAgICBAaW5jbHVkZSBzcHJpdGUoJHNwcml0ZSk7XG4gICAgICBcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIG1hcmdpbjogJHNtYWxsLXNwYWNpbmc7XG4gICAgXG4gICAgfVxuICB9XG59XG5cbkBpbmNsdWRlIHNwcml0ZXMoJHNwcml0ZXNoZWV0LXNwcml0ZXMpOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */